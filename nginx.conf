upstream api_backend {
    server kcs-api:4500;
}

upstream websocket_backend {
    server kcs-api:4501;
}

# Note: MediaSoup RTC ports (40000-40100) bypass nginx for direct WebRTC connections
# These ports are exposed directly in docker-compose.yaml for peer-to-peer communication

# Rate limiting for API calls
limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;
limit_req_zone $binary_remote_addr zone=websocket:10m rate=200r/m;

server {
    listen 80;
    listen [::]:80;
    server_name devapi.letscatchup-kcs.com;
    
    # For now, serve HTTP directly for testing
    # Later: return 301 https://$server_name$request_uri;
    
    # Increase client max body size for file uploads
    client_max_body_size 100M;
    
    # Increase timeouts for large file uploads and long-polling connections
    client_body_timeout 300s;
    proxy_read_timeout 300s;
    proxy_send_timeout 300s;
    proxy_connect_timeout 60s;
    
    # Buffer settings for large files
    client_body_buffer_size 2M;
    proxy_buffering off;
    
    # WebSocket and Socket.IO support for real-time communication
    location /socket.io/ {
        limit_req zone=websocket burst=50 nodelay;
        
        proxy_pass http://websocket_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket specific timeouts
        proxy_read_timeout 86400s;
        proxy_send_timeout 86400s;
        
        # Disable buffering for real-time communication
        proxy_buffering off;
        proxy_cache off;
    }
    
    # MediaSoup signaling (WebRTC signaling via HTTP API)
    location /api/webrtc/ {
        limit_req zone=api burst=50 nodelay;
        
        proxy_pass http://api_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Longer timeouts for WebRTC signaling
        proxy_read_timeout 60s;
        proxy_send_timeout 60s;
    }
    
    # API routes
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://api_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Let the application handle CORS (remove nginx CORS headers)
        # No CORS headers here - handled by Hono middleware
    }
    
    # Health check endpoint
    location /health {
        proxy_pass http://api_backend/api/health;
        proxy_set_header Host $host;
        access_log off;
    }
    
    # Static files and uploads
    location /uploads/ {
        proxy_pass http://api_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache static files
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # Default route
    location / {
        proxy_pass http://api_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# HTTPS server (commented out until SSL certificates are available)
# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#     server_name devapi.letscatchup-kcs.com;
#     
#     # SSL Configuration
#     ssl_certificate /etc/nginx/ssl/cert.pem;
#     ssl_certificate_key /etc/nginx/ssl/key.pem;
#     ssl_session_timeout 1d;
#     ssl_session_cache shared:SSL:50m;
#     ssl_session_tickets off;
#     
#     # Modern SSL configuration
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
#     
#     # Security headers
#     add_header Strict-Transport-Security "max-age=63072000" always;
#     add_header X-Frame-Options DENY;
#     add_header X-Content-Type-Options nosniff;
#     add_header X-XSS-Protection "1; mode=block";
#     
#     # Increase client max body size for file uploads
#     client_max_body_size 100M;
#     
#     # Increase timeouts for large file uploads and long-polling connections
#     client_body_timeout 300s;
#     proxy_read_timeout 300s;
#     proxy_send_timeout 300s;
#     proxy_connect_timeout 60s;
#     
#     # Buffer settings for large files
#     client_body_buffer_size 2M;
#     proxy_buffering off;
#     
#     # WebSocket and Socket.IO support for real-time communication
#     location /socket.io/ {
#         limit_req zone=websocket burst=50 nodelay;
#         
#         proxy_pass http://websocket_backend;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         
#         # WebSocket specific timeouts
#         proxy_read_timeout 86400s;
#         proxy_send_timeout 86400s;
#         
#         # Disable buffering for real-time communication
#         proxy_buffering off;
#         proxy_cache off;
#     }
#     
#     # API routes
#     location /api/ {
#         limit_req zone=api burst=20 nodelay;
#         
#         proxy_pass http://api_backend;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         
#         # Let the application handle CORS (remove nginx CORS headers)
#         # No CORS headers here - handled by Hono middleware
#     }
#     
#     # Health check endpoint
#     location /health {
#         proxy_pass http://api_backend/api/health;
#         proxy_set_header Host $host;
#         access_log off;
#     }
#     
#     # Static files and uploads
#     location /uploads/ {
#         proxy_pass http://api_backend;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         
#         # Cache static files
#         expires 1y;
#         add_header Cache-Control "public, immutable";
#     }
#     
#     # Default route
#     location / {
#         proxy_pass http://api_backend;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
# }

# HTTP server for development (remove in production)
server {
    listen 8080;
    listen [::]:8080;
    server_name _;
    
    # Increase client max body size for file uploads
    client_max_body_size 100M;
    
    # Increase timeouts for large file uploads and long-polling connections
    client_body_timeout 300s;
    proxy_read_timeout 300s;
    proxy_send_timeout 300s;
    proxy_connect_timeout 60s;
    
    # Buffer settings for large files
    client_body_buffer_size 2M;
    proxy_buffering off;
    
    # WebSocket and Socket.IO support for real-time communication
    location /socket.io/ {
        proxy_pass http://websocket_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket specific timeouts
        proxy_read_timeout 86400s;
        proxy_send_timeout 86400s;
        
        # Disable buffering for real-time communication
        proxy_buffering off;
        proxy_cache off;
    }
    
    # All other routes
    location / {
        proxy_pass http://api_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Let the application handle CORS (remove nginx CORS headers)
        # No CORS headers here - handled by Hono middleware
    }
}
