9369264c5abaee4f2c2df020c1d854af
/* istanbul ignore next */
function cov_jpj7bciqp() {
  var path = "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/services/bulk_operations.service.ts";
  var hash = "e9b20ea3e2a201a5d901719da98eaddddc69ecd6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/services/bulk_operations.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 26
        },
        end: {
          line: 8,
          column: 36
        }
      },
      "1": {
        start: {
          line: 9,
          column: 23
        },
        end: {
          line: 21,
          column: 9
        }
      },
      "2": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 141,
          column: 9
        }
      },
      "3": {
        start: {
          line: 23,
          column: 36
        },
        end: {
          line: 23,
          column: 79
        }
      },
      "4": {
        start: {
          line: 24,
          column: 30
        },
        end: {
          line: 24,
          column: 66
        }
      },
      "5": {
        start: {
          line: 25,
          column: 36
        },
        end: {
          line: 25,
          column: 76
        }
      },
      "6": {
        start: {
          line: 26,
          column: 28
        },
        end: {
          line: 26,
          column: 62
        }
      },
      "7": {
        start: {
          line: 28,
          column: 29
        },
        end: {
          line: 31,
          column: 14
        }
      },
      "8": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 34,
          column: 13
        }
      },
      "9": {
        start: {
          line: 33,
          column: 16
        },
        end: {
          line: 33,
          column: 58
        }
      },
      "10": {
        start: {
          line: 36,
          column: 35
        },
        end: {
          line: 36,
          column: 114
        }
      },
      "11": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 37,
          column: 59
        }
      },
      "12": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 134,
          column: 13
        }
      },
      "13": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 133,
          column: 17
        }
      },
      "14": {
        start: {
          line: 42,
          column: 40
        },
        end: {
          line: 47,
          column: 22
        }
      },
      "15": {
        start: {
          line: 48,
          column: 20
        },
        end: {
          line: 60,
          column: 21
        }
      },
      "16": {
        start: {
          line: 49,
          column: 24
        },
        end: {
          line: 49,
          column: 41
        }
      },
      "17": {
        start: {
          line: 50,
          column: 24
        },
        end: {
          line: 58,
          column: 27
        }
      },
      "18": {
        start: {
          line: 59,
          column: 24
        },
        end: {
          line: 59,
          column: 33
        }
      },
      "19": {
        start: {
          line: 62,
          column: 41
        },
        end: {
          line: 62,
          column: 122
        }
      },
      "20": {
        start: {
          line: 63,
          column: 38
        },
        end: {
          line: 63,
          column: 75
        }
      },
      "21": {
        start: {
          line: 65,
          column: 37
        },
        end: {
          line: 73,
          column: 23
        }
      },
      "22": {
        start: {
          line: 65,
          column: 75
        },
        end: {
          line: 73,
          column: 21
        }
      },
      "23": {
        start: {
          line: 75,
          column: 35
        },
        end: {
          line: 103,
          column: 21
        }
      },
      "24": {
        start: {
          line: 104,
          column: 39
        },
        end: {
          line: 104,
          column: 63
        }
      },
      "25": {
        start: {
          line: 106,
          column: 20
        },
        end: {
          line: 108,
          column: 21
        }
      },
      "26": {
        start: {
          line: 107,
          column: 24
        },
        end: {
          line: 107,
          column: 92
        }
      },
      "27": {
        start: {
          line: 109,
          column: 20
        },
        end: {
          line: 109,
          column: 40
        }
      },
      "28": {
        start: {
          line: 110,
          column: 20
        },
        end: {
          line: 110,
          column: 97
        }
      },
      "29": {
        start: {
          line: 111,
          column: 20
        },
        end: {
          line: 118,
          column: 23
        }
      },
      "30": {
        start: {
          line: 120,
          column: 20
        },
        end: {
          line: 122,
          column: 21
        }
      },
      "31": {
        start: {
          line: 121,
          column: 24
        },
        end: {
          line: 121,
          column: 97
        }
      },
      "32": {
        start: {
          line: 125,
          column: 20
        },
        end: {
          line: 125,
          column: 36
        }
      },
      "33": {
        start: {
          line: 126,
          column: 20
        },
        end: {
          line: 132,
          column: 23
        }
      },
      "34": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 93
        }
      },
      "35": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 136,
          column: 71
        }
      },
      "36": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 26
        }
      },
      "37": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 140,
          column: 68
        }
      },
      "38": {
        start: {
          line: 149,
          column: 26
        },
        end: {
          line: 149,
          column: 36
        }
      },
      "39": {
        start: {
          line: 150,
          column: 23
        },
        end: {
          line: 162,
          column: 9
        }
      },
      "40": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 240,
          column: 9
        }
      },
      "41": {
        start: {
          line: 164,
          column: 28
        },
        end: {
          line: 164,
          column: 62
        }
      },
      "42": {
        start: {
          line: 165,
          column: 39
        },
        end: {
          line: 165,
          column: 81
        }
      },
      "43": {
        start: {
          line: 166,
          column: 36
        },
        end: {
          line: 166,
          column: 76
        }
      },
      "44": {
        start: {
          line: 168,
          column: 31
        },
        end: {
          line: 168,
          column: 104
        }
      },
      "45": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 169,
          column: 55
        }
      },
      "46": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 233,
          column: 13
        }
      },
      "47": {
        start: {
          line: 172,
          column: 16
        },
        end: {
          line: 232,
          column: 17
        }
      },
      "48": {
        start: {
          line: 174,
          column: 20
        },
        end: {
          line: 186,
          column: 21
        }
      },
      "49": {
        start: {
          line: 175,
          column: 24
        },
        end: {
          line: 175,
          column: 41
        }
      },
      "50": {
        start: {
          line: 176,
          column: 40
        },
        end: {
          line: 176,
          column: 78
        }
      },
      "51": {
        start: {
          line: 177,
          column: 24
        },
        end: {
          line: 184,
          column: 27
        }
      },
      "52": {
        start: {
          line: 185,
          column: 24
        },
        end: {
          line: 185,
          column: 33
        }
      },
      "53": {
        start: {
          line: 187,
          column: 36
        },
        end: {
          line: 187,
          column: 74
        }
      },
      "54": {
        start: {
          line: 188,
          column: 20
        },
        end: {
          line: 216,
          column: 21
        }
      },
      "55": {
        start: {
          line: 190,
          column: 24
        },
        end: {
          line: 190,
          column: 85
        }
      },
      "56": {
        start: {
          line: 191,
          column: 24
        },
        end: {
          line: 191,
          column: 44
        }
      },
      "57": {
        start: {
          line: 192,
          column: 24
        },
        end: {
          line: 192,
          column: 106
        }
      },
      "58": {
        start: {
          line: 193,
          column: 24
        },
        end: {
          line: 200,
          column: 27
        }
      },
      "59": {
        start: {
          line: 204,
          column: 46
        },
        end: {
          line: 204,
          column: 264
        }
      },
      "60": {
        start: {
          line: 205,
          column: 24
        },
        end: {
          line: 205,
          column: 44
        }
      },
      "61": {
        start: {
          line: 206,
          column: 24
        },
        end: {
          line: 206,
          column: 106
        }
      },
      "62": {
        start: {
          line: 207,
          column: 24
        },
        end: {
          line: 215,
          column: 27
        }
      },
      "63": {
        start: {
          line: 218,
          column: 20
        },
        end: {
          line: 220,
          column: 21
        }
      },
      "64": {
        start: {
          line: 219,
          column: 24
        },
        end: {
          line: 219,
          column: 115
        }
      },
      "65": {
        start: {
          line: 223,
          column: 20
        },
        end: {
          line: 223,
          column: 36
        }
      },
      "66": {
        start: {
          line: 224,
          column: 20
        },
        end: {
          line: 231,
          column: 23
        }
      },
      "67": {
        start: {
          line: 234,
          column: 12
        },
        end: {
          line: 234,
          column: 93
        }
      },
      "68": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 235,
          column: 71
        }
      },
      "69": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 236,
          column: 26
        }
      },
      "70": {
        start: {
          line: 239,
          column: 12
        },
        end: {
          line: 239,
          column: 72
        }
      },
      "71": {
        start: {
          line: 247,
          column: 26
        },
        end: {
          line: 247,
          column: 36
        }
      },
      "72": {
        start: {
          line: 248,
          column: 23
        },
        end: {
          line: 259,
          column: 9
        }
      },
      "73": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 312,
          column: 9
        }
      },
      "74": {
        start: {
          line: 261,
          column: 28
        },
        end: {
          line: 261,
          column: 62
        }
      },
      "75": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 305,
          column: 13
        }
      },
      "76": {
        start: {
          line: 263,
          column: 16
        },
        end: {
          line: 304,
          column: 17
        }
      },
      "77": {
        start: {
          line: 264,
          column: 32
        },
        end: {
          line: 264,
          column: 76
        }
      },
      "78": {
        start: {
          line: 265,
          column: 20
        },
        end: {
          line: 268,
          column: 21
        }
      },
      "79": {
        start: {
          line: 266,
          column: 24
        },
        end: {
          line: 266,
          column: 41
        }
      },
      "80": {
        start: {
          line: 267,
          column: 24
        },
        end: {
          line: 267,
          column: 33
        }
      },
      "81": {
        start: {
          line: 269,
          column: 42
        },
        end: {
          line: 269,
          column: 44
        }
      },
      "82": {
        start: {
          line: 270,
          column: 39
        },
        end: {
          line: 273,
          column: 21
        }
      },
      "83": {
        start: {
          line: 274,
          column: 20
        },
        end: {
          line: 278,
          column: 21
        }
      },
      "84": {
        start: {
          line: 275,
          column: 24
        },
        end: {
          line: 275,
          column: 95
        }
      },
      "85": {
        start: {
          line: 276,
          column: 24
        },
        end: {
          line: 276,
          column: 91
        }
      },
      "86": {
        start: {
          line: 277,
          column: 24
        },
        end: {
          line: 277,
          column: 53
        }
      },
      "87": {
        start: {
          line: 279,
          column: 20
        },
        end: {
          line: 282,
          column: 21
        }
      },
      "88": {
        start: {
          line: 280,
          column: 24
        },
        end: {
          line: 280,
          column: 141
        }
      },
      "89": {
        start: {
          line: 280,
          column: 68
        },
        end: {
          line: 280,
          column: 138
        }
      },
      "90": {
        start: {
          line: 281,
          column: 24
        },
        end: {
          line: 281,
          column: 55
        }
      },
      "91": {
        start: {
          line: 283,
          column: 20
        },
        end: {
          line: 286,
          column: 21
        }
      },
      "92": {
        start: {
          line: 284,
          column: 24
        },
        end: {
          line: 284,
          column: 77
        }
      },
      "93": {
        start: {
          line: 285,
          column: 24
        },
        end: {
          line: 285,
          column: 55
        }
      },
      "94": {
        start: {
          line: 287,
          column: 20
        },
        end: {
          line: 290,
          column: 21
        }
      },
      "95": {
        start: {
          line: 288,
          column: 24
        },
        end: {
          line: 288,
          column: 87
        }
      },
      "96": {
        start: {
          line: 289,
          column: 24
        },
        end: {
          line: 289,
          column: 59
        }
      },
      "97": {
        start: {
          line: 291,
          column: 20
        },
        end: {
          line: 291,
          column: 61
        }
      },
      "98": {
        start: {
          line: 292,
          column: 20
        },
        end: {
          line: 292,
          column: 40
        }
      },
      "99": {
        start: {
          line: 293,
          column: 20
        },
        end: {
          line: 296,
          column: 23
        }
      },
      "100": {
        start: {
          line: 299,
          column: 20
        },
        end: {
          line: 299,
          column: 36
        }
      },
      "101": {
        start: {
          line: 300,
          column: 20
        },
        end: {
          line: 303,
          column: 23
        }
      },
      "102": {
        start: {
          line: 306,
          column: 12
        },
        end: {
          line: 306,
          column: 93
        }
      },
      "103": {
        start: {
          line: 307,
          column: 12
        },
        end: {
          line: 307,
          column: 71
        }
      },
      "104": {
        start: {
          line: 308,
          column: 12
        },
        end: {
          line: 308,
          column: 26
        }
      },
      "105": {
        start: {
          line: 311,
          column: 12
        },
        end: {
          line: 311,
          column: 64
        }
      },
      "106": {
        start: {
          line: 316,
          column: 26
        },
        end: {
          line: 316,
          column: 62
        }
      },
      "107": {
        start: {
          line: 317,
          column: 32
        },
        end: {
          line: 317,
          column: 72
        }
      },
      "108": {
        start: {
          line: 318,
          column: 8
        },
        end: {
          line: 330,
          column: 9
        }
      },
      "109": {
        start: {
          line: 320,
          column: 29
        },
        end: {
          line: 320,
          column: 31
        }
      },
      "110": {
        start: {
          line: 321,
          column: 12
        },
        end: {
          line: 328,
          column: 13
        }
      },
      "111": {
        start: {
          line: 322,
          column: 32
        },
        end: {
          line: 322,
          column: 69
        }
      },
      "112": {
        start: {
          line: 323,
          column: 37
        },
        end: {
          line: 326,
          column: 18
        }
      },
      "113": {
        start: {
          line: 327,
          column: 16
        },
        end: {
          line: 327,
          column: 270
        }
      },
      "114": {
        start: {
          line: 329,
          column: 12
        },
        end: {
          line: 329,
          column: 28
        }
      },
      "115": {
        start: {
          line: 332,
          column: 22
        },
        end: {
          line: 332,
          column: 35
        }
      },
      "116": {
        start: {
          line: 333,
          column: 8
        },
        end: {
          line: 335,
          column: 9
        }
      },
      "117": {
        start: {
          line: 334,
          column: 12
        },
        end: {
          line: 334,
          column: 42
        }
      },
      "118": {
        start: {
          line: 336,
          column: 24
        },
        end: {
          line: 336,
          column: 47
        }
      },
      "119": {
        start: {
          line: 337,
          column: 28
        },
        end: {
          line: 337,
          column: 30
        }
      },
      "120": {
        start: {
          line: 338,
          column: 8
        },
        end: {
          line: 343,
          column: 9
        }
      },
      "121": {
        start: {
          line: 339,
          column: 12
        },
        end: {
          line: 342,
          column: 13
        }
      },
      "122": {
        start: {
          line: 340,
          column: 32
        },
        end: {
          line: 340,
          column: 69
        }
      },
      "123": {
        start: {
          line: 341,
          column: 16
        },
        end: {
          line: 341,
          column: 132
        }
      },
      "124": {
        start: {
          line: 344,
          column: 8
        },
        end: {
          line: 344,
          column: 27
        }
      },
      "125": {
        start: {
          line: 347,
          column: 24
        },
        end: {
          line: 347,
          column: 58
        }
      },
      "126": {
        start: {
          line: 348,
          column: 8
        },
        end: {
          line: 354,
          column: 9
        }
      },
      "127": {
        start: {
          line: 349,
          column: 25
        },
        end: {
          line: 352,
          column: 14
        }
      },
      "128": {
        start: {
          line: 353,
          column: 12
        },
        end: {
          line: 353,
          column: 35
        }
      },
      "129": {
        start: {
          line: 356,
          column: 21
        },
        end: {
          line: 360,
          column: 10
        }
      },
      "130": {
        start: {
          line: 361,
          column: 8
        },
        end: {
          line: 361,
          column: 31
        }
      },
      "131": {
        start: {
          line: 364,
          column: 8
        },
        end: {
          line: 380,
          column: 9
        }
      },
      "132": {
        start: {
          line: 365,
          column: 40
        },
        end: {
          line: 365,
          column: 83
        }
      },
      "133": {
        start: {
          line: 366,
          column: 28
        },
        end: {
          line: 366,
          column: 62
        }
      },
      "134": {
        start: {
          line: 367,
          column: 24
        },
        end: {
          line: 367,
          column: 50
        }
      },
      "135": {
        start: {
          line: 368,
          column: 12
        },
        end: {
          line: 370,
          column: 13
        }
      },
      "136": {
        start: {
          line: 369,
          column: 16
        },
        end: {
          line: 369,
          column: 23
        }
      },
      "137": {
        start: {
          line: 371,
          column: 32
        },
        end: {
          line: 371,
          column: 106
        }
      },
      "138": {
        start: {
          line: 372,
          column: 12
        },
        end: {
          line: 376,
          column: 13
        }
      },
      "139": {
        start: {
          line: 373,
          column: 16
        },
        end: {
          line: 375,
          column: 17
        }
      },
      "140": {
        start: {
          line: 374,
          column: 20
        },
        end: {
          line: 374,
          column: 154
        }
      },
      "141": {
        start: {
          line: 379,
          column: 12
        },
        end: {
          line: 379,
          column: 68
        }
      },
      "142": {
        start: {
          line: 383,
          column: 24
        },
        end: {
          line: 383,
          column: 58
        }
      },
      "143": {
        start: {
          line: 384,
          column: 39
        },
        end: {
          line: 384,
          column: 89
        }
      },
      "144": {
        start: {
          line: 385,
          column: 35
        },
        end: {
          line: 385,
          column: 81
        }
      },
      "145": {
        start: {
          line: 387,
          column: 28
        },
        end: {
          line: 414,
          column: 9
        }
      },
      "146": {
        start: {
          line: 415,
          column: 35
        },
        end: {
          line: 415,
          column: 79
        }
      },
      "147": {
        start: {
          line: 417,
          column: 8
        },
        end: {
          line: 425,
          column: 11
        }
      },
      "148": {
        start: {
          line: 427,
          column: 8
        },
        end: {
          line: 427,
          column: 71
        }
      },
      "149": {
        start: {
          line: 430,
          column: 8
        },
        end: {
          line: 457,
          column: 9
        }
      },
      "150": {
        start: {
          line: 431,
          column: 39
        },
        end: {
          line: 431,
          column: 85
        }
      },
      "151": {
        start: {
          line: 432,
          column: 36
        },
        end: {
          line: 432,
          column: 76
        }
      },
      "152": {
        start: {
          line: 433,
          column: 28
        },
        end: {
          line: 433,
          column: 66
        }
      },
      "153": {
        start: {
          line: 434,
          column: 31
        },
        end: {
          line: 434,
          column: 66
        }
      },
      "154": {
        start: {
          line: 435,
          column: 28
        },
        end: {
          line: 452,
          column: 13
        }
      },
      "155": {
        start: {
          line: 453,
          column: 12
        },
        end: {
          line: 453,
          column: 49
        }
      },
      "156": {
        start: {
          line: 456,
          column: 12
        },
        end: {
          line: 456,
          column: 64
        }
      },
      "157": {
        start: {
          line: 460,
          column: 8
        },
        end: {
          line: 467,
          column: 9
        }
      },
      "158": {
        start: {
          line: 461,
          column: 51
        },
        end: {
          line: 461,
          column: 106
        }
      },
      "159": {
        start: {
          line: 462,
          column: 31
        },
        end: {
          line: 462,
          column: 91
        }
      },
      "160": {
        start: {
          line: 463,
          column: 12
        },
        end: {
          line: 463,
          column: 105
        }
      },
      "161": {
        start: {
          line: 466,
          column: 12
        },
        end: {
          line: 466,
          column: 80
        }
      },
      "162": {
        start: {
          line: 470,
          column: 8
        },
        end: {
          line: 491,
          column: 9
        }
      },
      "163": {
        start: {
          line: 471,
          column: 51
        },
        end: {
          line: 471,
          column: 106
        }
      },
      "164": {
        start: {
          line: 472,
          column: 31
        },
        end: {
          line: 472,
          column: 91
        }
      },
      "165": {
        start: {
          line: 473,
          column: 12
        },
        end: {
          line: 487,
          column: 13
        }
      },
      "166": {
        start: {
          line: 475,
          column: 40
        },
        end: {
          line: 478,
          column: 17
        }
      },
      "167": {
        start: {
          line: 479,
          column: 36
        },
        end: {
          line: 481,
          column: 17
        }
      },
      "168": {
        start: {
          line: 482,
          column: 16
        },
        end: {
          line: 482,
          column: 142
        }
      },
      "169": {
        start: {
          line: 486,
          column: 16
        },
        end: {
          line: 486,
          column: 109
        }
      },
      "170": {
        start: {
          line: 490,
          column: 12
        },
        end: {
          line: 490,
          column: 73
        }
      },
      "171": {
        start: {
          line: 494,
          column: 8
        },
        end: {
          line: 500,
          column: 9
        }
      },
      "172": {
        start: {
          line: 495,
          column: 31
        },
        end: {
          line: 495,
          column: 68
        }
      },
      "173": {
        start: {
          line: 496,
          column: 12
        },
        end: {
          line: 496,
          column: 52
        }
      },
      "174": {
        start: {
          line: 499,
          column: 12
        },
        end: {
          line: 499,
          column: 53
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 4
          },
          end: {
            line: 6,
            column: 5
          }
        },
        loc: {
          start: {
            line: 6,
            column: 66
          },
          end: {
            line: 142,
            column: 5
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 65,
            column: 64
          },
          end: {
            line: 65,
            column: 65
          }
        },
        loc: {
          start: {
            line: 65,
            column: 75
          },
          end: {
            line: 73,
            column: 21
          }
        },
        line: 65
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 147,
            column: 4
          },
          end: {
            line: 147,
            column: 5
          }
        },
        loc: {
          start: {
            line: 147,
            column: 71
          },
          end: {
            line: 241,
            column: 5
          }
        },
        line: 147
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 246,
            column: 4
          },
          end: {
            line: 246,
            column: 5
          }
        },
        loc: {
          start: {
            line: 246,
            column: 73
          },
          end: {
            line: 313,
            column: 5
          }
        },
        line: 246
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 280,
            column: 57
          },
          end: {
            line: 280,
            column: 58
          }
        },
        loc: {
          start: {
            line: 280,
            column: 68
          },
          end: {
            line: 280,
            column: 138
          }
        },
        line: 280
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 315,
            column: 4
          },
          end: {
            line: 315,
            column: 5
          }
        },
        loc: {
          start: {
            line: 315,
            column: 70
          },
          end: {
            line: 345,
            column: 5
          }
        },
        line: 315
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 346,
            column: 4
          },
          end: {
            line: 346,
            column: 5
          }
        },
        loc: {
          start: {
            line: 346,
            column: 64
          },
          end: {
            line: 362,
            column: 5
          }
        },
        line: 346
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 363,
            column: 4
          },
          end: {
            line: 363,
            column: 5
          }
        },
        loc: {
          start: {
            line: 363,
            column: 67
          },
          end: {
            line: 381,
            column: 5
          }
        },
        line: 363
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 382,
            column: 4
          },
          end: {
            line: 382,
            column: 5
          }
        },
        loc: {
          start: {
            line: 382,
            column: 67
          },
          end: {
            line: 428,
            column: 5
          }
        },
        line: 382
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 429,
            column: 4
          },
          end: {
            line: 429,
            column: 5
          }
        },
        loc: {
          start: {
            line: 429,
            column: 62
          },
          end: {
            line: 458,
            column: 5
          }
        },
        line: 429
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 459,
            column: 4
          },
          end: {
            line: 459,
            column: 5
          }
        },
        loc: {
          start: {
            line: 459,
            column: 72
          },
          end: {
            line: 468,
            column: 5
          }
        },
        line: 459
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 469,
            column: 4
          },
          end: {
            line: 469,
            column: 5
          }
        },
        loc: {
          start: {
            line: 469,
            column: 79
          },
          end: {
            line: 492,
            column: 5
          }
        },
        line: 469
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 493,
            column: 4
          },
          end: {
            line: 493,
            column: 5
          }
        },
        loc: {
          start: {
            line: 493,
            column: 42
          },
          end: {
            line: 501,
            column: 5
          }
        },
        line: 493
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 34,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 34,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "1": {
        loc: {
          start: {
            line: 48,
            column: 20
          },
          end: {
            line: 60,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 20
          },
          end: {
            line: 60,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "2": {
        loc: {
          start: {
            line: 62,
            column: 41
          },
          end: {
            line: 62,
            column: 122
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 62,
            column: 99
          },
          end: {
            line: 62,
            column: 105
          }
        }, {
          start: {
            line: 62,
            column: 108
          },
          end: {
            line: 62,
            column: 122
          }
        }],
        line: 62
      },
      "3": {
        loc: {
          start: {
            line: 62,
            column: 41
          },
          end: {
            line: 62,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 41
          },
          end: {
            line: 62,
            column: 79
          }
        }, {
          start: {
            line: 62,
            column: 83
          },
          end: {
            line: 62,
            column: 96
          }
        }],
        line: 62
      },
      "4": {
        loc: {
          start: {
            line: 63,
            column: 38
          },
          end: {
            line: 63,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 38
          },
          end: {
            line: 63,
            column: 50
          }
        }, {
          start: {
            line: 63,
            column: 54
          },
          end: {
            line: 63,
            column: 75
          }
        }],
        line: 63
      },
      "5": {
        loc: {
          start: {
            line: 68,
            column: 32
          },
          end: {
            line: 68,
            column: 113
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 68,
            column: 47
          },
          end: {
            line: 68,
            column: 99
          }
        }, {
          start: {
            line: 68,
            column: 102
          },
          end: {
            line: 68,
            column: 113
          }
        }],
        line: 68
      },
      "6": {
        loc: {
          start: {
            line: 70,
            column: 34
          },
          end: {
            line: 70,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 34
          },
          end: {
            line: 70,
            column: 59
          }
        }, {
          start: {
            line: 70,
            column: 63
          },
          end: {
            line: 70,
            column: 76
          }
        }],
        line: 70
      },
      "7": {
        loc: {
          start: {
            line: 90,
            column: 46
          },
          end: {
            line: 90,
            column: 120
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 90,
            column: 110
          },
          end: {
            line: 90,
            column: 112
          }
        }, {
          start: {
            line: 90,
            column: 115
          },
          end: {
            line: 90,
            column: 120
          }
        }],
        line: 90
      },
      "8": {
        loc: {
          start: {
            line: 90,
            column: 46
          },
          end: {
            line: 90,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 46
          },
          end: {
            line: 90,
            column: 90
          }
        }, {
          start: {
            line: 90,
            column: 94
          },
          end: {
            line: 90,
            column: 107
          }
        }],
        line: 90
      },
      "9": {
        loc: {
          start: {
            line: 106,
            column: 20
          },
          end: {
            line: 108,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 20
          },
          end: {
            line: 108,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "10": {
        loc: {
          start: {
            line: 110,
            column: 51
          },
          end: {
            line: 110,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 51
          },
          end: {
            line: 110,
            column: 78
          }
        }, {
          start: {
            line: 110,
            column: 82
          },
          end: {
            line: 110,
            column: 83
          }
        }],
        line: 110
      },
      "11": {
        loc: {
          start: {
            line: 120,
            column: 20
          },
          end: {
            line: 122,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 20
          },
          end: {
            line: 122,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 120
      },
      "12": {
        loc: {
          start: {
            line: 128,
            column: 31
          },
          end: {
            line: 128,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 128,
            column: 56
          },
          end: {
            line: 128,
            column: 69
          }
        }, {
          start: {
            line: 128,
            column: 72
          },
          end: {
            line: 128,
            column: 87
          }
        }],
        line: 128
      },
      "13": {
        loc: {
          start: {
            line: 174,
            column: 20
          },
          end: {
            line: 186,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 20
          },
          end: {
            line: 186,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 174
      },
      "14": {
        loc: {
          start: {
            line: 188,
            column: 20
          },
          end: {
            line: 216,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 188,
            column: 20
          },
          end: {
            line: 216,
            column: 21
          }
        }, {
          start: {
            line: 202,
            column: 25
          },
          end: {
            line: 216,
            column: 21
          }
        }],
        line: 188
      },
      "15": {
        loc: {
          start: {
            line: 192,
            column: 55
          },
          end: {
            line: 192,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 192,
            column: 55
          },
          end: {
            line: 192,
            column: 82
          }
        }, {
          start: {
            line: 192,
            column: 86
          },
          end: {
            line: 192,
            column: 87
          }
        }],
        line: 192
      },
      "16": {
        loc: {
          start: {
            line: 206,
            column: 55
          },
          end: {
            line: 206,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 206,
            column: 55
          },
          end: {
            line: 206,
            column: 82
          }
        }, {
          start: {
            line: 206,
            column: 86
          },
          end: {
            line: 206,
            column: 87
          }
        }],
        line: 206
      },
      "17": {
        loc: {
          start: {
            line: 214,
            column: 41
          },
          end: {
            line: 214,
            column: 129
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 214,
            column: 106
          },
          end: {
            line: 214,
            column: 112
          }
        }, {
          start: {
            line: 214,
            column: 115
          },
          end: {
            line: 214,
            column: 129
          }
        }],
        line: 214
      },
      "18": {
        loc: {
          start: {
            line: 214,
            column: 41
          },
          end: {
            line: 214,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 214,
            column: 41
          },
          end: {
            line: 214,
            column: 86
          }
        }, {
          start: {
            line: 214,
            column: 90
          },
          end: {
            line: 214,
            column: 103
          }
        }],
        line: 214
      },
      "19": {
        loc: {
          start: {
            line: 218,
            column: 20
          },
          end: {
            line: 220,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 218,
            column: 20
          },
          end: {
            line: 220,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 218
      },
      "20": {
        loc: {
          start: {
            line: 219,
            column: 84
          },
          end: {
            line: 219,
            column: 113
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 219,
            column: 84
          },
          end: {
            line: 219,
            column: 104
          }
        }, {
          start: {
            line: 219,
            column: 108
          },
          end: {
            line: 219,
            column: 113
          }
        }],
        line: 219
      },
      "21": {
        loc: {
          start: {
            line: 226,
            column: 31
          },
          end: {
            line: 226,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 226,
            column: 56
          },
          end: {
            line: 226,
            column: 69
          }
        }, {
          start: {
            line: 226,
            column: 72
          },
          end: {
            line: 226,
            column: 87
          }
        }],
        line: 226
      },
      "22": {
        loc: {
          start: {
            line: 265,
            column: 20
          },
          end: {
            line: 268,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 265,
            column: 20
          },
          end: {
            line: 268,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 265
      },
      "23": {
        loc: {
          start: {
            line: 274,
            column: 20
          },
          end: {
            line: 278,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 274,
            column: 20
          },
          end: {
            line: 278,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 274
      },
      "24": {
        loc: {
          start: {
            line: 279,
            column: 20
          },
          end: {
            line: 282,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 279,
            column: 20
          },
          end: {
            line: 282,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 279
      },
      "25": {
        loc: {
          start: {
            line: 283,
            column: 20
          },
          end: {
            line: 286,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 283,
            column: 20
          },
          end: {
            line: 286,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 283
      },
      "26": {
        loc: {
          start: {
            line: 287,
            column: 20
          },
          end: {
            line: 290,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 287,
            column: 20
          },
          end: {
            line: 290,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 287
      },
      "27": {
        loc: {
          start: {
            line: 302,
            column: 31
          },
          end: {
            line: 302,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 302,
            column: 56
          },
          end: {
            line: 302,
            column: 69
          }
        }, {
          start: {
            line: 302,
            column: 72
          },
          end: {
            line: 302,
            column: 87
          }
        }],
        line: 302
      },
      "28": {
        loc: {
          start: {
            line: 318,
            column: 8
          },
          end: {
            line: 330,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 318,
            column: 8
          },
          end: {
            line: 330,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 318
      },
      "29": {
        loc: {
          start: {
            line: 318,
            column: 12
          },
          end: {
            line: 318,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 318,
            column: 12
          },
          end: {
            line: 318,
            column: 23
          }
        }, {
          start: {
            line: 318,
            column: 27
          },
          end: {
            line: 318,
            column: 49
          }
        }],
        line: 318
      },
      "30": {
        loc: {
          start: {
            line: 327,
            column: 84
          },
          end: {
            line: 327,
            column: 159
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 327,
            column: 135
          },
          end: {
            line: 327,
            column: 141
          }
        }, {
          start: {
            line: 327,
            column: 144
          },
          end: {
            line: 327,
            column: 159
          }
        }],
        line: 327
      },
      "31": {
        loc: {
          start: {
            line: 327,
            column: 84
          },
          end: {
            line: 327,
            column: 132
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 327,
            column: 84
          },
          end: {
            line: 327,
            column: 105
          }
        }, {
          start: {
            line: 327,
            column: 109
          },
          end: {
            line: 327,
            column: 132
          }
        }],
        line: 327
      },
      "32": {
        loc: {
          start: {
            line: 327,
            column: 173
          },
          end: {
            line: 327,
            column: 265
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 327,
            column: 174
          },
          end: {
            line: 327,
            column: 251
          }
        }, {
          start: {
            line: 327,
            column: 256
          },
          end: {
            line: 327,
            column: 265
          }
        }],
        line: 327
      },
      "33": {
        loc: {
          start: {
            line: 327,
            column: 174
          },
          end: {
            line: 327,
            column: 251
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 327,
            column: 225
          },
          end: {
            line: 327,
            column: 231
          }
        }, {
          start: {
            line: 327,
            column: 234
          },
          end: {
            line: 327,
            column: 251
          }
        }],
        line: 327
      },
      "34": {
        loc: {
          start: {
            line: 327,
            column: 174
          },
          end: {
            line: 327,
            column: 222
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 327,
            column: 174
          },
          end: {
            line: 327,
            column: 195
          }
        }, {
          start: {
            line: 327,
            column: 199
          },
          end: {
            line: 327,
            column: 222
          }
        }],
        line: 327
      },
      "35": {
        loc: {
          start: {
            line: 333,
            column: 8
          },
          end: {
            line: 335,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 333,
            column: 8
          },
          end: {
            line: 335,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 333
      },
      "36": {
        loc: {
          start: {
            line: 333,
            column: 12
          },
          end: {
            line: 333,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 333,
            column: 12
          },
          end: {
            line: 333,
            column: 21
          }
        }, {
          start: {
            line: 333,
            column: 25
          },
          end: {
            line: 333,
            column: 45
          }
        }],
        line: 333
      },
      "37": {
        loc: {
          start: {
            line: 338,
            column: 32
          },
          end: {
            line: 338,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 338,
            column: 32
          },
          end: {
            line: 338,
            column: 44
          }
        }, {
          start: {
            line: 338,
            column: 48
          },
          end: {
            line: 338,
            column: 50
          }
        }],
        line: 338
      },
      "38": {
        loc: {
          start: {
            line: 339,
            column: 37
          },
          end: {
            line: 339,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 339,
            column: 37
          },
          end: {
            line: 339,
            column: 58
          }
        }, {
          start: {
            line: 339,
            column: 62
          },
          end: {
            line: 339,
            column: 64
          }
        }],
        line: 339
      },
      "39": {
        loc: {
          start: {
            line: 348,
            column: 8
          },
          end: {
            line: 354,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 348,
            column: 8
          },
          end: {
            line: 354,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 348
      },
      "40": {
        loc: {
          start: {
            line: 348,
            column: 12
          },
          end: {
            line: 348,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 348,
            column: 12
          },
          end: {
            line: 348,
            column: 19
          }
        }, {
          start: {
            line: 348,
            column: 23
          },
          end: {
            line: 348,
            column: 41
          }
        }],
        line: 348
      },
      "41": {
        loc: {
          start: {
            line: 353,
            column: 19
          },
          end: {
            line: 353,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 353,
            column: 19
          },
          end: {
            line: 353,
            column: 28
          }
        }, {
          start: {
            line: 353,
            column: 32
          },
          end: {
            line: 353,
            column: 34
          }
        }],
        line: 353
      },
      "42": {
        loc: {
          start: {
            line: 361,
            column: 15
          },
          end: {
            line: 361,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 361,
            column: 15
          },
          end: {
            line: 361,
            column: 24
          }
        }, {
          start: {
            line: 361,
            column: 28
          },
          end: {
            line: 361,
            column: 30
          }
        }],
        line: 361
      },
      "43": {
        loc: {
          start: {
            line: 368,
            column: 12
          },
          end: {
            line: 370,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 368,
            column: 12
          },
          end: {
            line: 370,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 368
      },
      "44": {
        loc: {
          start: {
            line: 373,
            column: 16
          },
          end: {
            line: 375,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 373,
            column: 16
          },
          end: {
            line: 375,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 373
      },
      "45": {
        loc: {
          start: {
            line: 473,
            column: 12
          },
          end: {
            line: 487,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 473,
            column: 12
          },
          end: {
            line: 487,
            column: 13
          }
        }, {
          start: {
            line: 484,
            column: 17
          },
          end: {
            line: 487,
            column: 13
          }
        }],
        line: 473
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e9b20ea3e2a201a5d901719da98eaddddc69ecd6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_jpj7bciqp = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_jpj7bciqp();
export class BulkOperationsService {
  // ========================= BULK FEE GENERATION =========================
  /**
   * Generate fees for multiple students from a template
   */
  static async generateBulkFees(campus_id, request, created_by) {
    /* istanbul ignore next */
    cov_jpj7bciqp().f[0]++;
    var _a, _b;
    const startTime =
    /* istanbul ignore next */
    (cov_jpj7bciqp().s[0]++, Date.now());
    const result =
    /* istanbul ignore next */
    (cov_jpj7bciqp().s[1]++, {
      total_requested: 0,
      successful: 0,
      failed: 0,
      skipped: 0,
      results: [],
      errors: [],
      summary: {
        total_amount: 0,
        success_rate: 0,
        processing_time_ms: 0
      }
    });
    /* istanbul ignore next */
    cov_jpj7bciqp().s[2]++;
    try {
      const {
        FeeTemplate
      } =
      /* istanbul ignore next */
      (cov_jpj7bciqp().s[3]++, await import("@/models/fee_template.model"));
      const {
        Class
      } =
      /* istanbul ignore next */
      (cov_jpj7bciqp().s[4]++, await import("@/models/class.model"));
      const {
        UserService
      } =
      /* istanbul ignore next */
      (cov_jpj7bciqp().s[5]++, await import("@/services/users.service"));
      const {
        Fee
      } =
      /* istanbul ignore next */
      (cov_jpj7bciqp().s[6]++, await import("@/models/fee.model"));
      // Get the fee template
      const template =
      /* istanbul ignore next */
      (cov_jpj7bciqp().s[7]++, await FeeTemplate.findOne({
        id: request.template_id,
        campus_id
      }));
      /* istanbul ignore next */
      cov_jpj7bciqp().s[8]++;
      if (!template) {
        /* istanbul ignore next */
        cov_jpj7bciqp().b[0][0]++;
        cov_jpj7bciqp().s[9]++;
        throw new Error("Fee template not found");
      } else
      /* istanbul ignore next */
      {
        cov_jpj7bciqp().b[0][1]++;
      }
      // Get target students
      const targetStudents =
      /* istanbul ignore next */
      (cov_jpj7bciqp().s[10]++, await this.getTargetStudents(campus_id, request.class_ids, request.student_ids));
      /* istanbul ignore next */
      cov_jpj7bciqp().s[11]++;
      result.total_requested = targetStudents.length;
      // Process each student
      /* istanbul ignore next */
      cov_jpj7bciqp().s[12]++;
      for (const student of targetStudents) {
        /* istanbul ignore next */
        cov_jpj7bciqp().s[13]++;
        try {
          // Check if fee already exists
          const existingFee =
          /* istanbul ignore next */
          (cov_jpj7bciqp().s[14]++, await Fee.findOne({
            campus_id,
            user_id: student.id,
            academic_year: request.academic_year,
            fee_template_id: request.template_id
          }));
          /* istanbul ignore next */
          cov_jpj7bciqp().s[15]++;
          if (existingFee) {
            /* istanbul ignore next */
            cov_jpj7bciqp().b[1][0]++;
            cov_jpj7bciqp().s[16]++;
            result.skipped++;
            /* istanbul ignore next */
            cov_jpj7bciqp().s[17]++;
            result.results.push({
              student_id: student.id,
              student_name: `${student.first_name} ${student.last_name}`,
              class_name: student.class_name,
              fee_id: existingFee.id,
              amount: existingFee.total_amount,
              status: "skipped",
              reason: "Fee already exists"
            });
            /* istanbul ignore next */
            cov_jpj7bciqp().s[18]++;
            continue;
          } else
          /* istanbul ignore next */
          {
            cov_jpj7bciqp().b[1][1]++;
          }
          // Calculate fee amount
          const customAmount =
          /* istanbul ignore next */
          (cov_jpj7bciqp().s[19]++,
          /* istanbul ignore next */
          (cov_jpj7bciqp().b[3][0]++, (_a = request.custom_amounts) === null) ||
          /* istanbul ignore next */
          (cov_jpj7bciqp().b[3][1]++, _a === void 0) ?
          /* istanbul ignore next */
          (cov_jpj7bciqp().b[2][0]++, void 0) :
          /* istanbul ignore next */
          (cov_jpj7bciqp().b[2][1]++, _a[student.id]));
          const feeAmount =
          /* istanbul ignore next */
          (cov_jpj7bciqp().s[20]++,
          /* istanbul ignore next */
          (cov_jpj7bciqp().b[4][0]++, customAmount) ||
          /* istanbul ignore next */
          (cov_jpj7bciqp().b[4][1]++, template.total_amount));
          // Create fee items from template
          const feeItems =
          /* istanbul ignore next */
          (cov_jpj7bciqp().s[21]++, template.fee_structure.map(item => {
            /* istanbul ignore next */
            cov_jpj7bciqp().f[1]++;
            cov_jpj7bciqp().s[22]++;
            return {
              category_id: item.category_id,
              fee_type: "template",
              amount: customAmount ?
              /* istanbul ignore next */
              (cov_jpj7bciqp().b[5][0]++, item.amount / template.total_amount * customAmount) :
              /* istanbul ignore next */
              (cov_jpj7bciqp().b[5][1]++, item.amount),
              name: item.category_name,
              due_date:
              /* istanbul ignore next */
              (cov_jpj7bciqp().b[6][0]++, request.due_date_override) ||
              /* istanbul ignore next */
              (cov_jpj7bciqp().b[6][1]++, item.due_date),
              is_mandatory: item.is_mandatory,
              late_fee_applicable: item.late_fee_applicable
            };
          }));
          // Create the fee
          const newFee =
          /* istanbul ignore next */
          (cov_jpj7bciqp().s[23]++, {
            campus_id,
            user_id: student.id,
            parent_id: student.parent_id,
            class_id: student.class_id,
            academic_year: request.academic_year,
            fee_template_id: request.template_id,
            items: feeItems,
            total_amount: feeAmount,
            paid_amount: 0,
            due_amount: feeAmount,
            discount_amount: 0,
            late_fee_amount: 0,
            payment_status: "unpaid",
            is_paid: false,
            installments_allowed:
            /* istanbul ignore next */
            (cov_jpj7bciqp().b[8][0]++, (_b = request.installments_allowed) !== null) &&
            /* istanbul ignore next */
            (cov_jpj7bciqp().b[8][1]++, _b !== void 0) ?
            /* istanbul ignore next */
            (cov_jpj7bciqp().b[7][0]++, _b) :
            /* istanbul ignore next */
            (cov_jpj7bciqp().b[7][1]++, false),
            auto_late_fee: true,
            reminder_sent: {
              email_count: 0,
              sms_count: 0
            },
            meta_data: {
              created_by,
              bulk_generation: true,
              template_used: request.template_id
            },
            created_at: new Date(),
            updated_at: new Date()
          });
          const createdFee =
          /* istanbul ignore next */
          (cov_jpj7bciqp().s[24]++, await Fee.create(newFee));
          // Apply discounts if requested
          /* istanbul ignore next */
          cov_jpj7bciqp().s[25]++;
          if (request.apply_discounts) {
            /* istanbul ignore next */
            cov_jpj7bciqp().b[9][0]++;
            cov_jpj7bciqp().s[26]++;
            await this.applyAutoDiscounts(campus_id, createdFee.id, student.id);
          } else
          /* istanbul ignore next */
          {
            cov_jpj7bciqp().b[9][1]++;
          }
          cov_jpj7bciqp().s[27]++;
          result.successful++;
          /* istanbul ignore next */
          cov_jpj7bciqp().s[28]++;
          result.summary.total_amount = (
          /* istanbul ignore next */
          (cov_jpj7bciqp().b[10][0]++, result.summary.total_amount) ||
          /* istanbul ignore next */
          (cov_jpj7bciqp().b[10][1]++, 0)) + feeAmount;
          /* istanbul ignore next */
          cov_jpj7bciqp().s[29]++;
          result.results.push({
            student_id: student.id,
            student_name: `${student.first_name} ${student.last_name}`,
            class_name: student.class_name,
            fee_id: createdFee.id,
            amount: feeAmount,
            status: "created"
          });
          // Send notification if requested
          /* istanbul ignore next */
          cov_jpj7bciqp().s[30]++;
          if (request.send_notifications) {
            /* istanbul ignore next */
            cov_jpj7bciqp().b[11][0]++;
            cov_jpj7bciqp().s[31]++;
            await this.sendFeeGenerationNotification(campus_id, createdFee, student);
          } else
          /* istanbul ignore next */
          {
            cov_jpj7bciqp().b[11][1]++;
          }
        } catch (error) {
          /* istanbul ignore next */
          cov_jpj7bciqp().s[32]++;
          result.failed++;
          /* istanbul ignore next */
          cov_jpj7bciqp().s[33]++;
          result.errors.push({
            entity_id: student.id,
            error: error instanceof Error ?
            /* istanbul ignore next */
            (cov_jpj7bciqp().b[12][0]++, error.message) :
            /* istanbul ignore next */
            (cov_jpj7bciqp().b[12][1]++, "Unknown error"),
            details: {
              student_name: `${student.first_name} ${student.last_name}`
            }
          });
        }
      }
      /* istanbul ignore next */
      cov_jpj7bciqp().s[34]++;
      result.summary.success_rate = result.successful / result.total_requested * 100;
      /* istanbul ignore next */
      cov_jpj7bciqp().s[35]++;
      result.summary.processing_time_ms = Date.now() - startTime;
      /* istanbul ignore next */
      cov_jpj7bciqp().s[36]++;
      return result;
    } catch (error) {
      /* istanbul ignore next */
      cov_jpj7bciqp().s[37]++;
      throw new Error(`Bulk fee generation failed: ${error}`);
    }
  }
  // ========================= BULK PAYMENT PROCESSING =========================
  /**
   * Process payments for multiple students/fees
   */
  static async processBulkPayments(campus_id, request, processed_by) {
    /* istanbul ignore next */
    cov_jpj7bciqp().f[2]++;
    var _a;
    const startTime =
    /* istanbul ignore next */
    (cov_jpj7bciqp().s[38]++, Date.now());
    const result =
    /* istanbul ignore next */
    (cov_jpj7bciqp().s[39]++, {
      total_requested: 0,
      successful: 0,
      failed: 0,
      skipped: 0,
      results: [],
      errors: [],
      summary: {
        total_amount: 0,
        success_rate: 0,
        processing_time_ms: 0
      }
    });
    /* istanbul ignore next */
    cov_jpj7bciqp().s[40]++;
    try {
      const {
        Fee
      } =
      /* istanbul ignore next */
      (cov_jpj7bciqp().s[41]++, await import("@/models/fee.model"));
      const {
        PaymentService
      } =
      /* istanbul ignore next */
      (cov_jpj7bciqp().s[42]++, await import("@/services/payment.service"));
      const {
        UserService
      } =
      /* istanbul ignore next */
      (cov_jpj7bciqp().s[43]++, await import("@/services/users.service"));
      // Get target fees
      const targetFees =
      /* istanbul ignore next */
      (cov_jpj7bciqp().s[44]++, await this.getTargetFees(campus_id, request.student_ids, request.fee_ids));
      /* istanbul ignore next */
      cov_jpj7bciqp().s[45]++;
      result.total_requested = targetFees.length;
      // Process each fee
      /* istanbul ignore next */
      cov_jpj7bciqp().s[46]++;
      for (const fee of targetFees) {
        /* istanbul ignore next */
        cov_jpj7bciqp().s[47]++;
        try {
          /* istanbul ignore next */
          cov_jpj7bciqp().s[48]++;
          // Skip if already paid
          if (fee.payment_status === "paid") {
            /* istanbul ignore next */
            cov_jpj7bciqp().b[13][0]++;
            cov_jpj7bciqp().s[49]++;
            result.skipped++;
            const student =
            /* istanbul ignore next */
            (cov_jpj7bciqp().s[50]++, await UserService.getUser(fee.user_id));
            /* istanbul ignore next */
            cov_jpj7bciqp().s[51]++;
            result.results.push({
              student_id: fee.user_id,
              student_name: `${student.first_name} ${student.last_name}`,
              fee_id: fee.id,
              amount: fee.total_amount,
              status: "skipped",
              reason: "Already paid"
            });
            /* istanbul ignore next */
            cov_jpj7bciqp().s[52]++;
            continue;
          } else
          /* istanbul ignore next */
          {
            cov_jpj7bciqp().b[13][1]++;
          }
          const student =
          /* istanbul ignore next */
          (cov_jpj7bciqp().s[53]++, await UserService.getUser(fee.user_id));
          /* istanbul ignore next */
          cov_jpj7bciqp().s[54]++;
          if (request.auto_approve) {
            /* istanbul ignore next */
            cov_jpj7bciqp().b[14][0]++;
            cov_jpj7bciqp().s[55]++;
            // For admin-initiated payments, mark as completed
            await this.processAdminPayment(campus_id, fee, processed_by);
            /* istanbul ignore next */
            cov_jpj7bciqp().s[56]++;
            result.successful++;
            /* istanbul ignore next */
            cov_jpj7bciqp().s[57]++;
            result.summary.total_amount = (
            /* istanbul ignore next */
            (cov_jpj7bciqp().b[15][0]++, result.summary.total_amount) ||
            /* istanbul ignore next */
            (cov_jpj7bciqp().b[15][1]++, 0)) + fee.due_amount;
            /* istanbul ignore next */
            cov_jpj7bciqp().s[58]++;
            result.results.push({
              student_id: fee.user_id,
              student_name: `${student.first_name} ${student.last_name}`,
              fee_id: fee.id,
              amount: fee.due_amount,
              status: "completed",
              reason: "Admin processed"
            });
          } else {
            /* istanbul ignore next */
            cov_jpj7bciqp().b[14][1]++;
            // Initiate normal payment process
            const paymentResult =
            /* istanbul ignore next */
            (cov_jpj7bciqp().s[59]++, await PaymentService.initiatePayment(campus_id, fee.id, fee.user_id, fee.parent_id, request.payment_gateway, fee.due_amount, `${process.env.FRONTEND_URL}/payment/callback`, `${process.env.FRONTEND_URL}/payment/cancel`));
            /* istanbul ignore next */
            cov_jpj7bciqp().s[60]++;
            result.successful++;
            /* istanbul ignore next */
            cov_jpj7bciqp().s[61]++;
            result.summary.total_amount = (
            /* istanbul ignore next */
            (cov_jpj7bciqp().b[16][0]++, result.summary.total_amount) ||
            /* istanbul ignore next */
            (cov_jpj7bciqp().b[16][1]++, 0)) + fee.due_amount;
            /* istanbul ignore next */
            cov_jpj7bciqp().s[62]++;
            result.results.push({
              student_id: fee.user_id,
              student_name: `${student.first_name} ${student.last_name}`,
              fee_id: fee.id,
              transaction_id: paymentResult.transaction.id,
              amount: fee.due_amount,
              status: "initiated",
              payment_url:
              /* istanbul ignore next */
              (cov_jpj7bciqp().b[18][0]++, (_a = paymentResult.payment_details) === null) ||
              /* istanbul ignore next */
              (cov_jpj7bciqp().b[18][1]++, _a === void 0) ?
              /* istanbul ignore next */
              (cov_jpj7bciqp().b[17][0]++, void 0) :
              /* istanbul ignore next */
              (cov_jpj7bciqp().b[17][1]++, _a.payment_url)
            });
          }
          // Send notification if requested
          /* istanbul ignore next */
          cov_jpj7bciqp().s[63]++;
          if (request.send_notifications) {
            /* istanbul ignore next */
            cov_jpj7bciqp().b[19][0]++;
            cov_jpj7bciqp().s[64]++;
            await this.sendPaymentNotification(campus_id, fee, student,
            /* istanbul ignore next */
            (cov_jpj7bciqp().b[20][0]++, request.auto_approve) ||
            /* istanbul ignore next */
            (cov_jpj7bciqp().b[20][1]++, false));
          } else
          /* istanbul ignore next */
          {
            cov_jpj7bciqp().b[19][1]++;
          }
        } catch (error) {
          /* istanbul ignore next */
          cov_jpj7bciqp().s[65]++;
          result.failed++;
          /* istanbul ignore next */
          cov_jpj7bciqp().s[66]++;
          result.errors.push({
            entity_id: fee.id,
            error: error instanceof Error ?
            /* istanbul ignore next */
            (cov_jpj7bciqp().b[21][0]++, error.message) :
            /* istanbul ignore next */
            (cov_jpj7bciqp().b[21][1]++, "Unknown error"),
            details: {
              student_id: fee.user_id,
              amount: fee.due_amount
            }
          });
        }
      }
      /* istanbul ignore next */
      cov_jpj7bciqp().s[67]++;
      result.summary.success_rate = result.successful / result.total_requested * 100;
      /* istanbul ignore next */
      cov_jpj7bciqp().s[68]++;
      result.summary.processing_time_ms = Date.now() - startTime;
      /* istanbul ignore next */
      cov_jpj7bciqp().s[69]++;
      return result;
    } catch (error) {
      /* istanbul ignore next */
      cov_jpj7bciqp().s[70]++;
      throw new Error(`Bulk payment processing failed: ${error}`);
    }
  }
  // ========================= BULK DATA OPERATIONS =========================
  /**
   * Update multiple fees with new amounts or due dates
   */
  static async updateBulkFees(campus_id, fee_ids, updates, updated_by) {
    /* istanbul ignore next */
    cov_jpj7bciqp().f[3]++;
    const startTime =
    /* istanbul ignore next */
    (cov_jpj7bciqp().s[71]++, Date.now());
    const result =
    /* istanbul ignore next */
    (cov_jpj7bciqp().s[72]++, {
      total_requested: fee_ids.length,
      successful: 0,
      failed: 0,
      skipped: 0,
      results: [],
      errors: [],
      summary: {
        success_rate: 0,
        processing_time_ms: 0
      }
    });
    /* istanbul ignore next */
    cov_jpj7bciqp().s[73]++;
    try {
      const {
        Fee
      } =
      /* istanbul ignore next */
      (cov_jpj7bciqp().s[74]++, await import("@/models/fee.model"));
      /* istanbul ignore next */
      cov_jpj7bciqp().s[75]++;
      for (const fee_id of fee_ids) {
        /* istanbul ignore next */
        cov_jpj7bciqp().s[76]++;
        try {
          const fee =
          /* istanbul ignore next */
          (cov_jpj7bciqp().s[77]++, await Fee.findOne({
            id: fee_id,
            campus_id
          }));
          /* istanbul ignore next */
          cov_jpj7bciqp().s[78]++;
          if (!fee) {
            /* istanbul ignore next */
            cov_jpj7bciqp().b[22][0]++;
            cov_jpj7bciqp().s[79]++;
            result.skipped++;
            /* istanbul ignore next */
            cov_jpj7bciqp().s[80]++;
            continue;
          } else
          /* istanbul ignore next */
          {
            cov_jpj7bciqp().b[22][1]++;
          }
          const updatedFields =
          /* istanbul ignore next */
          (cov_jpj7bciqp().s[81]++, []);
          const feeUpdates =
          /* istanbul ignore next */
          (cov_jpj7bciqp().s[82]++, {
            updated_at: new Date(),
            meta_data: Object.assign(Object.assign({}, fee.meta_data), {
              bulk_updated: true,
              updated_by,
              update_timestamp: new Date()
            })
          });
          /* istanbul ignore next */
          cov_jpj7bciqp().s[83]++;
          if (updates.amount_adjustment) {
            /* istanbul ignore next */
            cov_jpj7bciqp().b[23][0]++;
            cov_jpj7bciqp().s[84]++;
            feeUpdates.total_amount = fee.total_amount + updates.amount_adjustment;
            /* istanbul ignore next */
            cov_jpj7bciqp().s[85]++;
            feeUpdates.due_amount = fee.due_amount + updates.amount_adjustment;
            /* istanbul ignore next */
            cov_jpj7bciqp().s[86]++;
            updatedFields.push("amount");
          } else
          /* istanbul ignore next */
          {
            cov_jpj7bciqp().b[23][1]++;
          }
          cov_jpj7bciqp().s[87]++;
          if (updates.due_date) {
            /* istanbul ignore next */
            cov_jpj7bciqp().b[24][0]++;
            cov_jpj7bciqp().s[88]++;
            feeUpdates.items = fee.items.map(item => {
              /* istanbul ignore next */
              cov_jpj7bciqp().f[4]++;
              cov_jpj7bciqp().s[89]++;
              return Object.assign(Object.assign({}, item), {
                due_date: updates.due_date
              });
            });
            /* istanbul ignore next */
            cov_jpj7bciqp().s[90]++;
            updatedFields.push("due_date");
          } else
          /* istanbul ignore next */
          {
            cov_jpj7bciqp().b[24][1]++;
          }
          cov_jpj7bciqp().s[91]++;
          if (updates.late_fee_amount !== undefined) {
            /* istanbul ignore next */
            cov_jpj7bciqp().b[25][0]++;
            cov_jpj7bciqp().s[92]++;
            feeUpdates.late_fee_amount = updates.late_fee_amount;
            /* istanbul ignore next */
            cov_jpj7bciqp().s[93]++;
            updatedFields.push("late_fee");
          } else
          /* istanbul ignore next */
          {
            cov_jpj7bciqp().b[25][1]++;
          }
          cov_jpj7bciqp().s[94]++;
          if (updates.installments_allowed !== undefined) {
            /* istanbul ignore next */
            cov_jpj7bciqp().b[26][0]++;
            cov_jpj7bciqp().s[95]++;
            feeUpdates.installments_allowed = updates.installments_allowed;
            /* istanbul ignore next */
            cov_jpj7bciqp().s[96]++;
            updatedFields.push("installments");
          } else
          /* istanbul ignore next */
          {
            cov_jpj7bciqp().b[26][1]++;
          }
          cov_jpj7bciqp().s[97]++;
          await Fee.updateById(fee_id, feeUpdates);
          /* istanbul ignore next */
          cov_jpj7bciqp().s[98]++;
          result.successful++;
          /* istanbul ignore next */
          cov_jpj7bciqp().s[99]++;
          result.results.push({
            fee_id,
            updated_fields: updatedFields
          });
        } catch (error) {
          /* istanbul ignore next */
          cov_jpj7bciqp().s[100]++;
          result.failed++;
          /* istanbul ignore next */
          cov_jpj7bciqp().s[101]++;
          result.errors.push({
            entity_id: fee_id,
            error: error instanceof Error ?
            /* istanbul ignore next */
            (cov_jpj7bciqp().b[27][0]++, error.message) :
            /* istanbul ignore next */
            (cov_jpj7bciqp().b[27][1]++, "Unknown error")
          });
        }
      }
      /* istanbul ignore next */
      cov_jpj7bciqp().s[102]++;
      result.summary.success_rate = result.successful / result.total_requested * 100;
      /* istanbul ignore next */
      cov_jpj7bciqp().s[103]++;
      result.summary.processing_time_ms = Date.now() - startTime;
      /* istanbul ignore next */
      cov_jpj7bciqp().s[104]++;
      return result;
    } catch (error) {
      /* istanbul ignore next */
      cov_jpj7bciqp().s[105]++;
      throw new Error(`Bulk fee update failed: ${error}`);
    }
  }
  // ========================= HELPER METHODS =========================
  static async getTargetStudents(campus_id, class_ids, student_ids) {
    /* istanbul ignore next */
    cov_jpj7bciqp().f[5]++;
    const {
      Class
    } =
    /* istanbul ignore next */
    (cov_jpj7bciqp().s[106]++, await import("@/models/class.model"));
    const {
      UserService
    } =
    /* istanbul ignore next */
    (cov_jpj7bciqp().s[107]++, await import("@/services/users.service"));
    /* istanbul ignore next */
    cov_jpj7bciqp().s[108]++;
    if (
    /* istanbul ignore next */
    (cov_jpj7bciqp().b[29][0]++, student_ids) &&
    /* istanbul ignore next */
    (cov_jpj7bciqp().b[29][1]++, student_ids.length > 0)) {
      /* istanbul ignore next */
      cov_jpj7bciqp().b[28][0]++;
      // Get specific students
      const students =
      /* istanbul ignore next */
      (cov_jpj7bciqp().s[109]++, []);
      /* istanbul ignore next */
      cov_jpj7bciqp().s[110]++;
      for (const student_id of student_ids) {
        const student =
        /* istanbul ignore next */
        (cov_jpj7bciqp().s[111]++, await UserService.getUser(student_id));
        const studentClass =
        /* istanbul ignore next */
        (cov_jpj7bciqp().s[112]++, await Class.findOne({
          campus_id,
          student_ids: {
            $in: [student_id]
          }
        }));
        /* istanbul ignore next */
        cov_jpj7bciqp().s[113]++;
        students.push(Object.assign(Object.assign({}, student), {
          class_id:
          /* istanbul ignore next */
          (cov_jpj7bciqp().b[31][0]++, studentClass === null) ||
          /* istanbul ignore next */
          (cov_jpj7bciqp().b[31][1]++, studentClass === void 0) ?
          /* istanbul ignore next */
          (cov_jpj7bciqp().b[30][0]++, void 0) :
          /* istanbul ignore next */
          (cov_jpj7bciqp().b[30][1]++, studentClass.id),
          class_name:
          /* istanbul ignore next */
          (cov_jpj7bciqp().b[32][0]++,
          /* istanbul ignore next */
          (cov_jpj7bciqp().b[34][0]++, studentClass === null) ||
          /* istanbul ignore next */
          (cov_jpj7bciqp().b[34][1]++, studentClass === void 0) ?
          /* istanbul ignore next */
          (cov_jpj7bciqp().b[33][0]++, void 0) :
          /* istanbul ignore next */
          (cov_jpj7bciqp().b[33][1]++, studentClass.name)) ||
          /* istanbul ignore next */
          (cov_jpj7bciqp().b[32][1]++, "Unknown")
        }));
      }
      /* istanbul ignore next */
      cov_jpj7bciqp().s[114]++;
      return students;
    } else
    /* istanbul ignore next */
    {
      cov_jpj7bciqp().b[28][1]++;
    }
    // Get students from classes
    const query =
    /* istanbul ignore next */
    (cov_jpj7bciqp().s[115]++, {
      campus_id
    });
    /* istanbul ignore next */
    cov_jpj7bciqp().s[116]++;
    if (
    /* istanbul ignore next */
    (cov_jpj7bciqp().b[36][0]++, class_ids) &&
    /* istanbul ignore next */
    (cov_jpj7bciqp().b[36][1]++, class_ids.length > 0)) {
      /* istanbul ignore next */
      cov_jpj7bciqp().b[35][0]++;
      cov_jpj7bciqp().s[117]++;
      query.id = {
        $in: class_ids
      };
    } else
    /* istanbul ignore next */
    {
      cov_jpj7bciqp().b[35][1]++;
    }
    const classes =
    /* istanbul ignore next */
    (cov_jpj7bciqp().s[118]++, await Class.find(query));
    const allStudents =
    /* istanbul ignore next */
    (cov_jpj7bciqp().s[119]++, []);
    /* istanbul ignore next */
    cov_jpj7bciqp().s[120]++;
    for (const classData of
    /* istanbul ignore next */
    (cov_jpj7bciqp().b[37][0]++, classes.rows) ||
    /* istanbul ignore next */
    (cov_jpj7bciqp().b[37][1]++, [])) {
      /* istanbul ignore next */
      cov_jpj7bciqp().s[121]++;
      for (const student_id of
      /* istanbul ignore next */
      (cov_jpj7bciqp().b[38][0]++, classData.student_ids) ||
      /* istanbul ignore next */
      (cov_jpj7bciqp().b[38][1]++, [])) {
        const student =
        /* istanbul ignore next */
        (cov_jpj7bciqp().s[122]++, await UserService.getUser(student_id));
        /* istanbul ignore next */
        cov_jpj7bciqp().s[123]++;
        allStudents.push(Object.assign(Object.assign({}, student), {
          class_id: classData.id,
          class_name: classData.name
        }));
      }
    }
    /* istanbul ignore next */
    cov_jpj7bciqp().s[124]++;
    return allStudents;
  }
  static async getTargetFees(campus_id, student_ids, fee_ids) {
    /* istanbul ignore next */
    cov_jpj7bciqp().f[6]++;
    const {
      Fee
    } =
    /* istanbul ignore next */
    (cov_jpj7bciqp().s[125]++, await import("@/models/fee.model"));
    /* istanbul ignore next */
    cov_jpj7bciqp().s[126]++;
    if (
    /* istanbul ignore next */
    (cov_jpj7bciqp().b[40][0]++, fee_ids) &&
    /* istanbul ignore next */
    (cov_jpj7bciqp().b[40][1]++, fee_ids.length > 0)) {
      /* istanbul ignore next */
      cov_jpj7bciqp().b[39][0]++;
      const fees =
      /* istanbul ignore next */
      (cov_jpj7bciqp().s[127]++, await Fee.find({
        campus_id,
        id: {
          $in: fee_ids
        }
      }));
      /* istanbul ignore next */
      cov_jpj7bciqp().s[128]++;
      return /* istanbul ignore next */(cov_jpj7bciqp().b[41][0]++, fees.rows) ||
      /* istanbul ignore next */
      (cov_jpj7bciqp().b[41][1]++, []);
    } else
    /* istanbul ignore next */
    {
      cov_jpj7bciqp().b[39][1]++;
    }
    // Get all pending fees for students
    const fees =
    /* istanbul ignore next */
    (cov_jpj7bciqp().s[129]++, await Fee.find({
      campus_id,
      user_id: {
        $in: student_ids
      },
      payment_status: {
        $in: ["unpaid", "partial", "overdue"]
      }
    }));
    /* istanbul ignore next */
    cov_jpj7bciqp().s[130]++;
    return /* istanbul ignore next */(cov_jpj7bciqp().b[42][0]++, fees.rows) ||
    /* istanbul ignore next */
    (cov_jpj7bciqp().b[42][1]++, []);
  }
  static async applyAutoDiscounts(campus_id, fee_id, student_id) {
    /* istanbul ignore next */
    cov_jpj7bciqp().f[7]++;
    cov_jpj7bciqp().s[131]++;
    try {
      const {
        DiscountService
      } =
      /* istanbul ignore next */
      (cov_jpj7bciqp().s[132]++, await import("@/services/discount.service"));
      const {
        Fee
      } =
      /* istanbul ignore next */
      (cov_jpj7bciqp().s[133]++, await import("@/models/fee.model"));
      const fee =
      /* istanbul ignore next */
      (cov_jpj7bciqp().s[134]++, await Fee.findById(fee_id));
      /* istanbul ignore next */
      cov_jpj7bciqp().s[135]++;
      if (!fee) {
        /* istanbul ignore next */
        cov_jpj7bciqp().b[43][0]++;
        cov_jpj7bciqp().s[136]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_jpj7bciqp().b[43][1]++;
      }
      const eligibility =
      /* istanbul ignore next */
      (cov_jpj7bciqp().s[137]++, await DiscountService.checkDiscountEligibility(campus_id, fee, student_id));
      /* istanbul ignore next */
      cov_jpj7bciqp().s[138]++;
      for (const discount of eligibility.applicable_discounts) {
        /* istanbul ignore next */
        cov_jpj7bciqp().s[139]++;
        if (discount.rule.auto_apply) {
          /* istanbul ignore next */
          cov_jpj7bciqp().b[44][0]++;
          cov_jpj7bciqp().s[140]++;
          await DiscountService.applyDiscount(campus_id, fee_id, student_id, discount.rule.id, "system", "Auto-applied during bulk generation");
        } else
        /* istanbul ignore next */
        {
          cov_jpj7bciqp().b[44][1]++;
        }
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_jpj7bciqp().s[141]++;
      console.error("Failed to apply auto discounts:", error);
    }
  }
  static async processAdminPayment(campus_id, fee, processed_by) {
    /* istanbul ignore next */
    cov_jpj7bciqp().f[8]++;
    const {
      Fee
    } =
    /* istanbul ignore next */
    (cov_jpj7bciqp().s[142]++, await import("@/models/fee.model"));
    const {
      PaymentTransaction
    } =
    /* istanbul ignore next */
    (cov_jpj7bciqp().s[143]++, await import("@/models/payment_transaction.model"));
    const {
      PaymentInvoice
    } =
    /* istanbul ignore next */
    (cov_jpj7bciqp().s[144]++, await import("@/models/payment_invoice.model"));
    // Create transaction record
    const transaction =
    /* istanbul ignore next */
    (cov_jpj7bciqp().s[145]++, {
      campus_id,
      fee_id: fee.id,
      student_id: fee.user_id,
      parent_id: fee.parent_id,
      payment_gateway: "admin",
      amount: fee.due_amount,
      currency: "INR",
      status: "success",
      payment_method: "admin_processed",
      payment_details: {
        gateway_response: {
          processed_by,
          processing_type: "bulk_admin",
          timestamp: new Date()
        }
      },
      initiated_at: new Date(),
      completed_at: new Date(),
      webhook_verified: true,
      invoice_generated: false,
      meta_data: {
        bulk_processed: true,
        processed_by
      },
      created_at: new Date(),
      updated_at: new Date()
    });
    const createdTransaction =
    /* istanbul ignore next */
    (cov_jpj7bciqp().s[146]++, await PaymentTransaction.create(transaction));
    // Update fee
    /* istanbul ignore next */
    cov_jpj7bciqp().s[147]++;
    await Fee.updateById(fee.id, {
      paid_amount: fee.total_amount,
      due_amount: 0,
      payment_status: "paid",
      is_paid: true,
      payment_date: new Date(),
      payment_mode: "admin_processed",
      updated_at: new Date()
    });
    // Generate invoice
    /* istanbul ignore next */
    cov_jpj7bciqp().s[148]++;
    await this.generateInvoice(campus_id, createdTransaction, fee);
  }
  static async generateInvoice(campus_id, transaction, fee) {
    /* istanbul ignore next */
    cov_jpj7bciqp().f[9]++;
    cov_jpj7bciqp().s[149]++;
    try {
      const {
        PaymentInvoice
      } =
      /* istanbul ignore next */
      (cov_jpj7bciqp().s[150]++, await import("@/models/payment_invoice.model"));
      const {
        UserService
      } =
      /* istanbul ignore next */
      (cov_jpj7bciqp().s[151]++, await import("@/services/users.service"));
      const student =
      /* istanbul ignore next */
      (cov_jpj7bciqp().s[152]++, await UserService.getUser(fee.user_id));
      const schoolData =
      /* istanbul ignore next */
      (cov_jpj7bciqp().s[153]++, await this.getSchoolData(campus_id));
      const invoice =
      /* istanbul ignore next */
      (cov_jpj7bciqp().s[154]++, {
        campus_id,
        invoice_number: `INV-${Date.now()}`,
        transaction_id: transaction.id,
        fee_id: fee.id,
        student_id: fee.user_id,
        amount: transaction.amount,
        tax_amount: 0,
        total_amount: transaction.amount,
        invoice_data: {
          school_details: schoolData,
          student_details: student,
          fee_breakdown: fee.items,
          payment_details: transaction
        },
        status: "paid",
        generated_at: new Date()
      });
      /* istanbul ignore next */
      cov_jpj7bciqp().s[155]++;
      await PaymentInvoice.create(invoice);
    } catch (error) {
      /* istanbul ignore next */
      cov_jpj7bciqp().s[156]++;
      console.error("Failed to generate invoice:", error);
    }
  }
  static async sendFeeGenerationNotification(campus_id, fee, student) {
    /* istanbul ignore next */
    cov_jpj7bciqp().f[10]++;
    cov_jpj7bciqp().s[157]++;
    try {
      const {
        PaymentNotificationService
      } =
      /* istanbul ignore next */
      (cov_jpj7bciqp().s[158]++, await import("@/services/payment_notification.service"));
      const schoolData =
      /* istanbul ignore next */
      (cov_jpj7bciqp().s[159]++, await PaymentNotificationService.getSchoolDetails(campus_id));
      /* istanbul ignore next */
      cov_jpj7bciqp().s[160]++;
      await PaymentNotificationService.sendPaymentDueReminder(campus_id, fee, student, schoolData);
    } catch (error) {
      /* istanbul ignore next */
      cov_jpj7bciqp().s[161]++;
      console.error("Failed to send fee generation notification:", error);
    }
  }
  static async sendPaymentNotification(campus_id, fee, student, isCompleted) {
    /* istanbul ignore next */
    cov_jpj7bciqp().f[11]++;
    cov_jpj7bciqp().s[162]++;
    try {
      const {
        PaymentNotificationService
      } =
      /* istanbul ignore next */
      (cov_jpj7bciqp().s[163]++, await import("@/services/payment_notification.service"));
      const schoolData =
      /* istanbul ignore next */
      (cov_jpj7bciqp().s[164]++, await PaymentNotificationService.getSchoolDetails(campus_id));
      /* istanbul ignore next */
      cov_jpj7bciqp().s[165]++;
      if (isCompleted) {
        /* istanbul ignore next */
        cov_jpj7bciqp().b[45][0]++;
        // Send payment success notification
        const mockTransaction =
        /* istanbul ignore next */
        (cov_jpj7bciqp().s[166]++, {
          id: `bulk_${Date.now()}`,
          amount: fee.due_amount
        });
        const mockInvoice =
        /* istanbul ignore next */
        (cov_jpj7bciqp().s[167]++, {
          id: `inv_bulk_${Date.now()}`
        });
        /* istanbul ignore next */
        cov_jpj7bciqp().s[168]++;
        await PaymentNotificationService.sendPaymentSuccessConfirmation(campus_id, mockTransaction, mockInvoice, student, schoolData);
      } else {
        /* istanbul ignore next */
        cov_jpj7bciqp().b[45][1]++;
        cov_jpj7bciqp().s[169]++;
        // Send payment due notification
        await PaymentNotificationService.sendPaymentDueReminder(campus_id, fee, student, schoolData);
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_jpj7bciqp().s[170]++;
      console.error("Failed to send payment notification:", error);
    }
  }
  static async getSchoolData(campus_id) {
    /* istanbul ignore next */
    cov_jpj7bciqp().f[12]++;
    cov_jpj7bciqp().s[171]++;
    try {
      const {
        Campus
      } =
      /* istanbul ignore next */
      (cov_jpj7bciqp().s[172]++, await import("@/models/campus.model"));
      /* istanbul ignore next */
      cov_jpj7bciqp().s[173]++;
      return await Campus.findById(campus_id);
    } catch (_a) {
      /* istanbul ignore next */
      cov_jpj7bciqp().s[174]++;
      return {
        name: "School",
        id: campus_id
      };
    }
  }
}