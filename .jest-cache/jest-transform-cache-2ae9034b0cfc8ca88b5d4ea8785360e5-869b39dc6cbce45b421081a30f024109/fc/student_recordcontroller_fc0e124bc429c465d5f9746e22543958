3d6ee8db93c3e997bdf92f8b60895570
/* istanbul ignore next */
function cov_hchprfg32() {
  var path = "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/controllers/student_record.controller.ts";
  var hash = "f41c65c730da87b50b34a0370a71a0f95506c5bb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/controllers/student_record.controller.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 29
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 20,
          column: 2
        }
      },
      "2": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 19,
          column: 5
        }
      },
      "3": {
        start: {
          line: 8,
          column: 26
        },
        end: {
          line: 8,
          column: 46
        }
      },
      "4": {
        start: {
          line: 9,
          column: 44
        },
        end: {
          line: 9,
          column: 64
        }
      },
      "5": {
        start: {
          line: 10,
          column: 30
        },
        end: {
          line: 10,
          column: 112
        }
      },
      "6": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 39
        }
      },
      "7": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 18,
          column: 9
        }
      },
      "8": {
        start: {
          line: 15,
          column: 12
        },
        end: {
          line: 17,
          column: 15
        }
      },
      "9": {
        start: {
          line: 21,
          column: 0
        },
        end: {
          line: 34,
          column: 2
        }
      },
      "10": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 33,
          column: 5
        }
      },
      "11": {
        start: {
          line: 23,
          column: 27
        },
        end: {
          line: 23,
          column: 54
        }
      },
      "12": {
        start: {
          line: 24,
          column: 31
        },
        end: {
          line: 24,
          column: 97
        }
      },
      "13": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 40
        }
      },
      "14": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 32,
          column: 9
        }
      },
      "15": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 31,
          column: 15
        }
      },
      "16": {
        start: {
          line: 35,
          column: 0
        },
        end: {
          line: 48,
          column: 2
        }
      },
      "17": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "18": {
        start: {
          line: 37,
          column: 26
        },
        end: {
          line: 37,
          column: 46
        }
      },
      "19": {
        start: {
          line: 38,
          column: 31
        },
        end: {
          line: 38,
          column: 95
        }
      },
      "20": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 40
        }
      },
      "21": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 46,
          column: 9
        }
      },
      "22": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 45,
          column: 15
        }
      },
      "23": {
        start: {
          line: 49,
          column: 0
        },
        end: {
          line: 62,
          column: 2
        }
      },
      "24": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "25": {
        start: {
          line: 51,
          column: 34
        },
        end: {
          line: 51,
          column: 68
        }
      },
      "26": {
        start: {
          line: 52,
          column: 30
        },
        end: {
          line: 52,
          column: 96
        }
      },
      "27": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 39
        }
      },
      "28": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 60,
          column: 9
        }
      },
      "29": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 59,
          column: 15
        }
      },
      "30": {
        start: {
          line: 63,
          column: 0
        },
        end: {
          line: 79,
          column: 2
        }
      },
      "31": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 78,
          column: 5
        }
      },
      "32": {
        start: {
          line: 65,
          column: 34
        },
        end: {
          line: 65,
          column: 68
        }
      },
      "33": {
        start: {
          line: 66,
          column: 32
        },
        end: {
          line: 66,
          column: 52
        }
      },
      "34": {
        start: {
          line: 67,
          column: 30
        },
        end: {
          line: 69,
          column: 10
        }
      },
      "35": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 39
        }
      },
      "36": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 77,
          column: 9
        }
      },
      "37": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 76,
          column: 15
        }
      },
      "38": {
        start: {
          line: 80,
          column: 0
        },
        end: {
          line: 93,
          column: 2
        }
      },
      "39": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 92,
          column: 5
        }
      },
      "40": {
        start: {
          line: 82,
          column: 34
        },
        end: {
          line: 82,
          column: 68
        }
      },
      "41": {
        start: {
          line: 83,
          column: 30
        },
        end: {
          line: 83,
          column: 99
        }
      },
      "42": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 39
        }
      },
      "43": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 91,
          column: 9
        }
      },
      "44": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 90,
          column: 15
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 46
          },
          end: {
            line: 6,
            column: 47
          }
        },
        loc: {
          start: {
            line: 6,
            column: 61
          },
          end: {
            line: 20,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 21,
            column: 54
          },
          end: {
            line: 21,
            column: 55
          }
        },
        loc: {
          start: {
            line: 21,
            column: 69
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 21
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 35,
            column: 53
          },
          end: {
            line: 35,
            column: 54
          }
        },
        loc: {
          start: {
            line: 35,
            column: 68
          },
          end: {
            line: 48,
            column: 1
          }
        },
        line: 35
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 49,
            column: 47
          },
          end: {
            line: 49,
            column: 48
          }
        },
        loc: {
          start: {
            line: 49,
            column: 62
          },
          end: {
            line: 62,
            column: 1
          }
        },
        line: 49
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 63,
            column: 50
          },
          end: {
            line: 63,
            column: 51
          }
        },
        loc: {
          start: {
            line: 63,
            column: 65
          },
          end: {
            line: 79,
            column: 1
          }
        },
        line: 63
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 80,
            column: 50
          },
          end: {
            line: 80,
            column: 51
          }
        },
        loc: {
          start: {
            line: 80,
            column: 65
          },
          end: {
            line: 93,
            column: 1
          }
        },
        line: 80
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 8
          },
          end: {
            line: 18,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 8
          },
          end: {
            line: 18,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 32,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 32,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "3": {
        loc: {
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "4": {
        loc: {
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "5": {
        loc: {
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 87
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f41c65c730da87b50b34a0370a71a0f95506c5bb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_hchprfg32 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_hchprfg32();
var _a;
import { StudentRecordService } from "@/services/student_record.service";
export class StudentRecordController {}
/* istanbul ignore next */
cov_hchprfg32().s[0]++;
_a = StudentRecordController;
/* istanbul ignore next */
cov_hchprfg32().s[1]++;
StudentRecordController.createStudentRecord = async ctx => {
  /* istanbul ignore next */
  cov_hchprfg32().f[0]++;
  cov_hchprfg32().s[2]++;
  try {
    const campus_id =
    /* istanbul ignore next */
    (cov_hchprfg32().s[3]++, ctx.get("campus_id"));
    const {
      record_data,
      student_id
    } =
    /* istanbul ignore next */
    (cov_hchprfg32().s[4]++, await ctx.req.json());
    const studentRecord =
    /* istanbul ignore next */
    (cov_hchprfg32().s[5]++, await StudentRecordService.createStudentRecord(campus_id, student_id, record_data));
    /* istanbul ignore next */
    cov_hchprfg32().s[6]++;
    return ctx.json(studentRecord);
  } catch (error) {
    /* istanbul ignore next */
    cov_hchprfg32().s[7]++;
    if (error instanceof Error) {
      /* istanbul ignore next */
      cov_hchprfg32().b[0][0]++;
      cov_hchprfg32().s[8]++;
      return ctx.json({
        message: error.message
      });
    } else
    /* istanbul ignore next */
    {
      cov_hchprfg32().b[0][1]++;
    }
  }
};
/* istanbul ignore next */
cov_hchprfg32().s[9]++;
StudentRecordController.getStudentRecordByStudentId = async ctx => {
  /* istanbul ignore next */
  cov_hchprfg32().f[1]++;
  cov_hchprfg32().s[10]++;
  try {
    const student_id =
    /* istanbul ignore next */
    (cov_hchprfg32().s[11]++, ctx.req.param("student_id"));
    const studentRecords =
    /* istanbul ignore next */
    (cov_hchprfg32().s[12]++, await StudentRecordService.getStudentRecordByStudentId(student_id));
    /* istanbul ignore next */
    cov_hchprfg32().s[13]++;
    return ctx.json(studentRecords);
  } catch (error) {
    /* istanbul ignore next */
    cov_hchprfg32().s[14]++;
    if (error instanceof Error) {
      /* istanbul ignore next */
      cov_hchprfg32().b[1][0]++;
      cov_hchprfg32().s[15]++;
      return ctx.json({
        message: error.message
      });
    } else
    /* istanbul ignore next */
    {
      cov_hchprfg32().b[1][1]++;
    }
  }
};
/* istanbul ignore next */
cov_hchprfg32().s[16]++;
StudentRecordController.getStudentRecordByCampusId = async ctx => {
  /* istanbul ignore next */
  cov_hchprfg32().f[2]++;
  cov_hchprfg32().s[17]++;
  try {
    const campus_id =
    /* istanbul ignore next */
    (cov_hchprfg32().s[18]++, ctx.get("campus_id"));
    const studentRecords =
    /* istanbul ignore next */
    (cov_hchprfg32().s[19]++, await StudentRecordService.getStudentRecordByCampusId(campus_id));
    /* istanbul ignore next */
    cov_hchprfg32().s[20]++;
    return ctx.json(studentRecords);
  } catch (error) {
    /* istanbul ignore next */
    cov_hchprfg32().s[21]++;
    if (error instanceof Error) {
      /* istanbul ignore next */
      cov_hchprfg32().b[2][0]++;
      cov_hchprfg32().s[22]++;
      return ctx.json({
        message: error.message
      });
    } else
    /* istanbul ignore next */
    {
      cov_hchprfg32().b[2][1]++;
    }
  }
};
/* istanbul ignore next */
cov_hchprfg32().s[23]++;
StudentRecordController.getStudentRecordById = async ctx => {
  /* istanbul ignore next */
  cov_hchprfg32().f[3]++;
  cov_hchprfg32().s[24]++;
  try {
    const student_record_id =
    /* istanbul ignore next */
    (cov_hchprfg32().s[25]++, ctx.req.param("student_record_id"));
    const studentRecord =
    /* istanbul ignore next */
    (cov_hchprfg32().s[26]++, await StudentRecordService.getStudentRecordById(student_record_id));
    /* istanbul ignore next */
    cov_hchprfg32().s[27]++;
    return ctx.json(studentRecord);
  } catch (error) {
    /* istanbul ignore next */
    cov_hchprfg32().s[28]++;
    if (error instanceof Error) {
      /* istanbul ignore next */
      cov_hchprfg32().b[3][0]++;
      cov_hchprfg32().s[29]++;
      return ctx.json({
        message: error.message
      });
    } else
    /* istanbul ignore next */
    {
      cov_hchprfg32().b[3][1]++;
    }
  }
};
/* istanbul ignore next */
cov_hchprfg32().s[30]++;
StudentRecordController.updateStudentRecordById = async ctx => {
  /* istanbul ignore next */
  cov_hchprfg32().f[4]++;
  cov_hchprfg32().s[31]++;
  try {
    const student_record_id =
    /* istanbul ignore next */
    (cov_hchprfg32().s[32]++, ctx.req.param("student_record_id"));
    const {
      record_data
    } =
    /* istanbul ignore next */
    (cov_hchprfg32().s[33]++, await ctx.req.json());
    const studentRecord =
    /* istanbul ignore next */
    (cov_hchprfg32().s[34]++, await StudentRecordService.updateStudentRecordById(student_record_id, {
      record_data
    }));
    /* istanbul ignore next */
    cov_hchprfg32().s[35]++;
    return ctx.json(studentRecord);
  } catch (error) {
    /* istanbul ignore next */
    cov_hchprfg32().s[36]++;
    if (error instanceof Error) {
      /* istanbul ignore next */
      cov_hchprfg32().b[4][0]++;
      cov_hchprfg32().s[37]++;
      return ctx.json({
        message: error.message
      });
    } else
    /* istanbul ignore next */
    {
      cov_hchprfg32().b[4][1]++;
    }
  }
};
/* istanbul ignore next */
cov_hchprfg32().s[38]++;
StudentRecordController.deleteStudentRecordById = async ctx => {
  /* istanbul ignore next */
  cov_hchprfg32().f[5]++;
  cov_hchprfg32().s[39]++;
  try {
    const student_record_id =
    /* istanbul ignore next */
    (cov_hchprfg32().s[40]++, ctx.req.param("student_record_id"));
    const studentRecord =
    /* istanbul ignore next */
    (cov_hchprfg32().s[41]++, await StudentRecordService.deleteStudentRecordById(student_record_id));
    /* istanbul ignore next */
    cov_hchprfg32().s[42]++;
    return ctx.json(studentRecord);
  } catch (error) {
    /* istanbul ignore next */
    cov_hchprfg32().s[43]++;
    if (error instanceof Error) {
      /* istanbul ignore next */
      cov_hchprfg32().b[5][0]++;
      cov_hchprfg32().s[44]++;
      return ctx.json({
        message: error.message
      });
    } else
    /* istanbul ignore next */
    {
      cov_hchprfg32().b[5][1]++;
    }
  }
};