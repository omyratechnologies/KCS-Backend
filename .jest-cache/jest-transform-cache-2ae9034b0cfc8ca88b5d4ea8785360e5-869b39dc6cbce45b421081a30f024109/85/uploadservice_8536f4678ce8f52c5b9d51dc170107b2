09effab73e2dd1d65008e8902bb7699c
/* istanbul ignore next */
function cov_tacr2f4vh() {
  var path = "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/services/upload.service.ts";
  var hash = "a8d41c1571d1a97ed3808b102140537f45babe2c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/services/upload.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 19
        }
      },
      "1": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 10,
          column: 2
        }
      },
      "2": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 9,
          column: 84
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 2
        }
      },
      "4": {
        start: {
          line: 13,
          column: 20
        },
        end: {
          line: 17,
          column: 6
        }
      },
      "5": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 20,
          column: 5
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 18
        }
      },
      "7": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 24
        }
      },
      "8": {
        start: {
          line: 24,
          column: 0
        },
        end: {
          line: 34,
          column: 2
        }
      },
      "9": {
        start: {
          line: 25,
          column: 20
        },
        end: {
          line: 29,
          column: 6
        }
      },
      "10": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "11": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 18
        }
      },
      "12": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 24
        }
      },
      "13": {
        start: {
          line: 36,
          column: 0
        },
        end: {
          line: 38,
          column: 2
        }
      },
      "14": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 37,
          column: 37
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 29
          },
          end: {
            line: 7,
            column: 30
          }
        },
        loc: {
          start: {
            line: 7,
            column: 70
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 33
          },
          end: {
            line: 12,
            column: 34
          }
        },
        loc: {
          start: {
            line: 12,
            column: 52
          },
          end: {
            line: 22,
            column: 1
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 24,
            column: 35
          },
          end: {
            line: 24,
            column: 36
          }
        },
        loc: {
          start: {
            line: 24,
            column: 56
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 24
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 36,
            column: 28
          },
          end: {
            line: 36,
            column: 29
          }
        },
        loc: {
          start: {
            line: 36,
            column: 42
          },
          end: {
            line: 38,
            column: 1
          }
        },
        line: 36
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a8d41c1571d1a97ed3808b102140537f45babe2c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_tacr2f4vh = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_tacr2f4vh();
var _a;
import { Upload } from "@/models/upload.model";
export class UploadService {}
/* istanbul ignore next */
cov_tacr2f4vh().s[0]++;
_a = UploadService;
// Upload a File
/* istanbul ignore next */
cov_tacr2f4vh().s[1]++;
UploadService.createUpload = async (campus_id, user_id, file_data) => {
  /* istanbul ignore next */
  cov_tacr2f4vh().f[0]++;
  cov_tacr2f4vh().s[2]++;
  return await Upload.create(Object.assign(Object.assign({
    campus_id,
    user_id
  }, file_data), {
    created_at: new Date(),
    updated_at: new Date()
  }));
};
// Get All Files by User ID
/* istanbul ignore next */
cov_tacr2f4vh().s[3]++;
UploadService.getFilesByUserId = async user_id => {
  /* istanbul ignore next */
  cov_tacr2f4vh().f[1]++;
  const uploads =
  /* istanbul ignore next */
  (cov_tacr2f4vh().s[4]++, await Upload.find({
    user_id
  }, {
    sort: {
      updated_at: "DESC"
    }
  }));
  /* istanbul ignore next */
  cov_tacr2f4vh().s[5]++;
  if (uploads.rows.length === 0) {
    /* istanbul ignore next */
    cov_tacr2f4vh().b[0][0]++;
    cov_tacr2f4vh().s[6]++;
    return [];
  } else
  /* istanbul ignore next */
  {
    cov_tacr2f4vh().b[0][1]++;
  }
  cov_tacr2f4vh().s[7]++;
  return uploads.rows;
};
// Get All Files by Campus ID
/* istanbul ignore next */
cov_tacr2f4vh().s[8]++;
UploadService.getFilesByCampusId = async campus_id => {
  /* istanbul ignore next */
  cov_tacr2f4vh().f[2]++;
  const uploads =
  /* istanbul ignore next */
  (cov_tacr2f4vh().s[9]++, await Upload.find({
    campus_id
  }, {
    sort: {
      updated_at: "DESC"
    }
  }));
  /* istanbul ignore next */
  cov_tacr2f4vh().s[10]++;
  if (uploads.rows.length === 0) {
    /* istanbul ignore next */
    cov_tacr2f4vh().b[1][0]++;
    cov_tacr2f4vh().s[11]++;
    return [];
  } else
  /* istanbul ignore next */
  {
    cov_tacr2f4vh().b[1][1]++;
  }
  cov_tacr2f4vh().s[12]++;
  return uploads.rows;
};
// Get File by ID
/* istanbul ignore next */
cov_tacr2f4vh().s[13]++;
UploadService.getFileById = async id => {
  /* istanbul ignore next */
  cov_tacr2f4vh().f[3]++;
  cov_tacr2f4vh().s[14]++;
  return await Upload.findById(id);
};