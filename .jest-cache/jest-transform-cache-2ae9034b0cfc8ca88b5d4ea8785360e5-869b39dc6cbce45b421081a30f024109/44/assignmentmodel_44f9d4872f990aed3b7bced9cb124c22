6bcb657125bd66383ba91cc0b5909ebe
/* istanbul ignore next */
function cov_1q2mxz1735() {
  var path = "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/models/assignment.model.ts";
  var hash = "4928f9c5990f6769cef6561237938b31d09b6199";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/models/assignment.model.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 25
        },
        end: {
          line: 15,
          column: 2
        }
      },
      "1": {
        start: {
          line: 13,
          column: 45
        },
        end: {
          line: 13,
          column: 55
        }
      },
      "2": {
        start: {
          line: 14,
          column: 45
        },
        end: {
          line: 14,
          column: 55
        }
      },
      "3": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 16,
          column: 60
        }
      },
      "4": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 17,
          column: 62
        }
      },
      "5": {
        start: {
          line: 18,
          column: 0
        },
        end: {
          line: 18,
          column: 56
        }
      },
      "6": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 19,
          column: 58
        }
      },
      "7": {
        start: {
          line: 20,
          column: 19
        },
        end: {
          line: 20,
          column: 65
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 13,
            column: 39
          },
          end: {
            line: 13,
            column: 40
          }
        },
        loc: {
          start: {
            line: 13,
            column: 45
          },
          end: {
            line: 13,
            column: 55
          }
        },
        line: 13
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 39
          },
          end: {
            line: 14,
            column: 40
          }
        },
        loc: {
          start: {
            line: 14,
            column: 45
          },
          end: {
            line: 14,
            column: 55
          }
        },
        line: 14
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4928f9c5990f6769cef6561237938b31d09b6199"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1q2mxz1735 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1q2mxz1735();
import { Schema } from "ottoman";
import { ottoman } from "../libs/db";
const AssignmentSchema =
/* istanbul ignore next */
(cov_1q2mxz1735().s[0]++, new Schema({
  campus_id: {
    type: String,
    required: true
  },
  subject_id: {
    type: String,
    required: true
  },
  user_id: {
    type: String,
    required: true
  },
  class_id: {
    type: String,
    required: true
  },
  title: {
    type: String,
    required: true
  },
  description: {
    type: String,
    required: true
  },
  due_date: {
    type: Date,
    required: true
  },
  is_graded: {
    type: Boolean,
    required: true
  },
  meta_data: {
    type: Object,
    required: true
  },
  created_at: {
    type: Date,
    default: () => {
      /* istanbul ignore next */
      cov_1q2mxz1735().f[0]++;
      cov_1q2mxz1735().s[1]++;
      return new Date();
    }
  },
  updated_at: {
    type: Date,
    default: () => {
      /* istanbul ignore next */
      cov_1q2mxz1735().f[1]++;
      cov_1q2mxz1735().s[2]++;
      return new Date();
    }
  }
}));
/* istanbul ignore next */
cov_1q2mxz1735().s[3]++;
AssignmentSchema.index.findByCampusId = {
  by: "campus_id"
};
/* istanbul ignore next */
cov_1q2mxz1735().s[4]++;
AssignmentSchema.index.findBySubjectId = {
  by: "subject_id"
};
/* istanbul ignore next */
cov_1q2mxz1735().s[5]++;
AssignmentSchema.index.findByUserId = {
  by: "user_id"
};
/* istanbul ignore next */
cov_1q2mxz1735().s[6]++;
AssignmentSchema.index.findByClassId = {
  by: "class_id"
};
const Assignment =
/* istanbul ignore next */
(cov_1q2mxz1735().s[7]++, ottoman.model("assignments", AssignmentSchema));
export { Assignment };