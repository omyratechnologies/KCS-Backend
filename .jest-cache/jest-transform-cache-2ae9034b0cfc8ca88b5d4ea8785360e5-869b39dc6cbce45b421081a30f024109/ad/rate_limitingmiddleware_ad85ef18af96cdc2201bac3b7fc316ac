4db2666e606699c94bffacd5443119bc
/* istanbul ignore next */
function cov_1t98aj3ocx() {
  var path = "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/middlewares/rate_limiting.middleware.ts";
  var hash = "97765bb51ff71a883d91c6aa6b3a8202bd0bb631";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/middlewares/rate_limiting.middleware.ts",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 32
        },
        end: {
          line: 36,
          column: 1
        }
      },
      "1": {
        start: {
          line: 5,
          column: 21
        },
        end: {
          line: 5,
          column: 30
        }
      },
      "2": {
        start: {
          line: 6,
          column: 23
        },
        end: {
          line: 6,
          column: 26
        }
      },
      "3": {
        start: {
          line: 7,
          column: 22
        },
        end: {
          line: 7,
          column: 36
        }
      },
      "4": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 35,
          column: 6
        }
      },
      "5": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 9,
          column: 71
        }
      },
      "6": {
        start: {
          line: 10,
          column: 20
        },
        end: {
          line: 10,
          column: 30
        }
      },
      "7": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 16,
          column: 9
        }
      },
      "8": {
        start: {
          line: 13,
          column: 12
        },
        end: {
          line: 15,
          column: 13
        }
      },
      "9": {
        start: {
          line: 14,
          column: 16
        },
        end: {
          line: 14,
          column: 37
        }
      },
      "10": {
        start: {
          line: 17,
          column: 29
        },
        end: {
          line: 17,
          column: 50
        }
      },
      "11": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 33,
          column: 9
        }
      },
      "12": {
        start: {
          line: 19,
          column: 12
        },
        end: {
          line: 19,
          column: 76
        }
      },
      "13": {
        start: {
          line: 21,
          column: 13
        },
        end: {
          line: 33,
          column: 9
        }
      },
      "14": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 76
        }
      },
      "15": {
        start: {
          line: 24,
          column: 13
        },
        end: {
          line: 33,
          column: 9
        }
      },
      "16": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 29,
          column: 20
        }
      },
      "17": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 33
        }
      },
      "18": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 21
        }
      },
      "19": {
        start: {
          line: 40,
          column: 38
        },
        end: {
          line: 72,
          column: 1
        }
      },
      "20": {
        start: {
          line: 41,
          column: 21
        },
        end: {
          line: 41,
          column: 30
        }
      },
      "21": {
        start: {
          line: 42,
          column: 23
        },
        end: {
          line: 42,
          column: 25
        }
      },
      "22": {
        start: {
          line: 43,
          column: 22
        },
        end: {
          line: 43,
          column: 36
        }
      },
      "23": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 71,
          column: 6
        }
      },
      "24": {
        start: {
          line: 45,
          column: 24
        },
        end: {
          line: 45,
          column: 42
        }
      },
      "25": {
        start: {
          line: 46,
          column: 20
        },
        end: {
          line: 46,
          column: 30
        }
      },
      "26": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 52,
          column: 9
        }
      },
      "27": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 51,
          column: 13
        }
      },
      "28": {
        start: {
          line: 50,
          column: 16
        },
        end: {
          line: 50,
          column: 37
        }
      },
      "29": {
        start: {
          line: 53,
          column: 29
        },
        end: {
          line: 53,
          column: 50
        }
      },
      "30": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 69,
          column: 9
        }
      },
      "31": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 76
        }
      },
      "32": {
        start: {
          line: 57,
          column: 13
        },
        end: {
          line: 69,
          column: 9
        }
      },
      "33": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 76
        }
      },
      "34": {
        start: {
          line: 60,
          column: 13
        },
        end: {
          line: 69,
          column: 9
        }
      },
      "35": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 65,
          column: 20
        }
      },
      "36": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 33
        }
      },
      "37": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 21
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 4,
            column: 32
          },
          end: {
            line: 4,
            column: 33
          }
        },
        loc: {
          start: {
            line: 4,
            column: 38
          },
          end: {
            line: 36,
            column: 1
          }
        },
        line: 4
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 11
          },
          end: {
            line: 8,
            column: 12
          }
        },
        loc: {
          start: {
            line: 8,
            column: 32
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 8
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 40,
            column: 38
          },
          end: {
            line: 40,
            column: 39
          }
        },
        loc: {
          start: {
            line: 40,
            column: 44
          },
          end: {
            line: 72,
            column: 1
          }
        },
        line: 40
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 44,
            column: 11
          },
          end: {
            line: 44,
            column: 12
          }
        },
        loc: {
          start: {
            line: 44,
            column: 32
          },
          end: {
            line: 71,
            column: 5
          }
        },
        line: 44
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 13,
            column: 12
          },
          end: {
            line: 15,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 13,
            column: 12
          },
          end: {
            line: 15,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 13
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        }, {
          start: {
            line: 21,
            column: 13
          },
          end: {
            line: 33,
            column: 9
          }
        }],
        line: 18
      },
      "2": {
        loc: {
          start: {
            line: 21,
            column: 13
          },
          end: {
            line: 33,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 13
          },
          end: {
            line: 33,
            column: 9
          }
        }, {
          start: {
            line: 24,
            column: 13
          },
          end: {
            line: 33,
            column: 9
          }
        }],
        line: 21
      },
      "3": {
        loc: {
          start: {
            line: 24,
            column: 13
          },
          end: {
            line: 33,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 13
          },
          end: {
            line: 33,
            column: 9
          }
        }, {
          start: {
            line: 31,
            column: 13
          },
          end: {
            line: 33,
            column: 9
          }
        }],
        line: 24
      },
      "4": {
        loc: {
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 51,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 51,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "5": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 69,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 69,
            column: 9
          }
        }, {
          start: {
            line: 57,
            column: 13
          },
          end: {
            line: 69,
            column: 9
          }
        }],
        line: 54
      },
      "6": {
        loc: {
          start: {
            line: 57,
            column: 13
          },
          end: {
            line: 69,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 13
          },
          end: {
            line: 69,
            column: 9
          }
        }, {
          start: {
            line: 60,
            column: 13
          },
          end: {
            line: 69,
            column: 9
          }
        }],
        line: 57
      },
      "7": {
        loc: {
          start: {
            line: 60,
            column: 13
          },
          end: {
            line: 69,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 13
          },
          end: {
            line: 69,
            column: 9
          }
        }, {
          start: {
            line: 67,
            column: 13
          },
          end: {
            line: 69,
            column: 9
          }
        }],
        line: 60
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "97765bb51ff71a883d91c6aa6b3a8202bd0bb631"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1t98aj3ocx = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1t98aj3ocx();
cov_1t98aj3ocx().s[0]++;
/**
 * Rate limiting middleware for meeting APIs
 */
export const meetingRateLimit = () => {
  /* istanbul ignore next */
  cov_1t98aj3ocx().f[0]++;
  const requests =
  /* istanbul ignore next */
  (cov_1t98aj3ocx().s[1]++, new Map());
  const RATE_LIMIT =
  /* istanbul ignore next */
  (cov_1t98aj3ocx().s[2]++, 100); // requests per window
  const WINDOW_MS =
  /* istanbul ignore next */
  (cov_1t98aj3ocx().s[3]++, 15 * 60 * 1000); // 15 minutes
  /* istanbul ignore next */
  cov_1t98aj3ocx().s[4]++;
  return async (ctx, next) => {
    /* istanbul ignore next */
    cov_1t98aj3ocx().f[1]++;
    const userKey =
    /* istanbul ignore next */
    (cov_1t98aj3ocx().s[5]++, `${ctx.get("user_id")}_${ctx.get("campus_id")}`);
    const now =
    /* istanbul ignore next */
    (cov_1t98aj3ocx().s[6]++, Date.now());
    // Clean up expired entries
    /* istanbul ignore next */
    cov_1t98aj3ocx().s[7]++;
    for (const [key, data] of requests.entries()) {
      /* istanbul ignore next */
      cov_1t98aj3ocx().s[8]++;
      if (now > data.resetTime) {
        /* istanbul ignore next */
        cov_1t98aj3ocx().b[0][0]++;
        cov_1t98aj3ocx().s[9]++;
        requests.delete(key);
      } else
      /* istanbul ignore next */
      {
        cov_1t98aj3ocx().b[0][1]++;
      }
    }
    const userRequests =
    /* istanbul ignore next */
    (cov_1t98aj3ocx().s[10]++, requests.get(userKey));
    /* istanbul ignore next */
    cov_1t98aj3ocx().s[11]++;
    if (!userRequests) {
      /* istanbul ignore next */
      cov_1t98aj3ocx().b[1][0]++;
      cov_1t98aj3ocx().s[12]++;
      requests.set(userKey, {
        count: 1,
        resetTime: now + WINDOW_MS
      });
    } else {
      /* istanbul ignore next */
      cov_1t98aj3ocx().b[1][1]++;
      cov_1t98aj3ocx().s[13]++;
      if (now > userRequests.resetTime) {
        /* istanbul ignore next */
        cov_1t98aj3ocx().b[2][0]++;
        cov_1t98aj3ocx().s[14]++;
        requests.set(userKey, {
          count: 1,
          resetTime: now + WINDOW_MS
        });
      } else {
        /* istanbul ignore next */
        cov_1t98aj3ocx().b[2][1]++;
        cov_1t98aj3ocx().s[15]++;
        if (userRequests.count >= RATE_LIMIT) {
          /* istanbul ignore next */
          cov_1t98aj3ocx().b[3][0]++;
          cov_1t98aj3ocx().s[16]++;
          return ctx.json({
            success: false,
            message: "Rate limit exceeded. Too many requests.",
            retryAfter: Math.ceil((userRequests.resetTime - now) / 1000)
          }, 429);
        } else {
          /* istanbul ignore next */
          cov_1t98aj3ocx().b[3][1]++;
          cov_1t98aj3ocx().s[17]++;
          userRequests.count++;
        }
      }
    }
    /* istanbul ignore next */
    cov_1t98aj3ocx().s[18]++;
    await next();
  };
};
/**
 * Strict rate limiting for resource-intensive operations
 */
/* istanbul ignore next */
cov_1t98aj3ocx().s[19]++;
export const strictMeetingRateLimit = () => {
  /* istanbul ignore next */
  cov_1t98aj3ocx().f[2]++;
  const requests =
  /* istanbul ignore next */
  (cov_1t98aj3ocx().s[20]++, new Map());
  const RATE_LIMIT =
  /* istanbul ignore next */
  (cov_1t98aj3ocx().s[21]++, 10); // requests per window
  const WINDOW_MS =
  /* istanbul ignore next */
  (cov_1t98aj3ocx().s[22]++, 10 * 60 * 1000); // 10 minutes
  /* istanbul ignore next */
  cov_1t98aj3ocx().s[23]++;
  return async (ctx, next) => {
    /* istanbul ignore next */
    cov_1t98aj3ocx().f[3]++;
    const userKey =
    /* istanbul ignore next */
    (cov_1t98aj3ocx().s[24]++, ctx.get("user_id"));
    const now =
    /* istanbul ignore next */
    (cov_1t98aj3ocx().s[25]++, Date.now());
    // Clean up expired entries
    /* istanbul ignore next */
    cov_1t98aj3ocx().s[26]++;
    for (const [key, data] of requests.entries()) {
      /* istanbul ignore next */
      cov_1t98aj3ocx().s[27]++;
      if (now > data.resetTime) {
        /* istanbul ignore next */
        cov_1t98aj3ocx().b[4][0]++;
        cov_1t98aj3ocx().s[28]++;
        requests.delete(key);
      } else
      /* istanbul ignore next */
      {
        cov_1t98aj3ocx().b[4][1]++;
      }
    }
    const userRequests =
    /* istanbul ignore next */
    (cov_1t98aj3ocx().s[29]++, requests.get(userKey));
    /* istanbul ignore next */
    cov_1t98aj3ocx().s[30]++;
    if (!userRequests) {
      /* istanbul ignore next */
      cov_1t98aj3ocx().b[5][0]++;
      cov_1t98aj3ocx().s[31]++;
      requests.set(userKey, {
        count: 1,
        resetTime: now + WINDOW_MS
      });
    } else {
      /* istanbul ignore next */
      cov_1t98aj3ocx().b[5][1]++;
      cov_1t98aj3ocx().s[32]++;
      if (now > userRequests.resetTime) {
        /* istanbul ignore next */
        cov_1t98aj3ocx().b[6][0]++;
        cov_1t98aj3ocx().s[33]++;
        requests.set(userKey, {
          count: 1,
          resetTime: now + WINDOW_MS
        });
      } else {
        /* istanbul ignore next */
        cov_1t98aj3ocx().b[6][1]++;
        cov_1t98aj3ocx().s[34]++;
        if (userRequests.count >= RATE_LIMIT) {
          /* istanbul ignore next */
          cov_1t98aj3ocx().b[7][0]++;
          cov_1t98aj3ocx().s[35]++;
          return ctx.json({
            success: false,
            message: "Rate limit exceeded for resource-intensive operations.",
            retryAfter: Math.ceil((userRequests.resetTime - now) / 1000)
          }, 429);
        } else {
          /* istanbul ignore next */
          cov_1t98aj3ocx().b[7][1]++;
          cov_1t98aj3ocx().s[36]++;
          userRequests.count++;
        }
      }
    }
    /* istanbul ignore next */
    cov_1t98aj3ocx().s[37]++;
    await next();
  };
};