5bc5777248b0ff15615a17097caf8946
/* istanbul ignore next */
function cov_dqd5tw56i() {
  var path = "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/services/message.service.ts";
  var hash = "281df62fbc9840928588d89ed6c91fa92de7f9f2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/services/message.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 8
        },
        end: {
          line: 17,
          column: 11
        }
      },
      "1": {
        start: {
          line: 21,
          column: 25
        },
        end: {
          line: 28,
          column: 10
        }
      },
      "2": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 31,
          column: 9
        }
      },
      "3": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 30,
          column: 50
        }
      },
      "4": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 29
        }
      },
      "5": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 50
        }
      },
      "6": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 66
        }
      },
      "7": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 55,
          column: 11
        }
      },
      "8": {
        start: {
          line: 59,
          column: 23
        },
        end: {
          line: 67,
          column: 10
        }
      },
      "9": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "10": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 48
        }
      },
      "11": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 27
        }
      },
      "12": {
        start: {
          line: 75,
          column: 22
        },
        end: {
          line: 75,
          column: 53
        }
      },
      "13": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 78,
          column: 9
        }
      },
      "14": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 47
        }
      },
      "15": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 21
        }
      },
      "16": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 55
        }
      },
      "17": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 71
        }
      },
      "18": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 93,
          column: 11
        }
      },
      "19": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 99,
          column: 11
        }
      },
      "20": {
        start: {
          line: 103,
          column: 25
        },
        end: {
          line: 110,
          column: 10
        }
      },
      "21": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 113,
          column: 9
        }
      },
      "22": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 50
        }
      },
      "23": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 114,
          column: 29
        }
      },
      "24": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 123,
          column: 11
        }
      },
      "25": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 67
        }
      },
      "26": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 131,
          column: 76
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 4
          },
          end: {
            line: 6,
            column: 5
          }
        },
        loc: {
          start: {
            line: 6,
            column: 87
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        loc: {
          start: {
            line: 20,
            column: 66
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 20
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        loc: {
          start: {
            line: 35,
            column: 41
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 35
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        loc: {
          start: {
            line: 39,
            column: 35
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 39
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        loc: {
          start: {
            line: 43,
            column: 106
          },
          end: {
            line: 56,
            column: 5
          }
        },
        line: 43
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        loc: {
          start: {
            line: 58,
            column: 50
          },
          end: {
            line: 72,
            column: 5
          }
        },
        line: 58
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 74,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        },
        loc: {
          start: {
            line: 74,
            column: 34
          },
          end: {
            line: 80,
            column: 5
          }
        },
        line: 74
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 82,
            column: 5
          }
        },
        loc: {
          start: {
            line: 82,
            column: 39
          },
          end: {
            line: 84,
            column: 5
          }
        },
        line: 82
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 86,
            column: 4
          },
          end: {
            line: 86,
            column: 5
          }
        },
        loc: {
          start: {
            line: 86,
            column: 33
          },
          end: {
            line: 88,
            column: 5
          }
        },
        line: 86
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 90,
            column: 5
          }
        },
        loc: {
          start: {
            line: 90,
            column: 45
          },
          end: {
            line: 94,
            column: 5
          }
        },
        line: 90
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 96,
            column: 4
          },
          end: {
            line: 96,
            column: 5
          }
        },
        loc: {
          start: {
            line: 96,
            column: 50
          },
          end: {
            line: 100,
            column: 5
          }
        },
        line: 96
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 102,
            column: 4
          },
          end: {
            line: 102,
            column: 5
          }
        },
        loc: {
          start: {
            line: 102,
            column: 43
          },
          end: {
            line: 115,
            column: 5
          }
        },
        line: 102
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 117,
            column: 4
          },
          end: {
            line: 117,
            column: 5
          }
        },
        loc: {
          start: {
            line: 117,
            column: 65
          },
          end: {
            line: 124,
            column: 5
          }
        },
        line: 117
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 126,
            column: 4
          },
          end: {
            line: 126,
            column: 5
          }
        },
        loc: {
          start: {
            line: 126,
            column: 51
          },
          end: {
            line: 128,
            column: 5
          }
        },
        line: 126
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 130,
            column: 4
          },
          end: {
            line: 130,
            column: 5
          }
        },
        loc: {
          start: {
            line: 130,
            column: 42
          },
          end: {
            line: 132,
            column: 5
          }
        },
        line: 130
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 31,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 31,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "1": {
        loc: {
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "2": {
        loc: {
          start: {
            line: 76,
            column: 8
          },
          end: {
            line: 78,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 8
          },
          end: {
            line: 78,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 76
      },
      "3": {
        loc: {
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 113,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 113,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 111
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "281df62fbc9840928588d89ed6c91fa92de7f9f2"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_dqd5tw56i = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_dqd5tw56i();
import { GroupMessageStore } from "../models/group_message_store.model";
import { Message } from "../models/message.model";
import { MessageGroup } from "../models/message_group.model";
export class MessageService {
  // Store a message sent between two users
  static async storeMessage(campus_id, from_user_id, to_user_id, message, meta_data) {
    /* istanbul ignore next */
    cov_dqd5tw56i().f[0]++;
    cov_dqd5tw56i().s[0]++;
    return await Message.create({
      campus_id,
      from_user_id,
      to_user_id,
      message,
      meta_data,
      is_deleted: false,
      is_seen: false,
      created_at: new Date(),
      updated_at: new Date()
    });
  }
  // Get messages between two users
  static async getMessages(campus_id, from_user_id, to_user_id) {
    /* istanbul ignore next */
    cov_dqd5tw56i().f[1]++;
    const messages =
    /* istanbul ignore next */
    (cov_dqd5tw56i().s[1]++, await Message.find({
      campus_id,
      from_user_id,
      to_user_id,
      is_deleted: false
    }, {
      sort: {
        created_at: "DESC"
      }
    }));
    /* istanbul ignore next */
    cov_dqd5tw56i().s[2]++;
    if (messages.rows.length === 0) {
      /* istanbul ignore next */
      cov_dqd5tw56i().b[0][0]++;
      cov_dqd5tw56i().s[3]++;
      throw new Error("Messages not found");
    } else
    /* istanbul ignore next */
    {
      cov_dqd5tw56i().b[0][1]++;
    }
    cov_dqd5tw56i().s[4]++;
    return messages.rows;
  }
  // Update a message
  static async updateMessage(id, data) {
    /* istanbul ignore next */
    cov_dqd5tw56i().f[2]++;
    cov_dqd5tw56i().s[5]++;
    return await Message.updateById(id, data);
  }
  // Delete a message
  static async deleteMessage(id) {
    /* istanbul ignore next */
    cov_dqd5tw56i().f[3]++;
    cov_dqd5tw56i().s[6]++;
    return await Message.updateById(id, {
      is_deleted: true
    });
  }
  // Create a group
  static async createGroup(campus_id, admin_user_id, group_name, group_description, members, meta_data) {
    /* istanbul ignore next */
    cov_dqd5tw56i().f[4]++;
    cov_dqd5tw56i().s[7]++;
    return await MessageGroup.create({
      campus_id,
      group_name,
      admin_user_id,
      group_description,
      members,
      meta_data,
      is_active: true,
      is_deleted: false,
      created_at: new Date(),
      updated_at: new Date()
    });
  }
  // Get all groups for a user
  static async getAllGroups(campus_id, user_id) {
    /* istanbul ignore next */
    cov_dqd5tw56i().f[5]++;
    const groups =
    /* istanbul ignore next */
    (cov_dqd5tw56i().s[8]++, await MessageGroup.find({
      campus_id,
      $or: [{
        admin_user_id: user_id
      }, {
        members: [user_id]
      }],
      is_deleted: false
    }, {
      sort: {
        updated_at: "DESC"
      }
    }));
    /* istanbul ignore next */
    cov_dqd5tw56i().s[9]++;
    if (groups.rows.length === 0) {
      /* istanbul ignore next */
      cov_dqd5tw56i().b[1][0]++;
      cov_dqd5tw56i().s[10]++;
      throw new Error("Groups not found");
    } else
    /* istanbul ignore next */
    {
      cov_dqd5tw56i().b[1][1]++;
    }
    cov_dqd5tw56i().s[11]++;
    return groups.rows;
  }
  // Get group by id
  static async getGroupById(id) {
    /* istanbul ignore next */
    cov_dqd5tw56i().f[6]++;
    const group =
    /* istanbul ignore next */
    (cov_dqd5tw56i().s[12]++, await MessageGroup.findById(id));
    /* istanbul ignore next */
    cov_dqd5tw56i().s[13]++;
    if (!group) {
      /* istanbul ignore next */
      cov_dqd5tw56i().b[2][0]++;
      cov_dqd5tw56i().s[14]++;
      throw new Error("Group not found");
    } else
    /* istanbul ignore next */
    {
      cov_dqd5tw56i().b[2][1]++;
    }
    cov_dqd5tw56i().s[15]++;
    return group;
  }
  // Update group
  static async updateGroup(id, data) {
    /* istanbul ignore next */
    cov_dqd5tw56i().f[7]++;
    cov_dqd5tw56i().s[16]++;
    return await MessageGroup.updateById(id, data);
  }
  // Delete group
  static async deleteGroup(id) {
    /* istanbul ignore next */
    cov_dqd5tw56i().f[8]++;
    cov_dqd5tw56i().s[17]++;
    return await MessageGroup.updateById(id, {
      is_deleted: true
    });
  }
  // Add user to group
  static async addUserToGroup(id, user_id) {
    /* istanbul ignore next */
    cov_dqd5tw56i().f[9]++;
    cov_dqd5tw56i().s[18]++;
    return await MessageGroup.updateById(id, {
      $push: {
        members: user_id
      }
    });
  }
  // Remove user from group
  static async removeUserFromGroup(id, user_id) {
    /* istanbul ignore next */
    cov_dqd5tw56i().f[10]++;
    cov_dqd5tw56i().s[19]++;
    return await MessageGroup.updateById(id, {
      $pull: {
        members: user_id
      }
    });
  }
  // Get all messages in a group
  static async getAllMessagesInGroup(id) {
    /* istanbul ignore next */
    cov_dqd5tw56i().f[11]++;
    const messages =
    /* istanbul ignore next */
    (cov_dqd5tw56i().s[20]++, await GroupMessageStore.find({
      group_id: id,
      is_deleted: false
    }, {
      sort: {
        updated_at: "DESC"
      }
    }));
    /* istanbul ignore next */
    cov_dqd5tw56i().s[21]++;
    if (messages.rows.length === 0) {
      /* istanbul ignore next */
      cov_dqd5tw56i().b[3][0]++;
      cov_dqd5tw56i().s[22]++;
      throw new Error("Messages not found");
    } else
    /* istanbul ignore next */
    {
      cov_dqd5tw56i().b[3][1]++;
    }
    cov_dqd5tw56i().s[23]++;
    return messages.rows;
  }
  // Store a message in a group
  static async storeMessageInGroup(group_id, user_id, message) {
    /* istanbul ignore next */
    cov_dqd5tw56i().f[12]++;
    cov_dqd5tw56i().s[24]++;
    return await GroupMessageStore.create({
      group_id,
      user_id,
      message,
      is_deleted: false
    });
  }
  // Update a message in a group
  static async updateMessageInGroup(id, message) {
    /* istanbul ignore next */
    cov_dqd5tw56i().f[13]++;
    cov_dqd5tw56i().s[25]++;
    return await GroupMessageStore.updateById(id, {
      message
    });
  }
  // Delete a message in a group
  static async deleteMessageInGroup(id) {
    /* istanbul ignore next */
    cov_dqd5tw56i().f[14]++;
    cov_dqd5tw56i().s[26]++;
    return await GroupMessageStore.updateById(id, {
      is_deleted: true
    });
  }
}