d9b61bcc209393ddbcf493687ba5b1c0
/* istanbul ignore next */
function cov_1cjhsg0aca() {
  var path = "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/controllers/meeting.controller.ts";
  var hash = "07ab7e40af0a893652b04fff564ccd291ee5c06e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/controllers/meeting.controller.ts",
    statementMap: {
      "0": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 16,
          column: 23
        }
      },
      "1": {
        start: {
          line: 20,
          column: 0
        },
        end: {
          line: 63,
          column: 2
        }
      },
      "2": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 62,
          column: 5
        }
      },
      "3": {
        start: {
          line: 22,
          column: 26
        },
        end: {
          line: 22,
          column: 46
        }
      },
      "4": {
        start: {
          line: 23,
          column: 27
        },
        end: {
          line: 23,
          column: 45
        }
      },
      "5": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 30,
          column: 9
        }
      },
      "6": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 29,
          column: 20
        }
      },
      "7": {
        start: {
          line: 33,
          column: 181
        },
        end: {
          line: 33,
          column: 201
        }
      },
      "8": {
        start: {
          line: 34,
          column: 24
        },
        end: {
          line: 49,
          column: 10
        }
      },
      "9": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 54,
          column: 11
        }
      },
      "10": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 56
        }
      },
      "11": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 61,
          column: 16
        }
      },
      "12": {
        start: {
          line: 67,
          column: 0
        },
        end: {
          line: 85,
          column: 2
        }
      },
      "13": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 84,
          column: 5
        }
      },
      "14": {
        start: {
          line: 69,
          column: 26
        },
        end: {
          line: 69,
          column: 46
        }
      },
      "15": {
        start: {
          line: 70,
          column: 27
        },
        end: {
          line: 70,
          column: 45
        }
      },
      "16": {
        start: {
          line: 71,
          column: 25
        },
        end: {
          line: 71,
          column: 83
        }
      },
      "17": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 76,
          column: 11
        }
      },
      "18": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 57
        }
      },
      "19": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 83,
          column: 16
        }
      },
      "20": {
        start: {
          line: 89,
          column: 0
        },
        end: {
          line: 122,
          column: 2
        }
      },
      "21": {
        start: {
          line: 90,
          column: 4
        },
        end: {
          line: 121,
          column: 5
        }
      },
      "22": {
        start: {
          line: 91,
          column: 31
        },
        end: {
          line: 91,
          column: 46
        }
      },
      "23": {
        start: {
          line: 92,
          column: 24
        },
        end: {
          line: 92,
          column: 71
        }
      },
      "24": {
        start: {
          line: 94,
          column: 24
        },
        end: {
          line: 94,
          column: 28
        }
      },
      "25": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 102,
          column: 9
        }
      },
      "26": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 101,
          column: 13
        }
      },
      "27": {
        start: {
          line: 97,
          column: 16
        },
        end: {
          line: 97,
          column: 76
        }
      },
      "28": {
        start: {
          line: 100,
          column: 16
        },
        end: {
          line: 100,
          column: 65
        }
      },
      "29": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 106,
          column: 11
        }
      },
      "30": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 115,
          column: 9
        }
      },
      "31": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 114,
          column: 20
        }
      },
      "32": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 116,
          column: 56
        }
      },
      "33": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 120,
          column: 16
        }
      },
      "34": {
        start: {
          line: 126,
          column: 0
        },
        end: {
          line: 143,
          column: 2
        }
      },
      "35": {
        start: {
          line: 127,
          column: 4
        },
        end: {
          line: 142,
          column: 5
        }
      },
      "36": {
        start: {
          line: 128,
          column: 31
        },
        end: {
          line: 128,
          column: 49
        }
      },
      "37": {
        start: {
          line: 129,
          column: 25
        },
        end: {
          line: 129,
          column: 87
        }
      },
      "38": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 134,
          column: 11
        }
      },
      "39": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 137,
          column: 69
        }
      },
      "40": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 141,
          column: 16
        }
      },
      "41": {
        start: {
          line: 147,
          column: 0
        },
        end: {
          line: 173,
          column: 2
        }
      },
      "42": {
        start: {
          line: 148,
          column: 4
        },
        end: {
          line: 172,
          column: 5
        }
      },
      "43": {
        start: {
          line: 149,
          column: 31
        },
        end: {
          line: 149,
          column: 46
        }
      },
      "44": {
        start: {
          line: 150,
          column: 24
        },
        end: {
          line: 150,
          column: 42
        }
      },
      "45": {
        start: {
          line: 151,
          column: 21
        },
        end: {
          line: 151,
          column: 41
        }
      },
      "46": {
        start: {
          line: 152,
          column: 24
        },
        end: {
          line: 152,
          column: 85
        }
      },
      "47": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 157,
          column: 11
        }
      },
      "48": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 166,
          column: 9
        }
      },
      "49": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 165,
          column: 20
        }
      },
      "50": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 167,
          column: 56
        }
      },
      "51": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 171,
          column: 16
        }
      },
      "52": {
        start: {
          line: 177,
          column: 0
        },
        end: {
          line: 195,
          column: 2
        }
      },
      "53": {
        start: {
          line: 178,
          column: 4
        },
        end: {
          line: 194,
          column: 5
        }
      },
      "54": {
        start: {
          line: 179,
          column: 31
        },
        end: {
          line: 179,
          column: 46
        }
      },
      "55": {
        start: {
          line: 180,
          column: 24
        },
        end: {
          line: 180,
          column: 42
        }
      },
      "56": {
        start: {
          line: 181,
          column: 24
        },
        end: {
          line: 181,
          column: 79
        }
      },
      "57": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 186,
          column: 11
        }
      },
      "58": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 56
        }
      },
      "59": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 193,
          column: 16
        }
      },
      "60": {
        start: {
          line: 199,
          column: 0
        },
        end: {
          line: 224,
          column: 2
        }
      },
      "61": {
        start: {
          line: 200,
          column: 4
        },
        end: {
          line: 223,
          column: 5
        }
      },
      "62": {
        start: {
          line: 201,
          column: 31
        },
        end: {
          line: 201,
          column: 46
        }
      },
      "63": {
        start: {
          line: 202,
          column: 24
        },
        end: {
          line: 202,
          column: 42
        }
      },
      "64": {
        start: {
          line: 203,
          column: 24
        },
        end: {
          line: 203,
          column: 78
        }
      },
      "65": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 208,
          column: 11
        }
      },
      "66": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 217,
          column: 9
        }
      },
      "67": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 216,
          column: 20
        }
      },
      "68": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 218,
          column: 56
        }
      },
      "69": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 222,
          column: 16
        }
      },
      "70": {
        start: {
          line: 228,
          column: 0
        },
        end: {
          line: 253,
          column: 2
        }
      },
      "71": {
        start: {
          line: 229,
          column: 4
        },
        end: {
          line: 252,
          column: 5
        }
      },
      "72": {
        start: {
          line: 230,
          column: 31
        },
        end: {
          line: 230,
          column: 46
        }
      },
      "73": {
        start: {
          line: 231,
          column: 24
        },
        end: {
          line: 231,
          column: 42
        }
      },
      "74": {
        start: {
          line: 232,
          column: 24
        },
        end: {
          line: 232,
          column: 76
        }
      },
      "75": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 237,
          column: 11
        }
      },
      "76": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 246,
          column: 9
        }
      },
      "77": {
        start: {
          line: 242,
          column: 12
        },
        end: {
          line: 245,
          column: 20
        }
      },
      "78": {
        start: {
          line: 247,
          column: 8
        },
        end: {
          line: 247,
          column: 54
        }
      },
      "79": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 251,
          column: 16
        }
      },
      "80": {
        start: {
          line: 257,
          column: 0
        },
        end: {
          line: 274,
          column: 2
        }
      },
      "81": {
        start: {
          line: 258,
          column: 4
        },
        end: {
          line: 273,
          column: 5
        }
      },
      "82": {
        start: {
          line: 259,
          column: 31
        },
        end: {
          line: 259,
          column: 46
        }
      },
      "83": {
        start: {
          line: 260,
          column: 29
        },
        end: {
          line: 260,
          column: 84
        }
      },
      "84": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 265,
          column: 11
        }
      },
      "85": {
        start: {
          line: 268,
          column: 8
        },
        end: {
          line: 268,
          column: 61
        }
      },
      "86": {
        start: {
          line: 269,
          column: 8
        },
        end: {
          line: 272,
          column: 16
        }
      },
      "87": {
        start: {
          line: 279,
          column: 0
        },
        end: {
          line: 349,
          column: 2
        }
      },
      "88": {
        start: {
          line: 281,
          column: 4
        },
        end: {
          line: 348,
          column: 5
        }
      },
      "89": {
        start: {
          line: 282,
          column: 35
        },
        end: {
          line: 282,
          column: 50
        }
      },
      "90": {
        start: {
          line: 283,
          column: 24
        },
        end: {
          line: 283,
          column: 42
        }
      },
      "91": {
        start: {
          line: 284,
          column: 26
        },
        end: {
          line: 284,
          column: 46
        }
      },
      "92": {
        start: {
          line: 286,
          column: 8
        },
        end: {
          line: 291,
          column: 9
        }
      },
      "93": {
        start: {
          line: 287,
          column: 12
        },
        end: {
          line: 290,
          column: 20
        }
      },
      "94": {
        start: {
          line: 292,
          column: 146
        },
        end: {
          line: 292,
          column: 166
        }
      },
      "95": {
        start: {
          line: 294,
          column: 24
        },
        end: {
          line: 294,
          column: 71
        }
      },
      "96": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 300,
          column: 9
        }
      },
      "97": {
        start: {
          line: 296,
          column: 12
        },
        end: {
          line: 299,
          column: 20
        }
      },
      "98": {
        start: {
          line: 302,
          column: 32
        },
        end: {
          line: 306,
          column: 10
        }
      },
      "99": {
        start: {
          line: 305,
          column: 12
        },
        end: {
          line: 305,
          column: 45
        }
      },
      "100": {
        start: {
          line: 307,
          column: 8
        },
        end: {
          line: 312,
          column: 9
        }
      },
      "101": {
        start: {
          line: 308,
          column: 12
        },
        end: {
          line: 311,
          column: 20
        }
      },
      "102": {
        start: {
          line: 314,
          column: 34
        },
        end: {
          line: 314,
          column: 225
        }
      },
      "103": {
        start: {
          line: 314,
          column: 108
        },
        end: {
          line: 314,
          column: 222
        }
      },
      "104": {
        start: {
          line: 316,
          column: 8
        },
        end: {
          line: 325,
          column: 9
        }
      },
      "105": {
        start: {
          line: 317,
          column: 12
        },
        end: {
          line: 324,
          column: 15
        }
      },
      "106": {
        start: {
          line: 327,
          column: 8
        },
        end: {
          line: 330,
          column: 9
        }
      },
      "107": {
        start: {
          line: 331,
          column: 8
        },
        end: {
          line: 340,
          column: 11
        }
      },
      "108": {
        start: {
          line: 343,
          column: 8
        },
        end: {
          line: 343,
          column: 59
        }
      },
      "109": {
        start: {
          line: 344,
          column: 8
        },
        end: {
          line: 347,
          column: 16
        }
      },
      "110": {
        start: {
          line: 353,
          column: 0
        },
        end: {
          line: 431,
          column: 2
        }
      },
      "111": {
        start: {
          line: 355,
          column: 4
        },
        end: {
          line: 430,
          column: 5
        }
      },
      "112": {
        start: {
          line: 356,
          column: 35
        },
        end: {
          line: 356,
          column: 50
        }
      },
      "113": {
        start: {
          line: 357,
          column: 24
        },
        end: {
          line: 357,
          column: 42
        }
      },
      "114": {
        start: {
          line: 358,
          column: 26
        },
        end: {
          line: 358,
          column: 46
        }
      },
      "115": {
        start: {
          line: 360,
          column: 8
        },
        end: {
          line: 365,
          column: 9
        }
      },
      "116": {
        start: {
          line: 361,
          column: 12
        },
        end: {
          line: 364,
          column: 20
        }
      },
      "117": {
        start: {
          line: 366,
          column: 138
        },
        end: {
          line: 366,
          column: 158
        }
      },
      "118": {
        start: {
          line: 368,
          column: 24
        },
        end: {
          line: 368,
          column: 71
        }
      },
      "119": {
        start: {
          line: 369,
          column: 8
        },
        end: {
          line: 374,
          column: 9
        }
      },
      "120": {
        start: {
          line: 370,
          column: 12
        },
        end: {
          line: 373,
          column: 20
        }
      },
      "121": {
        start: {
          line: 376,
          column: 32
        },
        end: {
          line: 378,
          column: 10
        }
      },
      "122": {
        start: {
          line: 377,
          column: 12
        },
        end: {
          line: 377,
          column: 45
        }
      },
      "123": {
        start: {
          line: 379,
          column: 8
        },
        end: {
          line: 384,
          column: 9
        }
      },
      "124": {
        start: {
          line: 380,
          column: 12
        },
        end: {
          line: 383,
          column: 20
        }
      },
      "125": {
        start: {
          line: 386,
          column: 36
        },
        end: {
          line: 390,
          column: 10
        }
      },
      "126": {
        start: {
          line: 392,
          column: 8
        },
        end: {
          line: 402,
          column: 9
        }
      },
      "127": {
        start: {
          line: 393,
          column: 12
        },
        end: {
          line: 401,
          column: 15
        }
      },
      "128": {
        start: {
          line: 404,
          column: 8
        },
        end: {
          line: 413,
          column: 9
        }
      },
      "129": {
        start: {
          line: 405,
          column: 12
        },
        end: {
          line: 412,
          column: 15
        }
      },
      "130": {
        start: {
          line: 414,
          column: 8
        },
        end: {
          line: 422,
          column: 11
        }
      },
      "131": {
        start: {
          line: 425,
          column: 8
        },
        end: {
          line: 425,
          column: 61
        }
      },
      "132": {
        start: {
          line: 426,
          column: 8
        },
        end: {
          line: 429,
          column: 16
        }
      },
      "133": {
        start: {
          line: 435,
          column: 0
        },
        end: {
          line: 513,
          column: 2
        }
      },
      "134": {
        start: {
          line: 437,
          column: 4
        },
        end: {
          line: 512,
          column: 5
        }
      },
      "135": {
        start: {
          line: 438,
          column: 51
        },
        end: {
          line: 438,
          column: 66
        }
      },
      "136": {
        start: {
          line: 439,
          column: 24
        },
        end: {
          line: 439,
          column: 42
        }
      },
      "137": {
        start: {
          line: 440,
          column: 26
        },
        end: {
          line: 440,
          column: 46
        }
      },
      "138": {
        start: {
          line: 442,
          column: 8
        },
        end: {
          line: 447,
          column: 9
        }
      },
      "139": {
        start: {
          line: 443,
          column: 12
        },
        end: {
          line: 446,
          column: 20
        }
      },
      "140": {
        start: {
          line: 448,
          column: 97
        },
        end: {
          line: 448,
          column: 117
        }
      },
      "141": {
        start: {
          line: 450,
          column: 24
        },
        end: {
          line: 450,
          column: 71
        }
      },
      "142": {
        start: {
          line: 451,
          column: 8
        },
        end: {
          line: 456,
          column: 9
        }
      },
      "143": {
        start: {
          line: 452,
          column: 12
        },
        end: {
          line: 455,
          column: 20
        }
      },
      "144": {
        start: {
          line: 458,
          column: 32
        },
        end: {
          line: 460,
          column: 10
        }
      },
      "145": {
        start: {
          line: 459,
          column: 12
        },
        end: {
          line: 459,
          column: 45
        }
      },
      "146": {
        start: {
          line: 461,
          column: 8
        },
        end: {
          line: 466,
          column: 9
        }
      },
      "147": {
        start: {
          line: 462,
          column: 12
        },
        end: {
          line: 465,
          column: 20
        }
      },
      "148": {
        start: {
          line: 468,
          column: 35
        },
        end: {
          line: 473,
          column: 10
        }
      },
      "149": {
        start: {
          line: 475,
          column: 8
        },
        end: {
          line: 486,
          column: 9
        }
      },
      "150": {
        start: {
          line: 476,
          column: 12
        },
        end: {
          line: 485,
          column: 15
        }
      },
      "151": {
        start: {
          line: 488,
          column: 8
        },
        end: {
          line: 499,
          column: 9
        }
      },
      "152": {
        start: {
          line: 489,
          column: 12
        },
        end: {
          line: 498,
          column: 15
        }
      },
      "153": {
        start: {
          line: 500,
          column: 8
        },
        end: {
          line: 504,
          column: 11
        }
      },
      "154": {
        start: {
          line: 507,
          column: 8
        },
        end: {
          line: 507,
          column: 65
        }
      },
      "155": {
        start: {
          line: 508,
          column: 8
        },
        end: {
          line: 511,
          column: 16
        }
      },
      "156": {
        start: {
          line: 517,
          column: 0
        },
        end: {
          line: 565,
          column: 2
        }
      },
      "157": {
        start: {
          line: 519,
          column: 4
        },
        end: {
          line: 564,
          column: 5
        }
      },
      "158": {
        start: {
          line: 520,
          column: 35
        },
        end: {
          line: 520,
          column: 50
        }
      },
      "159": {
        start: {
          line: 521,
          column: 26
        },
        end: {
          line: 521,
          column: 46
        }
      },
      "160": {
        start: {
          line: 523,
          column: 8
        },
        end: {
          line: 528,
          column: 9
        }
      },
      "161": {
        start: {
          line: 524,
          column: 12
        },
        end: {
          line: 527,
          column: 20
        }
      },
      "162": {
        start: {
          line: 529,
          column: 124
        },
        end: {
          line: 529,
          column: 144
        }
      },
      "163": {
        start: {
          line: 531,
          column: 25
        },
        end: {
          line: 531,
          column: 27
        }
      },
      "164": {
        start: {
          line: 532,
          column: 8
        },
        end: {
          line: 535,
          column: 9
        }
      },
      "165": {
        start: {
          line: 533,
          column: 28
        },
        end: {
          line: 533,
          column: 75
        }
      },
      "166": {
        start: {
          line: 534,
          column: 12
        },
        end: {
          line: 534,
          column: 131
        }
      },
      "167": {
        start: {
          line: 534,
          column: 113
        },
        end: {
          line: 534,
          column: 122
        }
      },
      "168": {
        start: {
          line: 537,
          column: 22
        },
        end: {
          line: 541,
          column: 10
        }
      },
      "169": {
        start: {
          line: 542,
          column: 8
        },
        end: {
          line: 556,
          column: 11
        }
      },
      "170": {
        start: {
          line: 544,
          column: 39
        },
        end: {
          line: 553,
          column: 13
        }
      },
      "171": {
        start: {
          line: 559,
          column: 8
        },
        end: {
          line: 559,
          column: 55
        }
      },
      "172": {
        start: {
          line: 560,
          column: 8
        },
        end: {
          line: 563,
          column: 16
        }
      },
      "173": {
        start: {
          line: 569,
          column: 0
        },
        end: {
          line: 587,
          column: 2
        }
      },
      "174": {
        start: {
          line: 570,
          column: 4
        },
        end: {
          line: 586,
          column: 5
        }
      },
      "175": {
        start: {
          line: 571,
          column: 31
        },
        end: {
          line: 571,
          column: 46
        }
      },
      "176": {
        start: {
          line: 572,
          column: 22
        },
        end: {
          line: 572,
          column: 59
        }
      },
      "177": {
        start: {
          line: 573,
          column: 28
        },
        end: {
          line: 573,
          column: 82
        }
      },
      "178": {
        start: {
          line: 574,
          column: 8
        },
        end: {
          line: 578,
          column: 11
        }
      },
      "179": {
        start: {
          line: 581,
          column: 8
        },
        end: {
          line: 581,
          column: 61
        }
      },
      "180": {
        start: {
          line: 582,
          column: 8
        },
        end: {
          line: 585,
          column: 16
        }
      },
      "181": {
        start: {
          line: 591,
          column: 0
        },
        end: {
          line: 608,
          column: 2
        }
      },
      "182": {
        start: {
          line: 592,
          column: 4
        },
        end: {
          line: 607,
          column: 5
        }
      },
      "183": {
        start: {
          line: 593,
          column: 31
        },
        end: {
          line: 593,
          column: 46
        }
      },
      "184": {
        start: {
          line: 594,
          column: 27
        },
        end: {
          line: 594,
          column: 80
        }
      },
      "185": {
        start: {
          line: 595,
          column: 8
        },
        end: {
          line: 599,
          column: 11
        }
      },
      "186": {
        start: {
          line: 602,
          column: 8
        },
        end: {
          line: 602,
          column: 59
        }
      },
      "187": {
        start: {
          line: 603,
          column: 8
        },
        end: {
          line: 606,
          column: 16
        }
      },
      "188": {
        start: {
          line: 612,
          column: 0
        },
        end: {
          line: 628,
          column: 2
        }
      },
      "189": {
        start: {
          line: 613,
          column: 4
        },
        end: {
          line: 627,
          column: 5
        }
      },
      "190": {
        start: {
          line: 614,
          column: 31
        },
        end: {
          line: 614,
          column: 46
        }
      },
      "191": {
        start: {
          line: 615,
          column: 26
        },
        end: {
          line: 615,
          column: 78
        }
      },
      "192": {
        start: {
          line: 616,
          column: 8
        },
        end: {
          line: 619,
          column: 11
        }
      },
      "193": {
        start: {
          line: 622,
          column: 8
        },
        end: {
          line: 622,
          column: 58
        }
      },
      "194": {
        start: {
          line: 623,
          column: 8
        },
        end: {
          line: 626,
          column: 16
        }
      },
      "195": {
        start: {
          line: 632,
          column: 0
        },
        end: {
          line: 657,
          column: 2
        }
      },
      "196": {
        start: {
          line: 633,
          column: 4
        },
        end: {
          line: 656,
          column: 5
        }
      },
      "197": {
        start: {
          line: 634,
          column: 31
        },
        end: {
          line: 634,
          column: 46
        }
      },
      "198": {
        start: {
          line: 635,
          column: 24
        },
        end: {
          line: 635,
          column: 42
        }
      },
      "199": {
        start: {
          line: 636,
          column: 24
        },
        end: {
          line: 636,
          column: 71
        }
      },
      "200": {
        start: {
          line: 638,
          column: 32
        },
        end: {
          line: 638,
          column: 78
        }
      },
      "201": {
        start: {
          line: 640,
          column: 29
        },
        end: {
          line: 640,
          column: 158
        }
      },
      "202": {
        start: {
          line: 641,
          column: 8
        },
        end: {
          line: 648,
          column: 11
        }
      },
      "203": {
        start: {
          line: 651,
          column: 8
        },
        end: {
          line: 651,
          column: 62
        }
      },
      "204": {
        start: {
          line: 652,
          column: 8
        },
        end: {
          line: 655,
          column: 16
        }
      },
      "205": {
        start: {
          line: 661,
          column: 0
        },
        end: {
          line: 677,
          column: 2
        }
      },
      "206": {
        start: {
          line: 662,
          column: 4
        },
        end: {
          line: 676,
          column: 5
        }
      },
      "207": {
        start: {
          line: 663,
          column: 31
        },
        end: {
          line: 663,
          column: 46
        }
      },
      "208": {
        start: {
          line: 664,
          column: 22
        },
        end: {
          line: 664,
          column: 69
        }
      },
      "209": {
        start: {
          line: 665,
          column: 8
        },
        end: {
          line: 668,
          column: 11
        }
      },
      "210": {
        start: {
          line: 671,
          column: 8
        },
        end: {
          line: 671,
          column: 59
        }
      },
      "211": {
        start: {
          line: 672,
          column: 8
        },
        end: {
          line: 675,
          column: 16
        }
      },
      "212": {
        start: {
          line: 681,
          column: 0
        },
        end: {
          line: 705,
          column: 2
        }
      },
      "213": {
        start: {
          line: 682,
          column: 4
        },
        end: {
          line: 704,
          column: 5
        }
      },
      "214": {
        start: {
          line: 683,
          column: 26
        },
        end: {
          line: 683,
          column: 46
        }
      },
      "215": {
        start: {
          line: 684,
          column: 26
        },
        end: {
          line: 684,
          column: 46
        }
      },
      "216": {
        start: {
          line: 686,
          column: 8
        },
        end: {
          line: 691,
          column: 9
        }
      },
      "217": {
        start: {
          line: 687,
          column: 12
        },
        end: {
          line: 690,
          column: 20
        }
      },
      "218": {
        start: {
          line: 692,
          column: 22
        },
        end: {
          line: 692,
          column: 110
        }
      },
      "219": {
        start: {
          line: 693,
          column: 8
        },
        end: {
          line: 696,
          column: 11
        }
      },
      "220": {
        start: {
          line: 699,
          column: 8
        },
        end: {
          line: 699,
          column: 61
        }
      },
      "221": {
        start: {
          line: 700,
          column: 8
        },
        end: {
          line: 703,
          column: 16
        }
      },
      "222": {
        start: {
          line: 709,
          column: 0
        },
        end: {
          line: 732,
          column: 2
        }
      },
      "223": {
        start: {
          line: 710,
          column: 4
        },
        end: {
          line: 731,
          column: 5
        }
      },
      "224": {
        start: {
          line: 711,
          column: 29
        },
        end: {
          line: 711,
          column: 60
        }
      },
      "225": {
        start: {
          line: 712,
          column: 28
        },
        end: {
          line: 712,
          column: 52
        }
      },
      "226": {
        start: {
          line: 713,
          column: 30
        },
        end: {
          line: 713,
          column: 132
        }
      },
      "227": {
        start: {
          line: 714,
          column: 8
        },
        end: {
          line: 722,
          column: 11
        }
      },
      "228": {
        start: {
          line: 725,
          column: 8
        },
        end: {
          line: 725,
          column: 55
        }
      },
      "229": {
        start: {
          line: 726,
          column: 8
        },
        end: {
          line: 730,
          column: 16
        }
      },
      "230": {
        start: {
          line: 736,
          column: 0
        },
        end: {
          line: 790,
          column: 2
        }
      },
      "231": {
        start: {
          line: 738,
          column: 4
        },
        end: {
          line: 789,
          column: 5
        }
      },
      "232": {
        start: {
          line: 739,
          column: 31
        },
        end: {
          line: 739,
          column: 46
        }
      },
      "233": {
        start: {
          line: 740,
          column: 37
        },
        end: {
          line: 740,
          column: 57
        }
      },
      "234": {
        start: {
          line: 741,
          column: 24
        },
        end: {
          line: 741,
          column: 42
        }
      },
      "235": {
        start: {
          line: 742,
          column: 26
        },
        end: {
          line: 742,
          column: 46
        }
      },
      "236": {
        start: {
          line: 744,
          column: 24
        },
        end: {
          line: 744,
          column: 71
        }
      },
      "237": {
        start: {
          line: 745,
          column: 8
        },
        end: {
          line: 750,
          column: 9
        }
      },
      "238": {
        start: {
          line: 746,
          column: 12
        },
        end: {
          line: 749,
          column: 20
        }
      },
      "239": {
        start: {
          line: 752,
          column: 8
        },
        end: {
          line: 757,
          column: 9
        }
      },
      "240": {
        start: {
          line: 753,
          column: 12
        },
        end: {
          line: 756,
          column: 20
        }
      },
      "241": {
        start: {
          line: 759,
          column: 8
        },
        end: {
          line: 764,
          column: 9
        }
      },
      "242": {
        start: {
          line: 760,
          column: 12
        },
        end: {
          line: 763,
          column: 20
        }
      },
      "243": {
        start: {
          line: 766,
          column: 8
        },
        end: {
          line: 781,
          column: 11
        }
      },
      "244": {
        start: {
          line: 784,
          column: 8
        },
        end: {
          line: 784,
          column: 55
        }
      },
      "245": {
        start: {
          line: 785,
          column: 8
        },
        end: {
          line: 788,
          column: 16
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 20,
            column: 34
          },
          end: {
            line: 20,
            column: 35
          }
        },
        loc: {
          start: {
            line: 20,
            column: 49
          },
          end: {
            line: 63,
            column: 1
          }
        },
        line: 20
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 67,
            column: 35
          },
          end: {
            line: 67,
            column: 36
          }
        },
        loc: {
          start: {
            line: 67,
            column: 50
          },
          end: {
            line: 85,
            column: 1
          }
        },
        line: 67
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 89,
            column: 35
          },
          end: {
            line: 89,
            column: 36
          }
        },
        loc: {
          start: {
            line: 89,
            column: 50
          },
          end: {
            line: 122,
            column: 1
          }
        },
        line: 89
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 126,
            column: 46
          },
          end: {
            line: 126,
            column: 47
          }
        },
        loc: {
          start: {
            line: 126,
            column: 61
          },
          end: {
            line: 143,
            column: 1
          }
        },
        line: 126
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 147,
            column: 34
          },
          end: {
            line: 147,
            column: 35
          }
        },
        loc: {
          start: {
            line: 147,
            column: 49
          },
          end: {
            line: 173,
            column: 1
          }
        },
        line: 147
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 177,
            column: 34
          },
          end: {
            line: 177,
            column: 35
          }
        },
        loc: {
          start: {
            line: 177,
            column: 49
          },
          end: {
            line: 195,
            column: 1
          }
        },
        line: 177
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 199,
            column: 33
          },
          end: {
            line: 199,
            column: 34
          }
        },
        loc: {
          start: {
            line: 199,
            column: 48
          },
          end: {
            line: 224,
            column: 1
          }
        },
        line: 199
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 228,
            column: 31
          },
          end: {
            line: 228,
            column: 32
          }
        },
        loc: {
          start: {
            line: 228,
            column: 46
          },
          end: {
            line: 253,
            column: 1
          }
        },
        line: 228
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 257,
            column: 43
          },
          end: {
            line: 257,
            column: 44
          }
        },
        loc: {
          start: {
            line: 257,
            column: 58
          },
          end: {
            line: 274,
            column: 1
          }
        },
        line: 257
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 279,
            column: 36
          },
          end: {
            line: 279,
            column: 37
          }
        },
        loc: {
          start: {
            line: 279,
            column: 51
          },
          end: {
            line: 349,
            column: 1
          }
        },
        line: 279
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 302,
            column: 113
          },
          end: {
            line: 302,
            column: 114
          }
        },
        loc: {
          start: {
            line: 302,
            column: 132
          },
          end: {
            line: 306,
            column: 9
          }
        },
        line: 302
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 314,
            column: 100
          },
          end: {
            line: 314,
            column: 101
          }
        },
        loc: {
          start: {
            line: 314,
            column: 108
          },
          end: {
            line: 314,
            column: 222
          }
        },
        line: 314
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 353,
            column: 39
          },
          end: {
            line: 353,
            column: 40
          }
        },
        loc: {
          start: {
            line: 353,
            column: 54
          },
          end: {
            line: 431,
            column: 1
          }
        },
        line: 353
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 376,
            column: 113
          },
          end: {
            line: 376,
            column: 114
          }
        },
        loc: {
          start: {
            line: 376,
            column: 132
          },
          end: {
            line: 378,
            column: 9
          }
        },
        line: 376
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 435,
            column: 42
          },
          end: {
            line: 435,
            column: 43
          }
        },
        loc: {
          start: {
            line: 435,
            column: 57
          },
          end: {
            line: 513,
            column: 1
          }
        },
        line: 435
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 458,
            column: 113
          },
          end: {
            line: 458,
            column: 114
          }
        },
        loc: {
          start: {
            line: 458,
            column: 132
          },
          end: {
            line: 460,
            column: 9
          }
        },
        line: 458
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 517,
            column: 37
          },
          end: {
            line: 517,
            column: 38
          }
        },
        loc: {
          start: {
            line: 517,
            column: 52
          },
          end: {
            line: 565,
            column: 1
          }
        },
        line: 517
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 534,
            column: 106
          },
          end: {
            line: 534,
            column: 107
          }
        },
        loc: {
          start: {
            line: 534,
            column: 113
          },
          end: {
            line: 534,
            column: 122
          }
        },
        line: 534
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 544,
            column: 28
          },
          end: {
            line: 544,
            column: 29
          }
        },
        loc: {
          start: {
            line: 544,
            column: 39
          },
          end: {
            line: 553,
            column: 13
          }
        },
        line: 544
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 569,
            column: 35
          },
          end: {
            line: 569,
            column: 36
          }
        },
        loc: {
          start: {
            line: 569,
            column: 50
          },
          end: {
            line: 587,
            column: 1
          }
        },
        line: 569
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 591,
            column: 41
          },
          end: {
            line: 591,
            column: 42
          }
        },
        loc: {
          start: {
            line: 591,
            column: 56
          },
          end: {
            line: 608,
            column: 1
          }
        },
        line: 591
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 612,
            column: 40
          },
          end: {
            line: 612,
            column: 41
          }
        },
        loc: {
          start: {
            line: 612,
            column: 55
          },
          end: {
            line: 628,
            column: 1
          }
        },
        line: 612
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 632,
            column: 36
          },
          end: {
            line: 632,
            column: 37
          }
        },
        loc: {
          start: {
            line: 632,
            column: 51
          },
          end: {
            line: 657,
            column: 1
          }
        },
        line: 632
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 661,
            column: 40
          },
          end: {
            line: 661,
            column: 41
          }
        },
        loc: {
          start: {
            line: 661,
            column: 55
          },
          end: {
            line: 677,
            column: 1
          }
        },
        line: 661
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 681,
            column: 35
          },
          end: {
            line: 681,
            column: 36
          }
        },
        loc: {
          start: {
            line: 681,
            column: 50
          },
          end: {
            line: 705,
            column: 1
          }
        },
        line: 681
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 709,
            column: 35
          },
          end: {
            line: 709,
            column: 36
          }
        },
        loc: {
          start: {
            line: 709,
            column: 50
          },
          end: {
            line: 732,
            column: 1
          }
        },
        line: 709
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 736,
            column: 32
          },
          end: {
            line: 736,
            column: 33
          }
        },
        loc: {
          start: {
            line: 736,
            column: 47
          },
          end: {
            line: 790,
            column: 1
          }
        },
        line: 736
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 30,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 30,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 25,
            column: 12
          },
          end: {
            line: 25,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 12
          },
          end: {
            line: 25,
            column: 22
          }
        }, {
          start: {
            line: 25,
            column: 26
          },
          end: {
            line: 25,
            column: 37
          }
        }],
        line: 25
      },
      "2": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 34
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 33,
            column: 23
          },
          end: {
            line: 33,
            column: 34
          }
        }],
        line: 33
      },
      "3": {
        loc: {
          start: {
            line: 33,
            column: 36
          },
          end: {
            line: 33,
            column: 58
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 33,
            column: 55
          },
          end: {
            line: 33,
            column: 58
          }
        }],
        line: 33
      },
      "4": {
        loc: {
          start: {
            line: 33,
            column: 78
          },
          end: {
            line: 33,
            column: 106
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 33,
            column: 101
          },
          end: {
            line: 33,
            column: 106
          }
        }],
        line: 33
      },
      "5": {
        loc: {
          start: {
            line: 33,
            column: 108
          },
          end: {
            line: 33,
            column: 137
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 33,
            column: 132
          },
          end: {
            line: 33,
            column: 137
          }
        }],
        line: 33
      },
      "6": {
        loc: {
          start: {
            line: 33,
            column: 139
          },
          end: {
            line: 33,
            column: 152
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 33,
            column: 150
          },
          end: {
            line: 33,
            column: 152
          }
        }],
        line: 33
      },
      "7": {
        loc: {
          start: {
            line: 33,
            column: 154
          },
          end: {
            line: 33,
            column: 175
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 33,
            column: 173
          },
          end: {
            line: 33,
            column: 175
          }
        }],
        line: 33
      },
      "8": {
        loc: {
          start: {
            line: 53,
            column: 24
          },
          end: {
            line: 53,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 53,
            column: 53
          },
          end: {
            line: 53,
            column: 62
          }
        }, {
          start: {
            line: 53,
            column: 65
          },
          end: {
            line: 53,
            column: 76
          }
        }],
        line: 53
      },
      "9": {
        loc: {
          start: {
            line: 60,
            column: 21
          },
          end: {
            line: 60,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 60,
            column: 46
          },
          end: {
            line: 60,
            column: 59
          }
        }, {
          start: {
            line: 60,
            column: 62
          },
          end: {
            line: 60,
            column: 88
          }
        }],
        line: 60
      },
      "10": {
        loc: {
          start: {
            line: 82,
            column: 21
          },
          end: {
            line: 82,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 82,
            column: 46
          },
          end: {
            line: 82,
            column: 59
          }
        }, {
          start: {
            line: 82,
            column: 62
          },
          end: {
            line: 82,
            column: 88
          }
        }],
        line: 82
      },
      "11": {
        loc: {
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      },
      "12": {
        loc: {
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 115,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 115,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "13": {
        loc: {
          start: {
            line: 110,
            column: 12
          },
          end: {
            line: 110,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 12
          },
          end: {
            line: 110,
            column: 17
          }
        }, {
          start: {
            line: 110,
            column: 21
          },
          end: {
            line: 110,
            column: 46
          }
        }, {
          start: {
            line: 110,
            column: 50
          },
          end: {
            line: 110,
            column: 65
          }
        }, {
          start: {
            line: 110,
            column: 69
          },
          end: {
            line: 110,
            column: 104
          }
        }],
        line: 110
      },
      "14": {
        loc: {
          start: {
            line: 113,
            column: 25
          },
          end: {
            line: 113,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 113,
            column: 50
          },
          end: {
            line: 113,
            column: 63
          }
        }, {
          start: {
            line: 113,
            column: 66
          },
          end: {
            line: 113,
            column: 85
          }
        }],
        line: 113
      },
      "15": {
        loc: {
          start: {
            line: 119,
            column: 21
          },
          end: {
            line: 119,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 119,
            column: 46
          },
          end: {
            line: 119,
            column: 59
          }
        }, {
          start: {
            line: 119,
            column: 62
          },
          end: {
            line: 119,
            column: 85
          }
        }],
        line: 119
      },
      "16": {
        loc: {
          start: {
            line: 140,
            column: 21
          },
          end: {
            line: 140,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 140,
            column: 46
          },
          end: {
            line: 140,
            column: 59
          }
        }, {
          start: {
            line: 140,
            column: 62
          },
          end: {
            line: 140,
            column: 81
          }
        }],
        line: 140
      },
      "17": {
        loc: {
          start: {
            line: 161,
            column: 8
          },
          end: {
            line: 166,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 8
          },
          end: {
            line: 166,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 161
      },
      "18": {
        loc: {
          start: {
            line: 161,
            column: 12
          },
          end: {
            line: 161,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 161,
            column: 12
          },
          end: {
            line: 161,
            column: 17
          }
        }, {
          start: {
            line: 161,
            column: 21
          },
          end: {
            line: 161,
            column: 46
          }
        }, {
          start: {
            line: 161,
            column: 50
          },
          end: {
            line: 161,
            column: 65
          }
        }, {
          start: {
            line: 161,
            column: 69
          },
          end: {
            line: 161,
            column: 104
          }
        }],
        line: 161
      },
      "19": {
        loc: {
          start: {
            line: 164,
            column: 25
          },
          end: {
            line: 164,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 164,
            column: 50
          },
          end: {
            line: 164,
            column: 63
          }
        }, {
          start: {
            line: 164,
            column: 66
          },
          end: {
            line: 164,
            column: 85
          }
        }],
        line: 164
      },
      "20": {
        loc: {
          start: {
            line: 170,
            column: 21
          },
          end: {
            line: 170,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 170,
            column: 46
          },
          end: {
            line: 170,
            column: 59
          }
        }, {
          start: {
            line: 170,
            column: 62
          },
          end: {
            line: 170,
            column: 88
          }
        }],
        line: 170
      },
      "21": {
        loc: {
          start: {
            line: 192,
            column: 21
          },
          end: {
            line: 192,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 192,
            column: 46
          },
          end: {
            line: 192,
            column: 59
          }
        }, {
          start: {
            line: 192,
            column: 62
          },
          end: {
            line: 192,
            column: 88
          }
        }],
        line: 192
      },
      "22": {
        loc: {
          start: {
            line: 212,
            column: 8
          },
          end: {
            line: 217,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 212,
            column: 8
          },
          end: {
            line: 217,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 212
      },
      "23": {
        loc: {
          start: {
            line: 212,
            column: 12
          },
          end: {
            line: 212,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 212,
            column: 12
          },
          end: {
            line: 212,
            column: 17
          }
        }, {
          start: {
            line: 212,
            column: 21
          },
          end: {
            line: 212,
            column: 46
          }
        }, {
          start: {
            line: 212,
            column: 50
          },
          end: {
            line: 212,
            column: 65
          }
        }, {
          start: {
            line: 212,
            column: 69
          },
          end: {
            line: 212,
            column: 104
          }
        }],
        line: 212
      },
      "24": {
        loc: {
          start: {
            line: 215,
            column: 25
          },
          end: {
            line: 215,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 215,
            column: 50
          },
          end: {
            line: 215,
            column: 63
          }
        }, {
          start: {
            line: 215,
            column: 66
          },
          end: {
            line: 215,
            column: 85
          }
        }],
        line: 215
      },
      "25": {
        loc: {
          start: {
            line: 221,
            column: 21
          },
          end: {
            line: 221,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 221,
            column: 46
          },
          end: {
            line: 221,
            column: 59
          }
        }, {
          start: {
            line: 221,
            column: 62
          },
          end: {
            line: 221,
            column: 87
          }
        }],
        line: 221
      },
      "26": {
        loc: {
          start: {
            line: 241,
            column: 8
          },
          end: {
            line: 246,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 241,
            column: 8
          },
          end: {
            line: 246,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 241
      },
      "27": {
        loc: {
          start: {
            line: 241,
            column: 12
          },
          end: {
            line: 241,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 241,
            column: 12
          },
          end: {
            line: 241,
            column: 17
          }
        }, {
          start: {
            line: 241,
            column: 21
          },
          end: {
            line: 241,
            column: 46
          }
        }, {
          start: {
            line: 241,
            column: 50
          },
          end: {
            line: 241,
            column: 65
          }
        }, {
          start: {
            line: 241,
            column: 69
          },
          end: {
            line: 241,
            column: 104
          }
        }],
        line: 241
      },
      "28": {
        loc: {
          start: {
            line: 244,
            column: 25
          },
          end: {
            line: 244,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 244,
            column: 50
          },
          end: {
            line: 244,
            column: 63
          }
        }, {
          start: {
            line: 244,
            column: 66
          },
          end: {
            line: 244,
            column: 85
          }
        }],
        line: 244
      },
      "29": {
        loc: {
          start: {
            line: 250,
            column: 21
          },
          end: {
            line: 250,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 250,
            column: 46
          },
          end: {
            line: 250,
            column: 59
          }
        }, {
          start: {
            line: 250,
            column: 62
          },
          end: {
            line: 250,
            column: 85
          }
        }],
        line: 250
      },
      "30": {
        loc: {
          start: {
            line: 286,
            column: 8
          },
          end: {
            line: 291,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 286,
            column: 8
          },
          end: {
            line: 291,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 286
      },
      "31": {
        loc: {
          start: {
            line: 292,
            column: 30
          },
          end: {
            line: 292,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 292,
            column: 48
          },
          end: {
            line: 292,
            column: 52
          }
        }],
        line: 292
      },
      "32": {
        loc: {
          start: {
            line: 292,
            column: 74
          },
          end: {
            line: 292,
            column: 103
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 292,
            column: 93
          },
          end: {
            line: 292,
            column: 103
          }
        }],
        line: 292
      },
      "33": {
        loc: {
          start: {
            line: 292,
            column: 105
          },
          end: {
            line: 292,
            column: 140
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 292,
            column: 136
          },
          end: {
            line: 292,
            column: 140
          }
        }],
        line: 292
      },
      "34": {
        loc: {
          start: {
            line: 295,
            column: 8
          },
          end: {
            line: 300,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 295,
            column: 8
          },
          end: {
            line: 300,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 295
      },
      "35": {
        loc: {
          start: {
            line: 302,
            column: 32
          },
          end: {
            line: 306,
            column: 10
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 302,
            column: 96
          },
          end: {
            line: 302,
            column: 102
          }
        }, {
          start: {
            line: 302,
            column: 105
          },
          end: {
            line: 306,
            column: 10
          }
        }],
        line: 302
      },
      "36": {
        loc: {
          start: {
            line: 302,
            column: 32
          },
          end: {
            line: 302,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 302,
            column: 32
          },
          end: {
            line: 302,
            column: 76
          }
        }, {
          start: {
            line: 302,
            column: 80
          },
          end: {
            line: 302,
            column: 93
          }
        }],
        line: 302
      },
      "37": {
        loc: {
          start: {
            line: 307,
            column: 8
          },
          end: {
            line: 312,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 307,
            column: 8
          },
          end: {
            line: 312,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 307
      },
      "38": {
        loc: {
          start: {
            line: 307,
            column: 12
          },
          end: {
            line: 307,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 307,
            column: 12
          },
          end: {
            line: 307,
            column: 28
          }
        }, {
          start: {
            line: 307,
            column: 32
          },
          end: {
            line: 307,
            column: 62
          }
        }],
        line: 307
      },
      "39": {
        loc: {
          start: {
            line: 314,
            column: 152
          },
          end: {
            line: 314,
            column: 178
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 314,
            column: 152
          },
          end: {
            line: 314,
            column: 158
          }
        }, {
          start: {
            line: 314,
            column: 162
          },
          end: {
            line: 314,
            column: 178
          }
        }],
        line: 314
      },
      "40": {
        loc: {
          start: {
            line: 316,
            column: 8
          },
          end: {
            line: 325,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 316,
            column: 8
          },
          end: {
            line: 325,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 316
      },
      "41": {
        loc: {
          start: {
            line: 316,
            column: 12
          },
          end: {
            line: 316,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 316,
            column: 12
          },
          end: {
            line: 316,
            column: 45
          }
        }, {
          start: {
            line: 316,
            column: 49
          },
          end: {
            line: 316,
            column: 77
          }
        }],
        line: 316
      },
      "42": {
        loc: {
          start: {
            line: 327,
            column: 8
          },
          end: {
            line: 330,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 327,
            column: 8
          },
          end: {
            line: 330,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 327
      },
      "43": {
        loc: {
          start: {
            line: 336,
            column: 37
          },
          end: {
            line: 336,
            column: 119
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 336,
            column: 101
          },
          end: {
            line: 336,
            column: 107
          }
        }, {
          start: {
            line: 336,
            column: 110
          },
          end: {
            line: 336,
            column: 119
          }
        }],
        line: 336
      },
      "44": {
        loc: {
          start: {
            line: 336,
            column: 37
          },
          end: {
            line: 336,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 336,
            column: 37
          },
          end: {
            line: 336,
            column: 81
          }
        }, {
          start: {
            line: 336,
            column: 85
          },
          end: {
            line: 336,
            column: 98
          }
        }],
        line: 336
      },
      "45": {
        loc: {
          start: {
            line: 346,
            column: 21
          },
          end: {
            line: 346,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 346,
            column: 46
          },
          end: {
            line: 346,
            column: 59
          }
        }, {
          start: {
            line: 346,
            column: 62
          },
          end: {
            line: 346,
            column: 90
          }
        }],
        line: 346
      },
      "46": {
        loc: {
          start: {
            line: 360,
            column: 8
          },
          end: {
            line: 365,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 360,
            column: 8
          },
          end: {
            line: 365,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 360
      },
      "47": {
        loc: {
          start: {
            line: 366,
            column: 33
          },
          end: {
            line: 366,
            column: 67
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 366,
            column: 63
          },
          end: {
            line: 366,
            column: 67
          }
        }],
        line: 366
      },
      "48": {
        loc: {
          start: {
            line: 366,
            column: 69
          },
          end: {
            line: 366,
            column: 104
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 366,
            column: 100
          },
          end: {
            line: 366,
            column: 104
          }
        }],
        line: 366
      },
      "49": {
        loc: {
          start: {
            line: 366,
            column: 106
          },
          end: {
            line: 366,
            column: 132
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 366,
            column: 115
          },
          end: {
            line: 366,
            column: 132
          }
        }],
        line: 366
      },
      "50": {
        loc: {
          start: {
            line: 369,
            column: 8
          },
          end: {
            line: 374,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 369,
            column: 8
          },
          end: {
            line: 374,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 369
      },
      "51": {
        loc: {
          start: {
            line: 376,
            column: 32
          },
          end: {
            line: 378,
            column: 10
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 376,
            column: 96
          },
          end: {
            line: 376,
            column: 102
          }
        }, {
          start: {
            line: 376,
            column: 105
          },
          end: {
            line: 378,
            column: 10
          }
        }],
        line: 376
      },
      "52": {
        loc: {
          start: {
            line: 376,
            column: 32
          },
          end: {
            line: 376,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 376,
            column: 32
          },
          end: {
            line: 376,
            column: 76
          }
        }, {
          start: {
            line: 376,
            column: 80
          },
          end: {
            line: 376,
            column: 93
          }
        }],
        line: 376
      },
      "53": {
        loc: {
          start: {
            line: 379,
            column: 8
          },
          end: {
            line: 384,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 379,
            column: 8
          },
          end: {
            line: 384,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 379
      },
      "54": {
        loc: {
          start: {
            line: 379,
            column: 12
          },
          end: {
            line: 379,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 379,
            column: 12
          },
          end: {
            line: 379,
            column: 28
          }
        }, {
          start: {
            line: 379,
            column: 32
          },
          end: {
            line: 379,
            column: 62
          }
        }],
        line: 379
      },
      "55": {
        loc: {
          start: {
            line: 392,
            column: 8
          },
          end: {
            line: 402,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 392,
            column: 8
          },
          end: {
            line: 402,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 392
      },
      "56": {
        loc: {
          start: {
            line: 404,
            column: 8
          },
          end: {
            line: 413,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 404,
            column: 8
          },
          end: {
            line: 413,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 404
      },
      "57": {
        loc: {
          start: {
            line: 404,
            column: 12
          },
          end: {
            line: 404,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 404,
            column: 12
          },
          end: {
            line: 404,
            column: 45
          }
        }, {
          start: {
            line: 404,
            column: 49
          },
          end: {
            line: 404,
            column: 77
          }
        }],
        line: 404
      },
      "58": {
        loc: {
          start: {
            line: 419,
            column: 37
          },
          end: {
            line: 419,
            column: 119
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 419,
            column: 101
          },
          end: {
            line: 419,
            column: 107
          }
        }, {
          start: {
            line: 419,
            column: 110
          },
          end: {
            line: 419,
            column: 119
          }
        }],
        line: 419
      },
      "59": {
        loc: {
          start: {
            line: 419,
            column: 37
          },
          end: {
            line: 419,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 419,
            column: 37
          },
          end: {
            line: 419,
            column: 81
          }
        }, {
          start: {
            line: 419,
            column: 85
          },
          end: {
            line: 419,
            column: 98
          }
        }],
        line: 419
      },
      "60": {
        loc: {
          start: {
            line: 428,
            column: 21
          },
          end: {
            line: 428,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 428,
            column: 46
          },
          end: {
            line: 428,
            column: 59
          }
        }, {
          start: {
            line: 428,
            column: 62
          },
          end: {
            line: 428,
            column: 93
          }
        }],
        line: 428
      },
      "61": {
        loc: {
          start: {
            line: 442,
            column: 8
          },
          end: {
            line: 447,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 442,
            column: 8
          },
          end: {
            line: 447,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 442
      },
      "62": {
        loc: {
          start: {
            line: 442,
            column: 12
          },
          end: {
            line: 442,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 442,
            column: 12
          },
          end: {
            line: 442,
            column: 23
          }
        }, {
          start: {
            line: 442,
            column: 27
          },
          end: {
            line: 442,
            column: 42
          }
        }],
        line: 442
      },
      "63": {
        loc: {
          start: {
            line: 448,
            column: 26
          },
          end: {
            line: 448,
            column: 42
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 448,
            column: 40
          },
          end: {
            line: 448,
            column: 42
          }
        }],
        line: 448
      },
      "64": {
        loc: {
          start: {
            line: 448,
            column: 44
          },
          end: {
            line: 448,
            column: 69
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 448,
            column: 65
          },
          end: {
            line: 448,
            column: 69
          }
        }],
        line: 448
      },
      "65": {
        loc: {
          start: {
            line: 448,
            column: 71
          },
          end: {
            line: 448,
            column: 91
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 448,
            column: 87
          },
          end: {
            line: 448,
            column: 91
          }
        }],
        line: 448
      },
      "66": {
        loc: {
          start: {
            line: 451,
            column: 8
          },
          end: {
            line: 456,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 451,
            column: 8
          },
          end: {
            line: 456,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 451
      },
      "67": {
        loc: {
          start: {
            line: 458,
            column: 32
          },
          end: {
            line: 460,
            column: 10
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 458,
            column: 96
          },
          end: {
            line: 458,
            column: 102
          }
        }, {
          start: {
            line: 458,
            column: 105
          },
          end: {
            line: 460,
            column: 10
          }
        }],
        line: 458
      },
      "68": {
        loc: {
          start: {
            line: 458,
            column: 32
          },
          end: {
            line: 458,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 458,
            column: 32
          },
          end: {
            line: 458,
            column: 76
          }
        }, {
          start: {
            line: 458,
            column: 80
          },
          end: {
            line: 458,
            column: 93
          }
        }],
        line: 458
      },
      "69": {
        loc: {
          start: {
            line: 461,
            column: 8
          },
          end: {
            line: 466,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 461,
            column: 8
          },
          end: {
            line: 466,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 461
      },
      "70": {
        loc: {
          start: {
            line: 461,
            column: 12
          },
          end: {
            line: 461,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 461,
            column: 12
          },
          end: {
            line: 461,
            column: 28
          }
        }, {
          start: {
            line: 461,
            column: 32
          },
          end: {
            line: 461,
            column: 62
          }
        }],
        line: 461
      },
      "71": {
        loc: {
          start: {
            line: 475,
            column: 8
          },
          end: {
            line: 486,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 475,
            column: 8
          },
          end: {
            line: 486,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 475
      },
      "72": {
        loc: {
          start: {
            line: 488,
            column: 8
          },
          end: {
            line: 499,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 488,
            column: 8
          },
          end: {
            line: 499,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 488
      },
      "73": {
        loc: {
          start: {
            line: 488,
            column: 12
          },
          end: {
            line: 488,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 488,
            column: 12
          },
          end: {
            line: 488,
            column: 45
          }
        }, {
          start: {
            line: 488,
            column: 49
          },
          end: {
            line: 488,
            column: 62
          }
        }],
        line: 488
      },
      "74": {
        loc: {
          start: {
            line: 510,
            column: 21
          },
          end: {
            line: 510,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 510,
            column: 46
          },
          end: {
            line: 510,
            column: 59
          }
        }, {
          start: {
            line: 510,
            column: 62
          },
          end: {
            line: 510,
            column: 97
          }
        }],
        line: 510
      },
      "75": {
        loc: {
          start: {
            line: 523,
            column: 8
          },
          end: {
            line: 528,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 523,
            column: 8
          },
          end: {
            line: 528,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 523
      },
      "76": {
        loc: {
          start: {
            line: 529,
            column: 23
          },
          end: {
            line: 529,
            column: 58
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 529,
            column: 54
          },
          end: {
            line: 529,
            column: 58
          }
        }],
        line: 529
      },
      "77": {
        loc: {
          start: {
            line: 529,
            column: 60
          },
          end: {
            line: 529,
            column: 70
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 529,
            column: 68
          },
          end: {
            line: 529,
            column: 70
          }
        }],
        line: 529
      },
      "78": {
        loc: {
          start: {
            line: 529,
            column: 72
          },
          end: {
            line: 529,
            column: 118
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 529,
            column: 85
          },
          end: {
            line: 529,
            column: 118
          }
        }],
        line: 529
      },
      "79": {
        loc: {
          start: {
            line: 532,
            column: 8
          },
          end: {
            line: 535,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 532,
            column: 8
          },
          end: {
            line: 535,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 532
      },
      "80": {
        loc: {
          start: {
            line: 534,
            column: 25
          },
          end: {
            line: 534,
            column: 130
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 534,
            column: 26
          },
          end: {
            line: 534,
            column: 123
          }
        }, {
          start: {
            line: 534,
            column: 128
          },
          end: {
            line: 534,
            column: 130
          }
        }],
        line: 534
      },
      "81": {
        loc: {
          start: {
            line: 534,
            column: 26
          },
          end: {
            line: 534,
            column: 123
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 534,
            column: 90
          },
          end: {
            line: 534,
            column: 96
          }
        }, {
          start: {
            line: 534,
            column: 99
          },
          end: {
            line: 534,
            column: 123
          }
        }],
        line: 534
      },
      "82": {
        loc: {
          start: {
            line: 534,
            column: 26
          },
          end: {
            line: 534,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 534,
            column: 26
          },
          end: {
            line: 534,
            column: 70
          }
        }, {
          start: {
            line: 534,
            column: 74
          },
          end: {
            line: 534,
            column: 87
          }
        }],
        line: 534
      },
      "83": {
        loc: {
          start: {
            line: 572,
            column: 22
          },
          end: {
            line: 572,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 572,
            column: 22
          },
          end: {
            line: 572,
            column: 52
          }
        }, {
          start: {
            line: 572,
            column: 56
          },
          end: {
            line: 572,
            column: 59
          }
        }],
        line: 572
      },
      "84": {
        loc: {
          start: {
            line: 686,
            column: 8
          },
          end: {
            line: 691,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 686,
            column: 8
          },
          end: {
            line: 691,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 686
      },
      "85": {
        loc: {
          start: {
            line: 692,
            column: 58
          },
          end: {
            line: 692,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 692,
            column: 88
          },
          end: {
            line: 692,
            column: 97
          }
        }, {
          start: {
            line: 692,
            column: 100
          },
          end: {
            line: 692,
            column: 109
          }
        }],
        line: 692
      },
      "86": {
        loc: {
          start: {
            line: 713,
            column: 30
          },
          end: {
            line: 713,
            column: 132
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 713,
            column: 101
          },
          end: {
            line: 713,
            column: 110
          }
        }, {
          start: {
            line: 713,
            column: 113
          },
          end: {
            line: 713,
            column: 132
          }
        }],
        line: 713
      },
      "87": {
        loc: {
          start: {
            line: 713,
            column: 30
          },
          end: {
            line: 713,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 713,
            column: 30
          },
          end: {
            line: 713,
            column: 63
          }
        }, {
          start: {
            line: 713,
            column: 67
          },
          end: {
            line: 713,
            column: 98
          }
        }],
        line: 713
      },
      "88": {
        loc: {
          start: {
            line: 745,
            column: 8
          },
          end: {
            line: 750,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 745,
            column: 8
          },
          end: {
            line: 750,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 745
      },
      "89": {
        loc: {
          start: {
            line: 752,
            column: 8
          },
          end: {
            line: 757,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 752,
            column: 8
          },
          end: {
            line: 757,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 752
      },
      "90": {
        loc: {
          start: {
            line: 752,
            column: 12
          },
          end: {
            line: 752,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 752,
            column: 12
          },
          end: {
            line: 752,
            column: 36
          }
        }, {
          start: {
            line: 752,
            column: 40
          },
          end: {
            line: 752,
            column: 85
          }
        }],
        line: 752
      },
      "91": {
        loc: {
          start: {
            line: 759,
            column: 8
          },
          end: {
            line: 764,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 759,
            column: 8
          },
          end: {
            line: 764,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 759
      },
      "92": {
        loc: {
          start: {
            line: 759,
            column: 12
          },
          end: {
            line: 759,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 759,
            column: 12
          },
          end: {
            line: 759,
            column: 46
          }
        }, {
          start: {
            line: 759,
            column: 50
          },
          end: {
            line: 759,
            column: 88
          }
        }],
        line: 759
      },
      "93": {
        loc: {
          start: {
            line: 775,
            column: 42
          },
          end: {
            line: 775,
            column: 131
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 775,
            column: 43
          },
          end: {
            line: 775,
            column: 125
          }
        }, {
          start: {
            line: 775,
            column: 130
          },
          end: {
            line: 775,
            column: 131
          }
        }],
        line: 775
      },
      "94": {
        loc: {
          start: {
            line: 775,
            column: 43
          },
          end: {
            line: 775,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 775,
            column: 107
          },
          end: {
            line: 775,
            column: 113
          }
        }, {
          start: {
            line: 775,
            column: 116
          },
          end: {
            line: 775,
            column: 125
          }
        }],
        line: 775
      },
      "95": {
        loc: {
          start: {
            line: 775,
            column: 43
          },
          end: {
            line: 775,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 775,
            column: 43
          },
          end: {
            line: 775,
            column: 87
          }
        }, {
          start: {
            line: 775,
            column: 91
          },
          end: {
            line: 775,
            column: 104
          }
        }],
        line: 775
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0],
      "3": [0],
      "4": [0],
      "5": [0],
      "6": [0],
      "7": [0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0, 0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0, 0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0, 0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0],
      "32": [0],
      "33": [0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0],
      "48": [0],
      "49": [0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0],
      "64": [0],
      "65": [0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0],
      "77": [0],
      "78": [0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0, 0],
      "82": [0, 0],
      "83": [0, 0],
      "84": [0, 0],
      "85": [0, 0],
      "86": [0, 0],
      "87": [0, 0],
      "88": [0, 0],
      "89": [0, 0],
      "90": [0, 0],
      "91": [0, 0],
      "92": [0, 0],
      "93": [0, 0],
      "94": [0, 0],
      "95": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "07ab7e40af0a893652b04fff564ccd291ee5c06e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1cjhsg0aca = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1cjhsg0aca();
var _a;
import { MeetingService } from "@/services/meeting.service";
import { SocketService } from "@/services/socket.service";
import { WebRTCService } from "@/services/webrtc.service";
/**
 * 🎪 Enhanced Meeting Controller for Real-time Video Conferencing
 *
 * Provides REST API endpoints for:
 * - Advanced meeting management
 * - Real-time WebRTC coordination
 * - Meeting analytics and reporting
 * - System health monitoring
 */
export class MeetingController {}
/* istanbul ignore next */
cov_1cjhsg0aca().s[0]++;
_a = MeetingController;
/**
 * Create a new meeting with enhanced real-time features
 */
/* istanbul ignore next */
cov_1cjhsg0aca().s[1]++;
MeetingController.createMeeting = async ctx => {
  /* istanbul ignore next */
  cov_1cjhsg0aca().f[0]++;
  cov_1cjhsg0aca().s[2]++;
  try {
    const campus_id =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[3]++, ctx.get("campus_id"));
    const creator_id =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[4]++, ctx.get("user_id"));
    // Validate required context
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[5]++;
    if (
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[1][0]++, !campus_id) ||
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[1][1]++, !creator_id)) {
      /* istanbul ignore next */
      cov_1cjhsg0aca().b[0][0]++;
      cov_1cjhsg0aca().s[6]++;
      return ctx.json({
        success: false,
        message: "Authentication required"
      }, 401);
    } else
    /* istanbul ignore next */
    {
      cov_1cjhsg0aca().b[0][1]++;
    }
    const {
      meeting_description,
      meeting_end_time,
      meeting_location,
      meeting_meta_data,
      meeting_name,
      meeting_start_time,
      participants,
      // Enhanced options
      meeting_type =
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[2][0]++, "scheduled"),
      max_participants =
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[3][0]++, 100),
      meeting_password,
      waiting_room_enabled =
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[4][0]++, false),
      require_host_approval =
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[5][0]++, false),
      features =
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[6][0]++, {}),
      recording_config =
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[7][0]++, {})
    } =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[7]++, await ctx.req.json());
    const meeting =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[8]++, await MeetingService.createMeeting(campus_id, creator_id, {
      meeting_description,
      meeting_end_time: new Date(meeting_end_time),
      meeting_location,
      meeting_meta_data,
      meeting_name,
      meeting_start_time: new Date(meeting_start_time),
      participants,
      meeting_type,
      max_participants,
      meeting_password,
      waiting_room_enabled,
      require_host_approval,
      features,
      recording_config
    }));
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[9]++;
    return ctx.json({
      success: true,
      data: meeting,
      message: `${meeting_type === "instant" ?
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[8][0]++, "Instant") :
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[8][1]++, "Scheduled")} meeting created successfully`
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[10]++;
    console.error("Error creating meeting:", error);
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[11]++;
    return ctx.json({
      success: false,
      message: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[9][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[9][1]++, "Failed to create meeting")
    }, 500);
  }
};
/**
 * Get all meetings with real-time status
 */
/* istanbul ignore next */
cov_1cjhsg0aca().s[12]++;
MeetingController.getAllMeetings = async ctx => {
  /* istanbul ignore next */
  cov_1cjhsg0aca().f[1]++;
  cov_1cjhsg0aca().s[13]++;
  try {
    const campus_id =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[14]++, ctx.get("campus_id"));
    const creator_id =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[15]++, ctx.get("user_id"));
    const meetings =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[16]++, await MeetingService.getAllMeetings(campus_id, creator_id));
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[17]++;
    return ctx.json({
      success: true,
      data: meetings,
      count: meetings.length
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[18]++;
    console.error("Error fetching meetings:", error);
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[19]++;
    return ctx.json({
      success: false,
      message: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[10][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[10][1]++, "Failed to fetch meetings")
    }, 500);
  }
};
/**
 * Get meeting by ID with full details
 */
/* istanbul ignore next */
cov_1cjhsg0aca().s[20]++;
MeetingController.getMeetingById = async ctx => {
  /* istanbul ignore next */
  cov_1cjhsg0aca().f[2]++;
  cov_1cjhsg0aca().s[21]++;
  try {
    const {
      meeting_id
    } =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[22]++, ctx.req.param());
    const meeting =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[23]++, await MeetingService.getMeetingById(meeting_id));
    // Add real-time statistics if meeting is live
    let liveStats =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[24]++, null);
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[25]++;
    if (meeting.meeting_status === "live") {
      /* istanbul ignore next */
      cov_1cjhsg0aca().b[11][0]++;
      cov_1cjhsg0aca().s[26]++;
      try {
        /* istanbul ignore next */
        cov_1cjhsg0aca().s[27]++;
        liveStats = await WebRTCService.getMeetingStats(meeting_id);
      } catch (error) {
        /* istanbul ignore next */
        cov_1cjhsg0aca().s[28]++;
        console.warn("Failed to get live stats:", error);
      }
    } else
    /* istanbul ignore next */
    {
      cov_1cjhsg0aca().b[11][1]++;
    }
    cov_1cjhsg0aca().s[29]++;
    return ctx.json({
      success: true,
      data: Object.assign(Object.assign({}, meeting), {
        liveStats
      })
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[30]++;
    // Handle specific error types
    if (
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[13][0]++, error) &&
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[13][1]++, typeof error === "object") &&
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[13][2]++, "code" in error) &&
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[13][3]++, error.code === "DOCUMENT_NOT_FOUND")) {
      /* istanbul ignore next */
      cov_1cjhsg0aca().b[12][0]++;
      cov_1cjhsg0aca().s[31]++;
      return ctx.json({
        success: false,
        message: error instanceof Error ?
        /* istanbul ignore next */
        (cov_1cjhsg0aca().b[14][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1cjhsg0aca().b[14][1]++, "Meeting not found")
      }, 404);
    } else
    /* istanbul ignore next */
    {
      cov_1cjhsg0aca().b[12][1]++;
    }
    cov_1cjhsg0aca().s[32]++;
    console.error("Error fetching meeting:", error);
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[33]++;
    return ctx.json({
      success: false,
      message: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[15][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[15][1]++, "Internal server error")
    }, 500);
  }
};
/**
 * Get meetings where user is a participant
 */
/* istanbul ignore next */
cov_1cjhsg0aca().s[34]++;
MeetingController.getMeetingByParticipantId = async ctx => {
  /* istanbul ignore next */
  cov_1cjhsg0aca().f[3]++;
  cov_1cjhsg0aca().s[35]++;
  try {
    const participant_id =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[36]++, ctx.get("user_id"));
    const meetings =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[37]++, await MeetingService.getMeetingByParticipantId(participant_id));
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[38]++;
    return ctx.json({
      success: true,
      data: meetings,
      count: meetings.length
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[39]++;
    console.error("Error fetching participant meetings:", error);
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[40]++;
    return ctx.json({
      success: false,
      message: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[16][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[16][1]++, "No meetings found")
    }, 404);
  }
};
/**
 * Update meeting with audit trail
 */
/* istanbul ignore next */
cov_1cjhsg0aca().s[41]++;
MeetingController.updateMeeting = async ctx => {
  /* istanbul ignore next */
  cov_1cjhsg0aca().f[4]++;
  cov_1cjhsg0aca().s[42]++;
  try {
    const {
      meeting_id
    } =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[43]++, ctx.req.param());
    const user_id =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[44]++, ctx.get("user_id"));
    const data =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[45]++, await ctx.req.json());
    const meeting =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[46]++, await MeetingService.updateMeeting(meeting_id, data, user_id));
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[47]++;
    return ctx.json({
      success: true,
      data: meeting,
      message: "Meeting updated successfully"
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[48]++;
    // Handle specific error types
    if (
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[18][0]++, error) &&
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[18][1]++, typeof error === "object") &&
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[18][2]++, "code" in error) &&
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[18][3]++, error.code === "DOCUMENT_NOT_FOUND")) {
      /* istanbul ignore next */
      cov_1cjhsg0aca().b[17][0]++;
      cov_1cjhsg0aca().s[49]++;
      return ctx.json({
        success: false,
        message: error instanceof Error ?
        /* istanbul ignore next */
        (cov_1cjhsg0aca().b[19][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1cjhsg0aca().b[19][1]++, "Meeting not found")
      }, 404);
    } else
    /* istanbul ignore next */
    {
      cov_1cjhsg0aca().b[17][1]++;
    }
    cov_1cjhsg0aca().s[50]++;
    console.error("Error updating meeting:", error);
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[51]++;
    return ctx.json({
      success: false,
      message: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[20][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[20][1]++, "Failed to update meeting")
    }, 500);
  }
};
/**
 * Delete meeting (soft delete)
 */
/* istanbul ignore next */
cov_1cjhsg0aca().s[52]++;
MeetingController.deleteMeeting = async ctx => {
  /* istanbul ignore next */
  cov_1cjhsg0aca().f[5]++;
  cov_1cjhsg0aca().s[53]++;
  try {
    const {
      meeting_id
    } =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[54]++, ctx.req.param());
    const user_id =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[55]++, ctx.get("user_id"));
    const meeting =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[56]++, await MeetingService.deleteMeeting(meeting_id, user_id));
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[57]++;
    return ctx.json({
      success: true,
      data: meeting,
      message: "Meeting deleted successfully"
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[58]++;
    console.error("Error deleting meeting:", error);
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[59]++;
    return ctx.json({
      success: false,
      message: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[21][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[21][1]++, "Failed to delete meeting")
    }, 500);
  }
};
/**
 * Start a scheduled meeting
 */
/* istanbul ignore next */
cov_1cjhsg0aca().s[60]++;
MeetingController.startMeeting = async ctx => {
  /* istanbul ignore next */
  cov_1cjhsg0aca().f[6]++;
  cov_1cjhsg0aca().s[61]++;
  try {
    const {
      meeting_id
    } =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[62]++, ctx.req.param());
    const user_id =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[63]++, ctx.get("user_id"));
    const meeting =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[64]++, await MeetingService.startMeeting(meeting_id, user_id));
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[65]++;
    return ctx.json({
      success: true,
      data: meeting,
      message: "Meeting started successfully"
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[66]++;
    // Handle specific error types
    if (
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[23][0]++, error) &&
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[23][1]++, typeof error === "object") &&
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[23][2]++, "code" in error) &&
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[23][3]++, error.code === "DOCUMENT_NOT_FOUND")) {
      /* istanbul ignore next */
      cov_1cjhsg0aca().b[22][0]++;
      cov_1cjhsg0aca().s[67]++;
      return ctx.json({
        success: false,
        message: error instanceof Error ?
        /* istanbul ignore next */
        (cov_1cjhsg0aca().b[24][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1cjhsg0aca().b[24][1]++, "Meeting not found")
      }, 404);
    } else
    /* istanbul ignore next */
    {
      cov_1cjhsg0aca().b[22][1]++;
    }
    cov_1cjhsg0aca().s[68]++;
    console.error("Error starting meeting:", error);
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[69]++;
    return ctx.json({
      success: false,
      message: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[25][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[25][1]++, "Failed to start meeting")
    }, 500);
  }
};
/**
 * End a live meeting
 */
/* istanbul ignore next */
cov_1cjhsg0aca().s[70]++;
MeetingController.endMeeting = async ctx => {
  /* istanbul ignore next */
  cov_1cjhsg0aca().f[7]++;
  cov_1cjhsg0aca().s[71]++;
  try {
    const {
      meeting_id
    } =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[72]++, ctx.req.param());
    const user_id =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[73]++, ctx.get("user_id"));
    const meeting =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[74]++, await MeetingService.endMeeting(meeting_id, user_id));
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[75]++;
    return ctx.json({
      success: true,
      data: meeting,
      message: "Meeting ended successfully"
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[76]++;
    // Handle specific error types
    if (
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[27][0]++, error) &&
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[27][1]++, typeof error === "object") &&
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[27][2]++, "code" in error) &&
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[27][3]++, error.code === "DOCUMENT_NOT_FOUND")) {
      /* istanbul ignore next */
      cov_1cjhsg0aca().b[26][0]++;
      cov_1cjhsg0aca().s[77]++;
      return ctx.json({
        success: false,
        message: error instanceof Error ?
        /* istanbul ignore next */
        (cov_1cjhsg0aca().b[28][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1cjhsg0aca().b[28][1]++, "Meeting not found")
      }, 404);
    } else
    /* istanbul ignore next */
    {
      cov_1cjhsg0aca().b[26][1]++;
    }
    cov_1cjhsg0aca().s[78]++;
    console.error("Error ending meeting:", error);
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[79]++;
    return ctx.json({
      success: false,
      message: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[29][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[29][1]++, "Failed to end meeting")
    }, 500);
  }
};
/**
 * Get meeting participants with real-time status
 */
/* istanbul ignore next */
cov_1cjhsg0aca().s[80]++;
MeetingController.getMeetingParticipants = async ctx => {
  /* istanbul ignore next */
  cov_1cjhsg0aca().f[8]++;
  cov_1cjhsg0aca().s[81]++;
  try {
    const {
      meeting_id
    } =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[82]++, ctx.req.param());
    const participants =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[83]++, await MeetingService.getMeetingParticipants(meeting_id));
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[84]++;
    return ctx.json({
      success: true,
      data: participants,
      count: participants.length
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[85]++;
    console.error("Error fetching participants:", error);
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[86]++;
    return ctx.json({
      success: false,
      message: "Failed to fetch participants"
    }, 500);
  }
};
/**
 * Add participants to meeting (like Microsoft Teams)
 * Works for both scheduled and live meetings
 */
/* istanbul ignore next */
cov_1cjhsg0aca().s[87]++;
MeetingController.addParticipants = async ctx => {
  /* istanbul ignore next */
  cov_1cjhsg0aca().f[9]++;
  var _b, _c;
  /* istanbul ignore next */
  cov_1cjhsg0aca().s[88]++;
  try {
    const {
      id: meeting_id
    } =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[89]++, ctx.req.param()); // Fix: use 'id' instead of 'meeting_id'
    const user_id =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[90]++, ctx.get("user_id"));
    const campus_id =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[91]++, ctx.get("campus_id"));
    // Validate meeting_id exists
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[92]++;
    if (!meeting_id) {
      /* istanbul ignore next */
      cov_1cjhsg0aca().b[30][0]++;
      cov_1cjhsg0aca().s[93]++;
      return ctx.json({
        success: false,
        message: "Meeting ID is required"
      }, 400);
    } else
    /* istanbul ignore next */
    {
      cov_1cjhsg0aca().b[30][1]++;
    }
    const {
      participants,
      send_invitation =
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[31][0]++, true),
      invitation_message,
      participant_role =
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[32][0]++, "attendee"),
      notify_existing_participants =
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[33][0]++, true)
    } =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[94]++, await ctx.req.json());
    // Verify meeting exists and user has permission to add participants
    const meeting =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[95]++, await MeetingService.getMeetingById(meeting_id));
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[96]++;
    if (meeting.campus_id !== campus_id) {
      /* istanbul ignore next */
      cov_1cjhsg0aca().b[34][0]++;
      cov_1cjhsg0aca().s[97]++;
      return ctx.json({
        success: false,
        message: "Access denied"
      }, 403);
    } else
    /* istanbul ignore next */
    {
      cov_1cjhsg0aca().b[34][1]++;
    }
    // Check if user is host or co-host
    const userParticipant =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[98]++,
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[36][0]++, (_b = meeting.current_participants) === null) ||
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[36][1]++, _b === void 0) ?
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[35][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[35][1]++, _b.find(participantId => {
      /* istanbul ignore next */
      cov_1cjhsg0aca().f[10]++;
      cov_1cjhsg0aca().s[99]++;
      // In a real implementation, you'd need to look up the participant details
      // For now, assume the creator is the host
      return participantId === user_id;
    })));
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[100]++;
    if (
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[38][0]++, !userParticipant) &&
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[38][1]++, meeting.creator_id !== user_id)) {
      /* istanbul ignore next */
      cov_1cjhsg0aca().b[37][0]++;
      cov_1cjhsg0aca().s[101]++;
      return ctx.json({
        success: false,
        message: "Only hosts and co-hosts can add participants"
      }, 403);
    } else
    /* istanbul ignore next */
    {
      cov_1cjhsg0aca().b[37][1]++;
    }
    // Add participants to meeting
    const addedParticipants =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[102]++, await MeetingService.addParticipants(meeting_id, participants.map(p => {
      /* istanbul ignore next */
      cov_1cjhsg0aca().f[11]++;
      cov_1cjhsg0aca().s[103]++;
      return Object.assign(Object.assign({}, p), {
        role:
        /* istanbul ignore next */
        (cov_1cjhsg0aca().b[39][0]++, p.role) ||
        /* istanbul ignore next */
        (cov_1cjhsg0aca().b[39][1]++, participant_role),
        added_by: user_id,
        added_at: new Date()
      });
    })));
    // Send notifications if meeting is live
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[104]++;
    if (
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[41][0]++, meeting.meeting_status === "live") &&
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[41][1]++, notify_existing_participants)) {
      /* istanbul ignore next */
      cov_1cjhsg0aca().b[40][0]++;
      cov_1cjhsg0aca().s[105]++;
      await SocketService.notifyMeetingParticipants(meeting_id, {
        type: "participants_added",
        data: {
          new_participants: addedParticipants,
          added_by: user_id,
          message: `${addedParticipants.length} participant(s) added to the meeting`
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_1cjhsg0aca().b[40][1]++;
    }
    // Send invitations if requested
    cov_1cjhsg0aca().s[106]++;
    if (send_invitation) {
      /* istanbul ignore next */
      cov_1cjhsg0aca().b[42][0]++;
    } // Here you would integrate with your notification service
    // await NotificationService.sendMeetingInvitations(...)
    else
    /* istanbul ignore next */
    {
      cov_1cjhsg0aca().b[42][1]++;
    }
    cov_1cjhsg0aca().s[107]++;
    return ctx.json({
      success: true,
      data: {
        meeting_id,
        participants_added: addedParticipants,
        total_participants: (
        /* istanbul ignore next */
        (cov_1cjhsg0aca().b[44][0]++, (_c = meeting.current_participants) === null) ||
        /* istanbul ignore next */
        (cov_1cjhsg0aca().b[44][1]++, _c === void 0) ?
        /* istanbul ignore next */
        (cov_1cjhsg0aca().b[43][0]++, void 0) :
        /* istanbul ignore next */
        (cov_1cjhsg0aca().b[43][1]++, _c.length)) + addedParticipants.length,
        invitations_sent: send_invitation
      },
      message: `${addedParticipants.length} participant(s) added successfully`
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[108]++;
    console.error("Error adding participants:", error);
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[109]++;
    return ctx.json({
      success: false,
      message: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[45][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[45][1]++, "Failed to add participants")
    }, 500);
  }
};
/**
 * Remove participants from meeting (like Microsoft Teams)
 */
/* istanbul ignore next */
cov_1cjhsg0aca().s[110]++;
MeetingController.removeParticipants = async ctx => {
  /* istanbul ignore next */
  cov_1cjhsg0aca().f[12]++;
  var _b, _c;
  /* istanbul ignore next */
  cov_1cjhsg0aca().s[111]++;
  try {
    const {
      id: meeting_id
    } =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[112]++, ctx.req.param()); // Fix: use 'id' instead of 'meeting_id'
    const user_id =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[113]++, ctx.get("user_id"));
    const campus_id =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[114]++, ctx.get("campus_id"));
    // Validate meeting_id exists
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[115]++;
    if (!meeting_id) {
      /* istanbul ignore next */
      cov_1cjhsg0aca().b[46][0]++;
      cov_1cjhsg0aca().s[116]++;
      return ctx.json({
        success: false,
        message: "Meeting ID is required"
      }, 400);
    } else
    /* istanbul ignore next */
    {
      cov_1cjhsg0aca().b[46][1]++;
    }
    const {
      participant_ids,
      notify_removed_participants =
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[47][0]++, true),
      notify_existing_participants =
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[48][0]++, true),
      reason =
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[49][0]++, "Removed by host")
    } =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[117]++, await ctx.req.json());
    // Verify meeting exists and user has permission
    const meeting =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[118]++, await MeetingService.getMeetingById(meeting_id));
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[119]++;
    if (meeting.campus_id !== campus_id) {
      /* istanbul ignore next */
      cov_1cjhsg0aca().b[50][0]++;
      cov_1cjhsg0aca().s[120]++;
      return ctx.json({
        success: false,
        message: "Access denied"
      }, 403);
    } else
    /* istanbul ignore next */
    {
      cov_1cjhsg0aca().b[50][1]++;
    }
    // Check if user is host or co-host
    const userParticipant =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[121]++,
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[52][0]++, (_b = meeting.current_participants) === null) ||
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[52][1]++, _b === void 0) ?
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[51][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[51][1]++, _b.find(participantId => {
      /* istanbul ignore next */
      cov_1cjhsg0aca().f[13]++;
      cov_1cjhsg0aca().s[122]++;
      return participantId === user_id;
    })));
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[123]++;
    if (
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[54][0]++, !userParticipant) &&
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[54][1]++, meeting.creator_id !== user_id)) {
      /* istanbul ignore next */
      cov_1cjhsg0aca().b[53][0]++;
      cov_1cjhsg0aca().s[124]++;
      return ctx.json({
        success: false,
        message: "Only hosts and co-hosts can remove participants"
      }, 403);
    } else
    /* istanbul ignore next */
    {
      cov_1cjhsg0aca().b[53][1]++;
    }
    // Remove participants from meeting
    const removedParticipants =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[125]++, await MeetingService.removeParticipants(meeting_id, participant_ids, {
      removed_by: user_id,
      removed_at: new Date(),
      reason
    }));
    // Notify removed participants
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[126]++;
    if (notify_removed_participants) {
      /* istanbul ignore next */
      cov_1cjhsg0aca().b[55][0]++;
      cov_1cjhsg0aca().s[127]++;
      await SocketService.notifySpecificParticipants(participant_ids, {
        type: "removed_from_meeting",
        data: {
          meeting_id,
          meeting_name: meeting.meeting_name,
          reason,
          removed_by: user_id
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_1cjhsg0aca().b[55][1]++;
    }
    // Notify existing participants
    cov_1cjhsg0aca().s[128]++;
    if (
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[57][0]++, meeting.meeting_status === "live") &&
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[57][1]++, notify_existing_participants)) {
      /* istanbul ignore next */
      cov_1cjhsg0aca().b[56][0]++;
      cov_1cjhsg0aca().s[129]++;
      await SocketService.notifyMeetingParticipants(meeting_id, {
        type: "participants_removed",
        data: {
          removed_participants: removedParticipants,
          removed_by: user_id,
          message: `${removedParticipants.length} participant(s) removed from the meeting`
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_1cjhsg0aca().b[56][1]++;
    }
    cov_1cjhsg0aca().s[130]++;
    return ctx.json({
      success: true,
      data: {
        meeting_id,
        participants_removed: removedParticipants,
        total_participants: (
        /* istanbul ignore next */
        (cov_1cjhsg0aca().b[59][0]++, (_c = meeting.current_participants) === null) ||
        /* istanbul ignore next */
        (cov_1cjhsg0aca().b[59][1]++, _c === void 0) ?
        /* istanbul ignore next */
        (cov_1cjhsg0aca().b[58][0]++, void 0) :
        /* istanbul ignore next */
        (cov_1cjhsg0aca().b[58][1]++, _c.length)) - removedParticipants.length
      },
      message: `${removedParticipants.length} participant(s) removed successfully`
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[131]++;
    console.error("Error removing participants:", error);
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[132]++;
    return ctx.json({
      success: false,
      message: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[60][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[60][1]++, "Failed to remove participants")
    }, 500);
  }
};
/**
 * Update participant role/permissions (like Microsoft Teams)
 */
/* istanbul ignore next */
cov_1cjhsg0aca().s[133]++;
MeetingController.updateParticipantRole = async ctx => {
  /* istanbul ignore next */
  cov_1cjhsg0aca().f[14]++;
  var _b;
  /* istanbul ignore next */
  cov_1cjhsg0aca().s[134]++;
  try {
    const {
      id: meeting_id,
      participant_id
    } =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[135]++, ctx.req.param()); // Fix: use 'id' instead of 'meeting_id'
    const user_id =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[136]++, ctx.get("user_id"));
    const campus_id =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[137]++, ctx.get("campus_id"));
    // Validate parameters exist
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[138]++;
    if (
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[62][0]++, !meeting_id) ||
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[62][1]++, !participant_id)) {
      /* istanbul ignore next */
      cov_1cjhsg0aca().b[61][0]++;
      cov_1cjhsg0aca().s[139]++;
      return ctx.json({
        success: false,
        message: "Meeting ID and Participant ID are required"
      }, 400);
    } else
    /* istanbul ignore next */
    {
      cov_1cjhsg0aca().b[61][1]++;
    }
    const {
      new_role,
      permissions =
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[63][0]++, {}),
      notify_participant =
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[64][0]++, true),
      notify_others =
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[65][0]++, true)
    } =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[140]++, await ctx.req.json());
    // Verify meeting exists and user has permission
    const meeting =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[141]++, await MeetingService.getMeetingById(meeting_id));
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[142]++;
    if (meeting.campus_id !== campus_id) {
      /* istanbul ignore next */
      cov_1cjhsg0aca().b[66][0]++;
      cov_1cjhsg0aca().s[143]++;
      return ctx.json({
        success: false,
        message: "Access denied"
      }, 403);
    } else
    /* istanbul ignore next */
    {
      cov_1cjhsg0aca().b[66][1]++;
    }
    // Check if user is host (only hosts can change roles)
    const userParticipant =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[144]++,
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[68][0]++, (_b = meeting.current_participants) === null) ||
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[68][1]++, _b === void 0) ?
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[67][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[67][1]++, _b.find(participantId => {
      /* istanbul ignore next */
      cov_1cjhsg0aca().f[15]++;
      cov_1cjhsg0aca().s[145]++;
      return participantId === user_id;
    })));
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[146]++;
    if (
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[70][0]++, !userParticipant) &&
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[70][1]++, meeting.creator_id !== user_id)) {
      /* istanbul ignore next */
      cov_1cjhsg0aca().b[69][0]++;
      cov_1cjhsg0aca().s[147]++;
      return ctx.json({
        success: false,
        message: "Only meeting hosts can change participant roles"
      }, 403);
    } else
    /* istanbul ignore next */
    {
      cov_1cjhsg0aca().b[69][1]++;
    }
    // Update participant role
    const updatedParticipant =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[148]++, await MeetingService.updateParticipantRole(meeting_id, participant_id, {
      role: new_role,
      permissions,
      updated_by: user_id,
      updated_at: new Date()
    }));
    // Notify the participant
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[149]++;
    if (notify_participant) {
      /* istanbul ignore next */
      cov_1cjhsg0aca().b[71][0]++;
      cov_1cjhsg0aca().s[150]++;
      await SocketService.notifySpecificParticipants([participant_id], {
        type: "role_updated",
        data: {
          meeting_id,
          new_role,
          permissions,
          updated_by: user_id,
          message: `Your role has been updated to ${new_role}`
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_1cjhsg0aca().b[71][1]++;
    }
    // Notify other participants
    cov_1cjhsg0aca().s[151]++;
    if (
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[73][0]++, meeting.meeting_status === "live") &&
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[73][1]++, notify_others)) {
      /* istanbul ignore next */
      cov_1cjhsg0aca().b[72][0]++;
      cov_1cjhsg0aca().s[152]++;
      await SocketService.notifyMeetingParticipants(meeting_id, {
        type: "participant_role_changed",
        data: {
          participant_id,
          participant_name: updatedParticipant.participant_name,
          new_role,
          updated_by: user_id
        },
        exclude: [participant_id] // Don't notify the updated participant again
      });
    } else
    /* istanbul ignore next */
    {
      cov_1cjhsg0aca().b[72][1]++;
    }
    cov_1cjhsg0aca().s[153]++;
    return ctx.json({
      success: true,
      data: updatedParticipant,
      message: `Participant role updated to ${new_role}`
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[154]++;
    console.error("Error updating participant role:", error);
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[155]++;
    return ctx.json({
      success: false,
      message: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[74][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[74][1]++, "Failed to update participant role")
    }, 500);
  }
};
/**
 * Search users/contacts to add to meeting (like Microsoft Teams directory)
 */
/* istanbul ignore next */
cov_1cjhsg0aca().s[156]++;
MeetingController.searchUsersToAdd = async ctx => {
  /* istanbul ignore next */
  cov_1cjhsg0aca().f[16]++;
  var _b;
  /* istanbul ignore next */
  cov_1cjhsg0aca().s[157]++;
  try {
    const {
      id: meeting_id
    } =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[158]++, ctx.req.param()); // Fix: use 'id' instead of 'meeting_id'
    const campus_id =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[159]++, ctx.get("campus_id"));
    // Validate meeting_id exists
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[160]++;
    if (!meeting_id) {
      /* istanbul ignore next */
      cov_1cjhsg0aca().b[75][0]++;
      cov_1cjhsg0aca().s[161]++;
      return ctx.json({
        success: false,
        message: "Meeting ID is required"
      }, 400);
    } else
    /* istanbul ignore next */
    {
      cov_1cjhsg0aca().b[75][1]++;
    }
    const {
      query,
      exclude_current_participants =
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[76][0]++, true),
      limit =
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[77][0]++, 20),
      user_types =
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[78][0]++, ["teachers", "students", "staff"])
    } =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[162]++, await ctx.req.json());
    // Get current meeting participants if excluding them
    let excludeIds =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[163]++, []);
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[164]++;
    if (exclude_current_participants) {
      /* istanbul ignore next */
      cov_1cjhsg0aca().b[79][0]++;
      const meeting =
      /* istanbul ignore next */
      (cov_1cjhsg0aca().s[165]++, await MeetingService.getMeetingById(meeting_id));
      /* istanbul ignore next */
      cov_1cjhsg0aca().s[166]++;
      excludeIds =
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[80][0]++,
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[82][0]++, (_b = meeting.current_participants) === null) ||
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[82][1]++, _b === void 0) ?
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[81][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[81][1]++, _b.map(p => {
        /* istanbul ignore next */
        cov_1cjhsg0aca().f[17]++;
        cov_1cjhsg0aca().s[167]++;
        return p.user_id;
      }))) ||
      /* istanbul ignore next */
      (cov_1cjhsg0aca().b[80][1]++, []);
    } else
    /* istanbul ignore next */
    {
      cov_1cjhsg0aca().b[79][1]++;
    }
    // Search users in the same campus
    const users =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[168]++, await MeetingService.searchUsersForMeeting(campus_id, query, {
      exclude_ids: excludeIds,
      limit,
      user_types
    }));
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[169]++;
    return ctx.json({
      success: true,
      data: users.map(user => {
        /* istanbul ignore next */
        cov_1cjhsg0aca().f[18]++;
        cov_1cjhsg0aca().s[170]++;
        return {
          user_id: user.id,
          name: user.full_name,
          email: user.email,
          profile_picture: user.profile_picture,
          role_in_campus: user.role,
          department: user.department,
          is_online: user.is_online,
          last_seen: user.last_seen
        };
      }),
      query,
      count: users.length
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[171]++;
    console.error("Error searching users:", error);
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[172]++;
    return ctx.json({
      success: false,
      message: "Failed to search users"
    }, 500);
  }
};
/**
 * Get meeting chat history
 */
/* istanbul ignore next */
cov_1cjhsg0aca().s[173]++;
MeetingController.getMeetingChat = async ctx => {
  /* istanbul ignore next */
  cov_1cjhsg0aca().f[19]++;
  cov_1cjhsg0aca().s[174]++;
  try {
    const {
      meeting_id
    } =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[175]++, ctx.req.param());
    const limit =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[176]++,
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[83][0]++, Number(ctx.req.query("limit"))) ||
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[83][1]++, 100));
    const chatHistory =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[177]++, await MeetingService.getMeetingChat(meeting_id, limit));
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[178]++;
    return ctx.json({
      success: true,
      data: chatHistory,
      count: chatHistory.length
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[179]++;
    console.error("Error fetching chat history:", error);
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[180]++;
    return ctx.json({
      success: false,
      message: "Failed to fetch chat history"
    }, 500);
  }
};
/**
 * Get meeting recordings
 */
/* istanbul ignore next */
cov_1cjhsg0aca().s[181]++;
MeetingController.getMeetingRecordings = async ctx => {
  /* istanbul ignore next */
  cov_1cjhsg0aca().f[20]++;
  cov_1cjhsg0aca().s[182]++;
  try {
    const {
      meeting_id
    } =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[183]++, ctx.req.param());
    const recordings =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[184]++, await MeetingService.getMeetingRecordings(meeting_id));
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[185]++;
    return ctx.json({
      success: true,
      data: recordings,
      count: recordings.length
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[186]++;
    console.error("Error fetching recordings:", error);
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[187]++;
    return ctx.json({
      success: false,
      message: "Failed to fetch recordings"
    }, 500);
  }
};
/**
 * Get detailed meeting analytics
 */
/* istanbul ignore next */
cov_1cjhsg0aca().s[188]++;
MeetingController.getMeetingAnalytics = async ctx => {
  /* istanbul ignore next */
  cov_1cjhsg0aca().f[21]++;
  cov_1cjhsg0aca().s[189]++;
  try {
    const {
      meeting_id
    } =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[190]++, ctx.req.param());
    const analytics =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[191]++, await MeetingService.getMeetingAnalytics(meeting_id));
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[192]++;
    return ctx.json({
      success: true,
      data: analytics
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[193]++;
    console.error("Error fetching analytics:", error);
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[194]++;
    return ctx.json({
      success: false,
      message: "Failed to fetch analytics"
    }, 500);
  }
};
/**
 * Get WebRTC configuration for a meeting
 */
/* istanbul ignore next */
cov_1cjhsg0aca().s[195]++;
MeetingController.getWebRTCConfig = async ctx => {
  /* istanbul ignore next */
  cov_1cjhsg0aca().f[22]++;
  cov_1cjhsg0aca().s[196]++;
  try {
    const {
      meeting_id
    } =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[197]++, ctx.req.param());
    const user_id =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[198]++, ctx.get("user_id"));
    const meeting =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[199]++, await MeetingService.getMeetingById(meeting_id));
    // Generate TURN credentials for this user
    const turnCredentials =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[200]++, WebRTCService.generateTurnCredentials(user_id));
    // Enhance WebRTC config with TURN servers
    const webrtcConfig =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[201]++, Object.assign(Object.assign({}, meeting.webrtc_config), {
      ice_servers: [...meeting.webrtc_config.ice_servers, turnCredentials]
    }));
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[202]++;
    return ctx.json({
      success: true,
      data: {
        webrtcConfig,
        meetingFeatures: meeting.features,
        maxParticipants: meeting.max_participants
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[203]++;
    console.error("Error fetching WebRTC config:", error);
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[204]++;
    return ctx.json({
      success: false,
      message: "Failed to get WebRTC configuration"
    }, 500);
  }
};
/**
 * Get real-time meeting statistics
 */
/* istanbul ignore next */
cov_1cjhsg0aca().s[205]++;
MeetingController.getLiveMeetingStats = async ctx => {
  /* istanbul ignore next */
  cov_1cjhsg0aca().f[23]++;
  cov_1cjhsg0aca().s[206]++;
  try {
    const {
      meeting_id
    } =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[207]++, ctx.req.param());
    const stats =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[208]++, await WebRTCService.getMeetingStats(meeting_id));
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[209]++;
    return ctx.json({
      success: true,
      data: stats
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[210]++;
    console.error("Error fetching live stats:", error);
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[211]++;
    return ctx.json({
      success: false,
      message: "Failed to fetch live statistics"
    }, 500);
  }
};
/**
 * Get system-wide meeting statistics (Admin only)
 */
/* istanbul ignore next */
cov_1cjhsg0aca().s[212]++;
MeetingController.getSystemStats = async ctx => {
  /* istanbul ignore next */
  cov_1cjhsg0aca().f[24]++;
  cov_1cjhsg0aca().s[213]++;
  try {
    const user_type =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[214]++, ctx.get("user_type"));
    const campus_id =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[215]++, ctx.get("campus_id"));
    // Only admins can view system stats
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[216]++;
    if (!["Admin", "Super Admin"].includes(user_type)) {
      /* istanbul ignore next */
      cov_1cjhsg0aca().b[84][0]++;
      cov_1cjhsg0aca().s[217]++;
      return ctx.json({
        success: false,
        message: "Access denied"
      }, 403);
    } else
    /* istanbul ignore next */
    {
      cov_1cjhsg0aca().b[84][1]++;
    }
    const stats =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[218]++, await MeetingService.getSystemStats(user_type === "Super Admin" ?
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[85][0]++, undefined) :
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[85][1]++, campus_id)));
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[219]++;
    return ctx.json({
      success: true,
      data: stats
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[220]++;
    console.error("Error fetching system stats:", error);
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[221]++;
    return ctx.json({
      success: false,
      message: "Failed to fetch system statistics"
    }, 500);
  }
};
/**
 * Health check for meeting infrastructure
 */
/* istanbul ignore next */
cov_1cjhsg0aca().s[222]++;
MeetingController.getHealthCheck = async ctx => {
  /* istanbul ignore next */
  cov_1cjhsg0aca().f[25]++;
  cov_1cjhsg0aca().s[223]++;
  try {
    const webrtcHealth =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[224]++, WebRTCService.getHealthStatus());
    const socketStats =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[225]++, SocketService.getStats());
    const overallStatus =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[226]++,
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[87][0]++, webrtcHealth.status === "healthy") &&
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[87][1]++, socketStats.connectedUsers >= 0) ?
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[86][0]++, "healthy") :
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[86][1]++, webrtcHealth.status));
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[227]++;
    return ctx.json({
      success: true,
      status: overallStatus,
      data: {
        webrtc: webrtcHealth,
        sockets: socketStats,
        timestamp: new Date().toISOString()
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[228]++;
    console.error("Error in health check:", error);
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[229]++;
    return ctx.json({
      success: false,
      status: "unhealthy",
      message: "Health check failed"
    }, 500);
  }
};
/**
 * Join meeting with validation
 */
/* istanbul ignore next */
cov_1cjhsg0aca().s[230]++;
MeetingController.joinMeeting = async ctx => {
  /* istanbul ignore next */
  cov_1cjhsg0aca().f[26]++;
  var _b;
  /* istanbul ignore next */
  cov_1cjhsg0aca().s[231]++;
  try {
    const {
      meeting_id
    } =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[232]++, ctx.req.param());
    const {
      meeting_password
    } =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[233]++, await ctx.req.json());
    const user_id =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[234]++, ctx.get("user_id"));
    const campus_id =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[235]++, ctx.get("campus_id"));
    // Verify meeting exists and user has access
    const meeting =
    /* istanbul ignore next */
    (cov_1cjhsg0aca().s[236]++, await MeetingService.getMeetingById(meeting_id));
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[237]++;
    if (meeting.campus_id !== campus_id) {
      /* istanbul ignore next */
      cov_1cjhsg0aca().b[88][0]++;
      cov_1cjhsg0aca().s[238]++;
      return ctx.json({
        success: false,
        message: "Access denied"
      }, 403);
    } else
    /* istanbul ignore next */
    {
      cov_1cjhsg0aca().b[88][1]++;
    }
    // Check password if required
    cov_1cjhsg0aca().s[239]++;
    if (
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[90][0]++, meeting.meeting_password) &&
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[90][1]++, meeting.meeting_password !== meeting_password)) {
      /* istanbul ignore next */
      cov_1cjhsg0aca().b[89][0]++;
      cov_1cjhsg0aca().s[240]++;
      return ctx.json({
        success: false,
        message: "Invalid meeting password"
      }, 401);
    } else
    /* istanbul ignore next */
    {
      cov_1cjhsg0aca().b[89][1]++;
    }
    // Check if meeting is active
    cov_1cjhsg0aca().s[241]++;
    if (
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[92][0]++, meeting.meeting_status === "ended") ||
    /* istanbul ignore next */
    (cov_1cjhsg0aca().b[92][1]++, meeting.meeting_status === "cancelled")) {
      /* istanbul ignore next */
      cov_1cjhsg0aca().b[91][0]++;
      cov_1cjhsg0aca().s[242]++;
      return ctx.json({
        success: false,
        message: "Meeting has ended"
      }, 410);
    } else
    /* istanbul ignore next */
    {
      cov_1cjhsg0aca().b[91][1]++;
    }
    // Return join information
    cov_1cjhsg0aca().s[243]++;
    return ctx.json({
      success: true,
      data: {
        meeting: {
          id: meeting.id,
          name: meeting.meeting_name,
          status: meeting.meeting_status,
          features: meeting.features,
          max_participants: meeting.max_participants,
          current_participants:
          /* istanbul ignore next */
          (cov_1cjhsg0aca().b[93][0]++,
          /* istanbul ignore next */
          (cov_1cjhsg0aca().b[95][0]++, (_b = meeting.current_participants) === null) ||
          /* istanbul ignore next */
          (cov_1cjhsg0aca().b[95][1]++, _b === void 0) ?
          /* istanbul ignore next */
          (cov_1cjhsg0aca().b[94][0]++, void 0) :
          /* istanbul ignore next */
          (cov_1cjhsg0aca().b[94][1]++, _b.length)) ||
          /* istanbul ignore next */
          (cov_1cjhsg0aca().b[93][1]++, 0)
        },
        canJoin: true,
        requiresPassword: !!meeting.meeting_password,
        waitingRoomEnabled: meeting.waiting_room_enabled
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[244]++;
    console.error("Error joining meeting:", error);
    /* istanbul ignore next */
    cov_1cjhsg0aca().s[245]++;
    return ctx.json({
      success: false,
      message: "Failed to join meeting"
    }, 500);
  }
};