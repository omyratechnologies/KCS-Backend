53ba589fadff6c41086244a130af378f
/* istanbul ignore next */
function cov_19nwevkppb() {
  var path = "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/models/password_reset.model.ts";
  var hash = "31d7a62dcd6a4e6ae74f07ae8d5d74889b3707ba";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/models/password_reset.model.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 28
        },
        end: {
          line: 8,
          column: 2
        }
      },
      "1": {
        start: {
          line: 6,
          column: 45
        },
        end: {
          line: 6,
          column: 55
        }
      },
      "2": {
        start: {
          line: 7,
          column: 45
        },
        end: {
          line: 7,
          column: 55
        }
      },
      "3": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 59
        }
      },
      "4": {
        start: {
          line: 10,
          column: 23
        },
        end: {
          line: 10,
          column: 75
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 39
          },
          end: {
            line: 6,
            column: 40
          }
        },
        loc: {
          start: {
            line: 6,
            column: 45
          },
          end: {
            line: 6,
            column: 55
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 7,
            column: 39
          },
          end: {
            line: 7,
            column: 40
          }
        },
        loc: {
          start: {
            line: 7,
            column: 45
          },
          end: {
            line: 7,
            column: 55
          }
        },
        line: 7
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "31d7a62dcd6a4e6ae74f07ae8d5d74889b3707ba"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_19nwevkppb = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_19nwevkppb();
import { Schema } from "ottoman";
import { ottoman } from "../libs/db";
const PasswordResetSchema =
/* istanbul ignore next */
(cov_19nwevkppb().s[0]++, new Schema({
  user_id: {
    type: String,
    required: true
  },
  reset_token: {
    type: String,
    required: true
  },
  created_at: {
    type: Date,
    default: () => {
      /* istanbul ignore next */
      cov_19nwevkppb().f[0]++;
      cov_19nwevkppb().s[1]++;
      return new Date();
    }
  },
  updated_at: {
    type: Date,
    default: () => {
      /* istanbul ignore next */
      cov_19nwevkppb().f[1]++;
      cov_19nwevkppb().s[2]++;
      return new Date();
    }
  }
}));
/* istanbul ignore next */
cov_19nwevkppb().s[3]++;
PasswordResetSchema.index.findByUserId = {
  by: "user_id"
};
const PasswordResets =
/* istanbul ignore next */
(cov_19nwevkppb().s[4]++, ottoman.model("password_reset", PasswordResetSchema));
export { PasswordResets };