d28ac12adbb576b146351d896f22e86a
/* istanbul ignore next */
function cov_vn0d1na90() {
  var path = "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/models/time_table.model.ts";
  var hash = "3dbd55c035a68008213625d0db7d6b7a1700ddcd";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/models/time_table.model.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 24
        },
        end: {
          line: 19,
          column: 2
        }
      },
      "1": {
        start: {
          line: 17,
          column: 45
        },
        end: {
          line: 17,
          column: 55
        }
      },
      "2": {
        start: {
          line: 18,
          column: 45
        },
        end: {
          line: 18,
          column: 55
        }
      },
      "3": {
        start: {
          line: 20,
          column: 0
        },
        end: {
          line: 20,
          column: 59
        }
      },
      "4": {
        start: {
          line: 21,
          column: 0
        },
        end: {
          line: 21,
          column: 57
        }
      },
      "5": {
        start: {
          line: 22,
          column: 0
        },
        end: {
          line: 22,
          column: 61
        }
      },
      "6": {
        start: {
          line: 23,
          column: 0
        },
        end: {
          line: 23,
          column: 61
        }
      },
      "7": {
        start: {
          line: 24,
          column: 0
        },
        end: {
          line: 24,
          column: 48
        }
      },
      "8": {
        start: {
          line: 25,
          column: 0
        },
        end: {
          line: 25,
          column: 61
        }
      },
      "9": {
        start: {
          line: 26,
          column: 0
        },
        end: {
          line: 26,
          column: 57
        }
      },
      "10": {
        start: {
          line: 27,
          column: 0
        },
        end: {
          line: 29,
          column: 2
        }
      },
      "11": {
        start: {
          line: 30,
          column: 0
        },
        end: {
          line: 32,
          column: 2
        }
      },
      "12": {
        start: {
          line: 33,
          column: 0
        },
        end: {
          line: 35,
          column: 2
        }
      },
      "13": {
        start: {
          line: 36,
          column: 0
        },
        end: {
          line: 36,
          column: 74
        }
      },
      "14": {
        start: {
          line: 37,
          column: 0
        },
        end: {
          line: 39,
          column: 2
        }
      },
      "15": {
        start: {
          line: 40,
          column: 0
        },
        end: {
          line: 42,
          column: 2
        }
      },
      "16": {
        start: {
          line: 43,
          column: 18
        },
        end: {
          line: 43,
          column: 62
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 17,
            column: 39
          },
          end: {
            line: 17,
            column: 40
          }
        },
        loc: {
          start: {
            line: 17,
            column: 45
          },
          end: {
            line: 17,
            column: 55
          }
        },
        line: 17
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 18,
            column: 39
          },
          end: {
            line: 18,
            column: 40
          }
        },
        loc: {
          start: {
            line: 18,
            column: 45
          },
          end: {
            line: 18,
            column: 55
          }
        },
        line: 18
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3dbd55c035a68008213625d0db7d6b7a1700ddcd"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_vn0d1na90 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_vn0d1na90();
import { Schema } from "ottoman";
import { ottoman } from "../libs/db";
const TimetableSchema =
/* istanbul ignore next */
(cov_vn0d1na90().s[0]++, new Schema({
  campus_id: {
    type: String,
    required: true
  },
  class_id: {
    type: String,
    required: true
  },
  subject_id: {
    type: String,
    required: true
  },
  teacher_id: {
    type: String,
    required: true
  },
  day: {
    type: String,
    required: true
  },
  start_time: {
    type: String,
    required: true
  },
  end_time: {
    type: String,
    required: true
  },
  meta_data: {
    type: Object,
    required: true
  },
  is_active: {
    type: Boolean,
    required: true
  },
  is_deleted: {
    type: Boolean,
    required: true
  },
  is_suspended: {
    type: Boolean,
    required: true
  },
  is_adjourned: {
    type: Boolean,
    required: true
  },
  is_cancelled: {
    type: Boolean,
    required: true
  },
  created_at: {
    type: Date,
    default: () => {
      /* istanbul ignore next */
      cov_vn0d1na90().f[0]++;
      cov_vn0d1na90().s[1]++;
      return new Date();
    }
  },
  updated_at: {
    type: Date,
    default: () => {
      /* istanbul ignore next */
      cov_vn0d1na90().f[1]++;
      cov_vn0d1na90().s[2]++;
      return new Date();
    }
  }
}));
/* istanbul ignore next */
cov_vn0d1na90().s[3]++;
TimetableSchema.index.findByCampusId = {
  by: "campus_id"
};
/* istanbul ignore next */
cov_vn0d1na90().s[4]++;
TimetableSchema.index.findByClassId = {
  by: "class_id"
};
/* istanbul ignore next */
cov_vn0d1na90().s[5]++;
TimetableSchema.index.findBySubjectId = {
  by: "subject_id"
};
/* istanbul ignore next */
cov_vn0d1na90().s[6]++;
TimetableSchema.index.findByTeacherId = {
  by: "teacher_id"
};
/* istanbul ignore next */
cov_vn0d1na90().s[7]++;
TimetableSchema.index.findByDay = {
  by: "day"
};
/* istanbul ignore next */
cov_vn0d1na90().s[8]++;
TimetableSchema.index.findByStartTime = {
  by: "start_time"
};
/* istanbul ignore next */
cov_vn0d1na90().s[9]++;
TimetableSchema.index.findByEndTime = {
  by: "end_time"
};
/* istanbul ignore next */
cov_vn0d1na90().s[10]++;
TimetableSchema.index.findByCampusIdAndClassId = {
  by: ["campus_id", "class_id"]
};
/* istanbul ignore next */
cov_vn0d1na90().s[11]++;
TimetableSchema.index.findByCampusIdAndSubjectId = {
  by: ["campus_id", "subject_id"]
};
/* istanbul ignore next */
cov_vn0d1na90().s[12]++;
TimetableSchema.index.findByCampusIdAndTeacherId = {
  by: ["campus_id", "teacher_id"]
};
/* istanbul ignore next */
cov_vn0d1na90().s[13]++;
TimetableSchema.index.findByCampusIdAndDay = {
  by: ["campus_id", "day"]
};
/* istanbul ignore next */
cov_vn0d1na90().s[14]++;
TimetableSchema.index.findByCampusIdAndStartTime = {
  by: ["campus_id", "start_time"]
};
/* istanbul ignore next */
cov_vn0d1na90().s[15]++;
TimetableSchema.index.findByCampusIdAndEndTime = {
  by: ["campus_id", "end_time"]
};
const Timetable =
/* istanbul ignore next */
(cov_vn0d1na90().s[16]++, ottoman.model("time_table", TimetableSchema));
export { Timetable };