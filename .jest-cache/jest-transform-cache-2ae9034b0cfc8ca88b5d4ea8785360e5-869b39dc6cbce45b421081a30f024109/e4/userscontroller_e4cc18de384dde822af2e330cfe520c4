bed261eeaeb08c23dfc6dbd9ced9de61
/* istanbul ignore next */
function cov_1vz3bom75c() {
  var path = "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/controllers/users.controller.ts";
  var hash = "6621f872c6ffcc27a7a9c30c50bb1b571e3385e0";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/controllers/users.controller.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 21
        }
      },
      "1": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 47,
          column: 2
        }
      },
      "2": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "3": {
        start: {
          line: 9,
          column: 27
        },
        end: {
          line: 9,
          column: 45
        }
      },
      "4": {
        start: {
          line: 10,
          column: 27
        },
        end: {
          line: 10,
          column: 45
        }
      },
      "5": {
        start: {
          line: 11,
          column: 106
        },
        end: {
          line: 11,
          column: 124
        }
      },
      "6": {
        start: {
          line: 12,
          column: 28
        },
        end: {
          line: 12,
          column: 46
        }
      },
      "7": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 17,
          column: 9
        }
      },
      "8": {
        start: {
          line: 14,
          column: 12
        },
        end: {
          line: 16,
          column: 20
        }
      },
      "9": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 22,
          column: 9
        }
      },
      "10": {
        start: {
          line: 19,
          column: 12
        },
        end: {
          line: 21,
          column: 20
        }
      },
      "11": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 25,
          column: 9
        }
      },
      "12": {
        start: {
          line: 24,
          column: 12
        },
        end: {
          line: 24,
          column: 35
        }
      },
      "13": {
        start: {
          line: 26,
          column: 22
        },
        end: {
          line: 37,
          column: 10
        }
      },
      "14": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 29
        }
      },
      "15": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 45,
          column: 9
        }
      },
      "16": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 44,
          column: 20
        }
      },
      "17": {
        start: {
          line: 49,
          column: 0
        },
        end: {
          line: 62,
          column: 2
        }
      },
      "18": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "19": {
        start: {
          line: 51,
          column: 26
        },
        end: {
          line: 51,
          column: 44
        }
      },
      "20": {
        start: {
          line: 52,
          column: 22
        },
        end: {
          line: 52,
          column: 59
        }
      },
      "21": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 29
        }
      },
      "22": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 60,
          column: 9
        }
      },
      "23": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 59,
          column: 20
        }
      },
      "24": {
        start: {
          line: 64,
          column: 0
        },
        end: {
          line: 77,
          column: 2
        }
      },
      "25": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 76,
          column: 5
        }
      },
      "26": {
        start: {
          line: 66,
          column: 23
        },
        end: {
          line: 66,
          column: 36
        }
      },
      "27": {
        start: {
          line: 67,
          column: 22
        },
        end: {
          line: 67,
          column: 51
        }
      },
      "28": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 29
        }
      },
      "29": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 75,
          column: 9
        }
      },
      "30": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 74,
          column: 20
        }
      },
      "31": {
        start: {
          line: 79,
          column: 0
        },
        end: {
          line: 95,
          column: 2
        }
      },
      "32": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 94,
          column: 5
        }
      },
      "33": {
        start: {
          line: 81,
          column: 23
        },
        end: {
          line: 81,
          column: 36
        }
      },
      "34": {
        start: {
          line: 82,
          column: 21
        },
        end: {
          line: 82,
          column: 39
        }
      },
      "35": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 48
        }
      },
      "36": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 86,
          column: 11
        }
      },
      "37": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 93,
          column: 9
        }
      },
      "38": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 92,
          column: 20
        }
      },
      "39": {
        start: {
          line: 97,
          column: 0
        },
        end: {
          line: 112,
          column: 2
        }
      },
      "40": {
        start: {
          line: 98,
          column: 4
        },
        end: {
          line: 111,
          column: 5
        }
      },
      "41": {
        start: {
          line: 99,
          column: 23
        },
        end: {
          line: 99,
          column: 36
        }
      },
      "42": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 100,
          column: 42
        }
      },
      "43": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 103,
          column: 11
        }
      },
      "44": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 110,
          column: 9
        }
      },
      "45": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 109,
          column: 20
        }
      },
      "46": {
        start: {
          line: 114,
          column: 0
        },
        end: {
          line: 127,
          column: 2
        }
      },
      "47": {
        start: {
          line: 115,
          column: 4
        },
        end: {
          line: 126,
          column: 5
        }
      },
      "48": {
        start: {
          line: 116,
          column: 23
        },
        end: {
          line: 116,
          column: 36
        }
      },
      "49": {
        start: {
          line: 117,
          column: 23
        },
        end: {
          line: 117,
          column: 64
        }
      },
      "50": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 30
        }
      },
      "51": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 125,
          column: 9
        }
      },
      "52": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 124,
          column: 20
        }
      },
      "53": {
        start: {
          line: 129,
          column: 0
        },
        end: {
          line: 142,
          column: 2
        }
      },
      "54": {
        start: {
          line: 130,
          column: 4
        },
        end: {
          line: 141,
          column: 5
        }
      },
      "55": {
        start: {
          line: 131,
          column: 23
        },
        end: {
          line: 131,
          column: 36
        }
      },
      "56": {
        start: {
          line: 132,
          column: 25
        },
        end: {
          line: 132,
          column: 66
        }
      },
      "57": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 32
        }
      },
      "58": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 140,
          column: 9
        }
      },
      "59": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 139,
          column: 20
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 7,
            column: 31
          }
        },
        loc: {
          start: {
            line: 7,
            column: 43
          },
          end: {
            line: 47,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 49,
            column: 27
          },
          end: {
            line: 49,
            column: 28
          }
        },
        loc: {
          start: {
            line: 49,
            column: 40
          },
          end: {
            line: 62,
            column: 1
          }
        },
        line: 49
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 64,
            column: 26
          },
          end: {
            line: 64,
            column: 27
          }
        },
        loc: {
          start: {
            line: 64,
            column: 39
          },
          end: {
            line: 77,
            column: 1
          }
        },
        line: 64
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 79,
            column: 30
          },
          end: {
            line: 79,
            column: 31
          }
        },
        loc: {
          start: {
            line: 79,
            column: 43
          },
          end: {
            line: 95,
            column: 1
          }
        },
        line: 79
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 97,
            column: 30
          },
          end: {
            line: 97,
            column: 31
          }
        },
        loc: {
          start: {
            line: 97,
            column: 43
          },
          end: {
            line: 112,
            column: 1
          }
        },
        line: 97
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 114,
            column: 38
          },
          end: {
            line: 114,
            column: 39
          }
        },
        loc: {
          start: {
            line: 114,
            column: 51
          },
          end: {
            line: 127,
            column: 1
          }
        },
        line: 114
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 129,
            column: 39
          },
          end: {
            line: 129,
            column: 40
          }
        },
        loc: {
          start: {
            line: 129,
            column: 52
          },
          end: {
            line: 142,
            column: 1
          }
        },
        line: 129
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 13,
            column: 8
          },
          end: {
            line: 17,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 13,
            column: 8
          },
          end: {
            line: 17,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 13
      },
      "1": {
        loc: {
          start: {
            line: 13,
            column: 12
          },
          end: {
            line: 13,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 12
          },
          end: {
            line: 13,
            column: 40
          }
        }, {
          start: {
            line: 13,
            column: 44
          },
          end: {
            line: 13,
            column: 55
          }
        }],
        line: 13
      },
      "2": {
        loc: {
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 22,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 22,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "3": {
        loc: {
          start: {
            line: 18,
            column: 12
          },
          end: {
            line: 18,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 12
          },
          end: {
            line: 18,
            column: 40
          }
        }, {
          start: {
            line: 18,
            column: 44
          },
          end: {
            line: 18,
            column: 55
          }
        }],
        line: 18
      },
      "4": {
        loc: {
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 25,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 25,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "5": {
        loc: {
          start: {
            line: 23,
            column: 12
          },
          end: {
            line: 23,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 12
          },
          end: {
            line: 23,
            column: 22
          }
        }, {
          start: {
            line: 23,
            column: 26
          },
          end: {
            line: 23,
            column: 54
          }
        }],
        line: 23
      },
      "6": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "7": {
        loc: {
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "8": {
        loc: {
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "9": {
        loc: {
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 93,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 93,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 89
      },
      "10": {
        loc: {
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "11": {
        loc: {
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 125,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 125,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "12": {
        loc: {
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 140,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 140,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6621f872c6ffcc27a7a9c30c50bb1b571e3385e0"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1vz3bom75c = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1vz3bom75c();
var _a;
import { UserService } from "@/services/users.service";
export class UsersController {}
/* istanbul ignore next */
cov_1vz3bom75c().s[0]++;
_a = UsersController;
// Create
/* istanbul ignore next */
cov_1vz3bom75c().s[1]++;
UsersController.createUsers = async c => {
  /* istanbul ignore next */
  cov_1vz3bom75c().f[0]++;
  cov_1vz3bom75c().s[2]++;
  try {
    const _user_type =
    /* istanbul ignore next */
    (cov_1vz3bom75c().s[3]++, c.get("user_type"));
    const _campus_id =
    /* istanbul ignore next */
    (cov_1vz3bom75c().s[4]++, c.get("campus_id"));
    const {
      user_id,
      email,
      password,
      first_name,
      last_name,
      phone,
      address,
      meta_data,
      user_type
    } =
    /* istanbul ignore next */
    (cov_1vz3bom75c().s[5]++, await c.req.json());
    let {
      campus_id
    } =
    /* istanbul ignore next */
    (cov_1vz3bom75c().s[6]++, await c.req.json());
    /* istanbul ignore next */
    cov_1vz3bom75c().s[7]++;
    if (
    /* istanbul ignore next */
    (cov_1vz3bom75c().b[1][0]++, _user_type !== "Super Admin") &&
    /* istanbul ignore next */
    (cov_1vz3bom75c().b[1][1]++, !_campus_id)) {
      /* istanbul ignore next */
      cov_1vz3bom75c().b[0][0]++;
      cov_1vz3bom75c().s[8]++;
      return c.json({
        message: "You can only add users to your assigned campus"
      }, 401);
    } else
    /* istanbul ignore next */
    {
      cov_1vz3bom75c().b[0][1]++;
    }
    cov_1vz3bom75c().s[9]++;
    if (
    /* istanbul ignore next */
    (cov_1vz3bom75c().b[3][0]++, _user_type !== "Super Admin") &&
    /* istanbul ignore next */
    (cov_1vz3bom75c().b[3][1]++, !_campus_id)) {
      /* istanbul ignore next */
      cov_1vz3bom75c().b[2][0]++;
      cov_1vz3bom75c().s[10]++;
      return c.json({
        message: "Campus ID is required"
      }, 400);
    } else
    /* istanbul ignore next */
    {
      cov_1vz3bom75c().b[2][1]++;
    }
    cov_1vz3bom75c().s[11]++;
    if (
    /* istanbul ignore next */
    (cov_1vz3bom75c().b[5][0]++, !campus_id) &&
    /* istanbul ignore next */
    (cov_1vz3bom75c().b[5][1]++, _user_type !== "Super Admin")) {
      /* istanbul ignore next */
      cov_1vz3bom75c().b[4][0]++;
      cov_1vz3bom75c().s[12]++;
      campus_id = _campus_id;
    } else
    /* istanbul ignore next */
    {
      cov_1vz3bom75c().b[4][1]++;
    }
    const users =
    /* istanbul ignore next */
    (cov_1vz3bom75c().s[13]++, await UserService.createUsers({
      user_id,
      email,
      password,
      first_name,
      last_name,
      phone,
      address,
      meta_data,
      user_type,
      campus_id
    }));
    /* istanbul ignore next */
    cov_1vz3bom75c().s[14]++;
    return c.json(users);
  } catch (error) {
    /* istanbul ignore next */
    cov_1vz3bom75c().s[15]++;
    if (error instanceof Error) {
      /* istanbul ignore next */
      cov_1vz3bom75c().b[6][0]++;
      cov_1vz3bom75c().s[16]++;
      return c.json({
        message: error.message
      }, 400);
    } else
    /* istanbul ignore next */
    {
      cov_1vz3bom75c().b[6][1]++;
    }
  }
};
// Get All
/* istanbul ignore next */
cov_1vz3bom75c().s[17]++;
UsersController.getUsers = async c => {
  /* istanbul ignore next */
  cov_1vz3bom75c().f[1]++;
  cov_1vz3bom75c().s[18]++;
  try {
    const campus_id =
    /* istanbul ignore next */
    (cov_1vz3bom75c().s[19]++, c.get("campus_id"));
    const users =
    /* istanbul ignore next */
    (cov_1vz3bom75c().s[20]++, await UserService.getUsers(campus_id));
    /* istanbul ignore next */
    cov_1vz3bom75c().s[21]++;
    return c.json(users);
  } catch (error) {
    /* istanbul ignore next */
    cov_1vz3bom75c().s[22]++;
    if (error instanceof Error) {
      /* istanbul ignore next */
      cov_1vz3bom75c().b[7][0]++;
      cov_1vz3bom75c().s[23]++;
      return c.json({
        message: error.message
      }, 400);
    } else
    /* istanbul ignore next */
    {
      cov_1vz3bom75c().b[7][1]++;
    }
  }
};
// Get One
/* istanbul ignore next */
cov_1vz3bom75c().s[24]++;
UsersController.getUser = async c => {
  /* istanbul ignore next */
  cov_1vz3bom75c().f[2]++;
  cov_1vz3bom75c().s[25]++;
  try {
    const {
      id
    } =
    /* istanbul ignore next */
    (cov_1vz3bom75c().s[26]++, c.req.param());
    const users =
    /* istanbul ignore next */
    (cov_1vz3bom75c().s[27]++, await UserService.getUser(id));
    /* istanbul ignore next */
    cov_1vz3bom75c().s[28]++;
    return c.json(users);
  } catch (error) {
    /* istanbul ignore next */
    cov_1vz3bom75c().s[29]++;
    if (error instanceof Error) {
      /* istanbul ignore next */
      cov_1vz3bom75c().b[8][0]++;
      cov_1vz3bom75c().s[30]++;
      return c.json({
        message: error.message
      }, 400);
    } else
    /* istanbul ignore next */
    {
      cov_1vz3bom75c().b[8][1]++;
    }
  }
};
// Update
/* istanbul ignore next */
cov_1vz3bom75c().s[31]++;
UsersController.updateUsers = async c => {
  /* istanbul ignore next */
  cov_1vz3bom75c().f[3]++;
  cov_1vz3bom75c().s[32]++;
  try {
    const {
      id
    } =
    /* istanbul ignore next */
    (cov_1vz3bom75c().s[33]++, c.req.param());
    const data =
    /* istanbul ignore next */
    (cov_1vz3bom75c().s[34]++, await c.req.json());
    /* istanbul ignore next */
    cov_1vz3bom75c().s[35]++;
    await UserService.updateUsers(id, data);
    /* istanbul ignore next */
    cov_1vz3bom75c().s[36]++;
    return c.json({
      message: "Users updated successfully"
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1vz3bom75c().s[37]++;
    if (error instanceof Error) {
      /* istanbul ignore next */
      cov_1vz3bom75c().b[9][0]++;
      cov_1vz3bom75c().s[38]++;
      return c.json({
        message: error.message
      }, 400);
    } else
    /* istanbul ignore next */
    {
      cov_1vz3bom75c().b[9][1]++;
    }
  }
};
// Delete
/* istanbul ignore next */
cov_1vz3bom75c().s[39]++;
UsersController.deleteUsers = async c => {
  /* istanbul ignore next */
  cov_1vz3bom75c().f[4]++;
  cov_1vz3bom75c().s[40]++;
  try {
    const {
      id
    } =
    /* istanbul ignore next */
    (cov_1vz3bom75c().s[41]++, c.req.param());
    /* istanbul ignore next */
    cov_1vz3bom75c().s[42]++;
    await UserService.deleteUsers(id);
    /* istanbul ignore next */
    cov_1vz3bom75c().s[43]++;
    return c.json({
      message: "Users deleted successfully"
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1vz3bom75c().s[44]++;
    if (error instanceof Error) {
      /* istanbul ignore next */
      cov_1vz3bom75c().b[10][0]++;
      cov_1vz3bom75c().s[45]++;
      return c.json({
        message: error.message
      }, 400);
    } else
    /* istanbul ignore next */
    {
      cov_1vz3bom75c().b[10][1]++;
    }
  }
};
// getParentForStudent
/* istanbul ignore next */
cov_1vz3bom75c().s[46]++;
UsersController.getParentForStudent = async c => {
  /* istanbul ignore next */
  cov_1vz3bom75c().f[5]++;
  cov_1vz3bom75c().s[47]++;
  try {
    const {
      id
    } =
    /* istanbul ignore next */
    (cov_1vz3bom75c().s[48]++, c.req.param());
    const parent =
    /* istanbul ignore next */
    (cov_1vz3bom75c().s[49]++, await UserService.getParentForStudent(id));
    /* istanbul ignore next */
    cov_1vz3bom75c().s[50]++;
    return c.json(parent);
  } catch (error) {
    /* istanbul ignore next */
    cov_1vz3bom75c().s[51]++;
    if (error instanceof Error) {
      /* istanbul ignore next */
      cov_1vz3bom75c().b[11][0]++;
      cov_1vz3bom75c().s[52]++;
      return c.json({
        message: error.message
      }, 400);
    } else
    /* istanbul ignore next */
    {
      cov_1vz3bom75c().b[11][1]++;
    }
  }
};
//getStudentsForParent
/* istanbul ignore next */
cov_1vz3bom75c().s[53]++;
UsersController.getStudentsForParent = async c => {
  /* istanbul ignore next */
  cov_1vz3bom75c().f[6]++;
  cov_1vz3bom75c().s[54]++;
  try {
    const {
      id
    } =
    /* istanbul ignore next */
    (cov_1vz3bom75c().s[55]++, c.req.param());
    const students =
    /* istanbul ignore next */
    (cov_1vz3bom75c().s[56]++, await UserService.getStudentForParent(id));
    /* istanbul ignore next */
    cov_1vz3bom75c().s[57]++;
    return c.json(students);
  } catch (error) {
    /* istanbul ignore next */
    cov_1vz3bom75c().s[58]++;
    if (error instanceof Error) {
      /* istanbul ignore next */
      cov_1vz3bom75c().b[12][0]++;
      cov_1vz3bom75c().s[59]++;
      return c.json({
        message: error.message
      }, 400);
    } else
    /* istanbul ignore next */
    {
      cov_1vz3bom75c().b[12][1]++;
    }
  }
};