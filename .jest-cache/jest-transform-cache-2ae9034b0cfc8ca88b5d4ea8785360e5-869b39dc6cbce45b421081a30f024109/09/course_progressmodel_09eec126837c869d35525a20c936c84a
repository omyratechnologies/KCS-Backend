1266263c10fd1a63961d624342181e7d
/* istanbul ignore next */
function cov_1sderthvx0() {
  var path = "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/models/course_progress.model.ts";
  var hash = "0b31809911636ccf5562cfb8beb6a23f9536a5fb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/models/course_progress.model.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 29
        },
        end: {
          line: 46,
          column: 2
        }
      },
      "1": {
        start: {
          line: 16,
          column: 52
        },
        end: {
          line: 16,
          column: 62
        }
      },
      "2": {
        start: {
          line: 17,
          column: 51
        },
        end: {
          line: 17,
          column: 61
        }
      },
      "3": {
        start: {
          line: 44,
          column: 45
        },
        end: {
          line: 44,
          column: 55
        }
      },
      "4": {
        start: {
          line: 45,
          column: 45
        },
        end: {
          line: 45,
          column: 55
        }
      },
      "5": {
        start: {
          line: 48,
          column: 0
        },
        end: {
          line: 48,
          column: 64
        }
      },
      "6": {
        start: {
          line: 49,
          column: 0
        },
        end: {
          line: 49,
          column: 60
        }
      },
      "7": {
        start: {
          line: 50,
          column: 0
        },
        end: {
          line: 50,
          column: 66
        }
      },
      "8": {
        start: {
          line: 51,
          column: 0
        },
        end: {
          line: 51,
          column: 64
        }
      },
      "9": {
        start: {
          line: 52,
          column: 0
        },
        end: {
          line: 54,
          column: 2
        }
      },
      "10": {
        start: {
          line: 55,
          column: 0
        },
        end: {
          line: 57,
          column: 2
        }
      },
      "11": {
        start: {
          line: 58,
          column: 0
        },
        end: {
          line: 58,
          column: 68
        }
      },
      "12": {
        start: {
          line: 59,
          column: 23
        },
        end: {
          line: 59,
          column: 77
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 16,
            column: 46
          },
          end: {
            line: 16,
            column: 47
          }
        },
        loc: {
          start: {
            line: 16,
            column: 52
          },
          end: {
            line: 16,
            column: 62
          }
        },
        line: 16
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 17,
            column: 45
          },
          end: {
            line: 17,
            column: 46
          }
        },
        loc: {
          start: {
            line: 17,
            column: 51
          },
          end: {
            line: 17,
            column: 61
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 44,
            column: 39
          },
          end: {
            line: 44,
            column: 40
          }
        },
        loc: {
          start: {
            line: 44,
            column: 45
          },
          end: {
            line: 44,
            column: 55
          }
        },
        line: 44
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 45,
            column: 39
          },
          end: {
            line: 45,
            column: 40
          }
        },
        loc: {
          start: {
            line: 45,
            column: 45
          },
          end: {
            line: 45,
            column: 55
          }
        },
        line: 45
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0b31809911636ccf5562cfb8beb6a23f9536a5fb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1sderthvx0 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1sderthvx0();
import { Schema } from "ottoman";
import { ottoman } from "../libs/db";
const CourseProgressSchema =
/* istanbul ignore next */
(cov_1sderthvx0().s[0]++, new Schema({
  course_id: {
    type: String,
    required: true
  },
  user_id: {
    type: String,
    required: true
  },
  lecture_id: {
    type: String,
    required: true
  },
  campus_id: {
    type: String,
    required: true
  },
  progress_status: {
    type: String,
    enum: ["not_started", "in_progress", "completed", "skipped"],
    default: "not_started"
  },
  watch_time_seconds: {
    type: Number,
    default: 0
  },
  total_duration_seconds: {
    type: Number,
    default: 0
  },
  completion_percentage: {
    type: Number,
    default: 0
  },
  first_accessed_at: {
    type: Date,
    default: () => {
      /* istanbul ignore next */
      cov_1sderthvx0().f[0]++;
      cov_1sderthvx0().s[1]++;
      return new Date();
    }
  },
  last_accessed_at: {
    type: Date,
    default: () => {
      /* istanbul ignore next */
      cov_1sderthvx0().f[1]++;
      cov_1sderthvx0().s[2]++;
      return new Date();
    }
  },
  completed_at: {
    type: Date
  },
  resume_position_seconds: {
    type: Number,
    default: 0
  },
  interaction_data: {
    type: Object,
    default: {
      play_count: 0,
      pause_count: 0,
      seek_count: 0,
      speed_changes: 0,
      quality_changes: 0,
      fullscreen_toggles: 0,
      notes_taken: 0,
      bookmarked: false,
      liked: false
    }
  },
  quiz_data: {
    type: Object
  },
  assignment_data: {
    type: Object
  },
  notes: {
    type: [Object],
    default: []
  },
  device_info: {
    type: Object,
    default: {
      device_type: "web"
    }
  },
  meta_data: {
    type: Object,
    default: {}
  },
  created_at: {
    type: Date,
    default: () => {
      /* istanbul ignore next */
      cov_1sderthvx0().f[2]++;
      cov_1sderthvx0().s[3]++;
      return new Date();
    }
  },
  updated_at: {
    type: Date,
    default: () => {
      /* istanbul ignore next */
      cov_1sderthvx0().f[3]++;
      cov_1sderthvx0().s[4]++;
      return new Date();
    }
  }
}));
// Compound indexes for efficient queries
/* istanbul ignore next */
cov_1sderthvx0().s[5]++;
CourseProgressSchema.index.findByCourseId = {
  by: "course_id"
};
/* istanbul ignore next */
cov_1sderthvx0().s[6]++;
CourseProgressSchema.index.findByUserId = {
  by: "user_id"
};
/* istanbul ignore next */
cov_1sderthvx0().s[7]++;
CourseProgressSchema.index.findByLectureId = {
  by: "lecture_id"
};
/* istanbul ignore next */
cov_1sderthvx0().s[8]++;
CourseProgressSchema.index.findByCampusId = {
  by: "campus_id"
};
/* istanbul ignore next */
cov_1sderthvx0().s[9]++;
CourseProgressSchema.index.findByUserAndCourse = {
  by: ["user_id", "course_id"]
};
/* istanbul ignore next */
cov_1sderthvx0().s[10]++;
CourseProgressSchema.index.findByUserAndLecture = {
  by: ["user_id", "lecture_id"]
};
/* istanbul ignore next */
cov_1sderthvx0().s[11]++;
CourseProgressSchema.index.findByStatus = {
  by: "progress_status"
};
const CourseProgress =
/* istanbul ignore next */
(cov_1sderthvx0().s[12]++, ottoman.model("course_progress", CourseProgressSchema));
export { CourseProgress };