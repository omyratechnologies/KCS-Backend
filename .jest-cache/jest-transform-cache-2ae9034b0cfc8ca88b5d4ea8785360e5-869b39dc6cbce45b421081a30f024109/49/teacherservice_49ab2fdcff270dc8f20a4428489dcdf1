87489f1bab873e5ee6eb2df4f3ac0340
/* istanbul ignore next */
function cov_1jkhrg2we6() {
  var path = "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/services/teacher.service.ts";
  var hash = "3e24c8eba5527c4674dfa2cb8236dbffa2c2d26c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/services/teacher.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 24
        },
        end: {
          line: 8,
          column: 164
        }
      },
      "1": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 11,
          column: 9
        }
      },
      "2": {
        start: {
          line: 10,
          column: 12
        },
        end: {
          line: 10,
          column: 51
        }
      },
      "3": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 43,
          column: 9
        }
      },
      "4": {
        start: {
          line: 14,
          column: 12
        },
        end: {
          line: 42,
          column: 13
        }
      },
      "5": {
        start: {
          line: 15,
          column: 29
        },
        end: {
          line: 15,
          column: 75
        }
      },
      "6": {
        start: {
          line: 16,
          column: 16
        },
        end: {
          line: 36,
          column: 17
        }
      },
      "7": {
        start: {
          line: 18,
          column: 43
        },
        end: {
          line: 18,
          column: 45
        }
      },
      "8": {
        start: {
          line: 19,
          column: 20
        },
        end: {
          line: 29,
          column: 21
        }
      },
      "9": {
        start: {
          line: 20,
          column: 24
        },
        end: {
          line: 25,
          column: 25
        }
      },
      "10": {
        start: {
          line: 21,
          column: 28
        },
        end: {
          line: 21,
          column: 74
        }
      },
      "11": {
        start: {
          line: 24,
          column: 28
        },
        end: {
          line: 24,
          column: 50
        }
      },
      "12": {
        start: {
          line: 27,
          column: 25
        },
        end: {
          line: 29,
          column: 21
        }
      },
      "13": {
        start: {
          line: 28,
          column: 24
        },
        end: {
          line: 28,
          column: 58
        }
      },
      "14": {
        start: {
          line: 31,
          column: 44
        },
        end: {
          line: 31,
          column: 122
        }
      },
      "15": {
        start: {
          line: 33,
          column: 20
        },
        end: {
          line: 35,
          column: 23
        }
      },
      "16": {
        start: {
          line: 39,
          column: 16
        },
        end: {
          line: 39,
          column: 91
        }
      },
      "17": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 23
        }
      },
      "18": {
        start: {
          line: 48,
          column: 25
        },
        end: {
          line: 54,
          column: 10
        }
      },
      "19": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "20": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 49
        }
      },
      "21": {
        start: {
          line: 58,
          column: 31
        },
        end: {
          line: 60,
          column: 10
        }
      },
      "22": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 51
        }
      },
      "23": {
        start: {
          line: 61,
          column: 23
        },
        end: {
          line: 61,
          column: 56
        }
      },
      "24": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 64,
          column: 9
        }
      },
      "25": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 49
        }
      },
      "26": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 22
        }
      },
      "27": {
        start: {
          line: 69,
          column: 24
        },
        end: {
          line: 69,
          column: 50
        }
      },
      "28": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 72,
          column: 9
        }
      },
      "29": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 49
        }
      },
      "30": {
        start: {
          line: 73,
          column: 32
        },
        end: {
          line: 73,
          column: 74
        }
      },
      "31": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 76,
          column: 9
        }
      },
      "32": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 57
        }
      },
      "33": {
        start: {
          line: 77,
          column: 33
        },
        end: {
          line: 77,
          column: 81
        }
      },
      "34": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 80,
          column: 9
        }
      },
      "35": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 58
        }
      },
      "36": {
        start: {
          line: 81,
          column: 32
        },
        end: {
          line: 81,
          column: 79
        }
      },
      "37": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "38": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 57
        }
      },
      "39": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 87,
          column: 31
        }
      },
      "40": {
        start: {
          line: 91,
          column: 24
        },
        end: {
          line: 91,
          column: 50
        }
      },
      "41": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 94,
          column: 9
        }
      },
      "42": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 49
        }
      },
      "43": {
        start: {
          line: 95,
          column: 31
        },
        end: {
          line: 95,
          column: 134
        }
      },
      "44": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 98,
          column: 9
        }
      },
      "45": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 97,
          column: 51
        }
      },
      "46": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 99,
          column: 30
        }
      },
      "47": {
        start: {
          line: 103,
          column: 24
        },
        end: {
          line: 103,
          column: 50
        }
      },
      "48": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 106,
          column: 9
        }
      },
      "49": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 49
        }
      },
      "50": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 138,
          column: 9
        }
      },
      "51": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 137,
          column: 13
        }
      },
      "52": {
        start: {
          line: 110,
          column: 29
        },
        end: {
          line: 110,
          column: 71
        }
      },
      "53": {
        start: {
          line: 111,
          column: 16
        },
        end: {
          line: 131,
          column: 17
        }
      },
      "54": {
        start: {
          line: 113,
          column: 43
        },
        end: {
          line: 113,
          column: 45
        }
      },
      "55": {
        start: {
          line: 114,
          column: 20
        },
        end: {
          line: 124,
          column: 21
        }
      },
      "56": {
        start: {
          line: 115,
          column: 24
        },
        end: {
          line: 120,
          column: 25
        }
      },
      "57": {
        start: {
          line: 116,
          column: 28
        },
        end: {
          line: 116,
          column: 74
        }
      },
      "58": {
        start: {
          line: 119,
          column: 28
        },
        end: {
          line: 119,
          column: 50
        }
      },
      "59": {
        start: {
          line: 122,
          column: 25
        },
        end: {
          line: 124,
          column: 21
        }
      },
      "60": {
        start: {
          line: 123,
          column: 24
        },
        end: {
          line: 123,
          column: 58
        }
      },
      "61": {
        start: {
          line: 126,
          column: 20
        },
        end: {
          line: 126,
          column: 55
        }
      },
      "62": {
        start: {
          line: 128,
          column: 20
        },
        end: {
          line: 130,
          column: 23
        }
      },
      "63": {
        start: {
          line: 134,
          column: 16
        },
        end: {
          line: 134,
          column: 91
        }
      },
      "64": {
        start: {
          line: 139,
          column: 31
        },
        end: {
          line: 139,
          column: 59
        }
      },
      "65": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 142,
          column: 9
        }
      },
      "66": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 51
        }
      },
      "67": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 143,
          column: 30
        }
      },
      "68": {
        start: {
          line: 147,
          column: 24
        },
        end: {
          line: 147,
          column: 57
        }
      },
      "69": {
        start: {
          line: 148,
          column: 25
        },
        end: {
          line: 148,
          column: 40
        }
      },
      "70": {
        start: {
          line: 149,
          column: 30
        },
        end: {
          line: 151,
          column: 10
        }
      },
      "71": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 150,
          column: 49
        }
      },
      "72": {
        start: {
          line: 152,
          column: 26
        },
        end: {
          line: 152,
          column: 58
        }
      },
      "73": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 153,
          column: 67
        }
      },
      "74": {
        start: {
          line: 153,
          column: 47
        },
        end: {
          line: 153,
          column: 65
        }
      },
      "75": {
        start: {
          line: 157,
          column: 24
        },
        end: {
          line: 157,
          column: 57
        }
      },
      "76": {
        start: {
          line: 158,
          column: 27
        },
        end: {
          line: 158,
          column: 43
        }
      },
      "77": {
        start: {
          line: 159,
          column: 32
        },
        end: {
          line: 161,
          column: 10
        }
      },
      "78": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 160,
          column: 53
        }
      },
      "79": {
        start: {
          line: 162,
          column: 28
        },
        end: {
          line: 162,
          column: 62
        }
      },
      "80": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 163,
          column: 65
        }
      },
      "81": {
        start: {
          line: 163,
          column: 47
        },
        end: {
          line: 163,
          column: 63
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        loc: {
          start: {
            line: 7,
            column: 54
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        loc: {
          start: {
            line: 47,
            column: 42
          },
          end: {
            line: 66,
            column: 5
          }
        },
        line: 47
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 58,
            column: 49
          },
          end: {
            line: 58,
            column: 50
          }
        },
        loc: {
          start: {
            line: 58,
            column: 62
          },
          end: {
            line: 60,
            column: 9
          }
        },
        line: 58
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 68,
            column: 5
          }
        },
        loc: {
          start: {
            line: 68,
            column: 36
          },
          end: {
            line: 88,
            column: 5
          }
        },
        line: 68
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 90,
            column: 5
          }
        },
        loc: {
          start: {
            line: 90,
            column: 48
          },
          end: {
            line: 100,
            column: 5
          }
        },
        line: 90
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 102,
            column: 4
          },
          end: {
            line: 102,
            column: 5
          }
        },
        loc: {
          start: {
            line: 102,
            column: 35
          },
          end: {
            line: 144,
            column: 5
          }
        },
        line: 102
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 146,
            column: 4
          },
          end: {
            line: 146,
            column: 5
          }
        },
        loc: {
          start: {
            line: 146,
            column: 53
          },
          end: {
            line: 154,
            column: 5
          }
        },
        line: 146
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 149,
            column: 43
          },
          end: {
            line: 149,
            column: 44
          }
        },
        loc: {
          start: {
            line: 149,
            column: 62
          },
          end: {
            line: 151,
            column: 9
          }
        },
        line: 149
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 153,
            column: 32
          },
          end: {
            line: 153,
            column: 33
          }
        },
        loc: {
          start: {
            line: 153,
            column: 47
          },
          end: {
            line: 153,
            column: 65
          }
        },
        line: 153
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 156,
            column: 4
          },
          end: {
            line: 156,
            column: 5
          }
        },
        loc: {
          start: {
            line: 156,
            column: 54
          },
          end: {
            line: 164,
            column: 5
          }
        },
        line: 156
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 159,
            column: 47
          },
          end: {
            line: 159,
            column: 48
          }
        },
        loc: {
          start: {
            line: 159,
            column: 68
          },
          end: {
            line: 161,
            column: 9
          }
        },
        line: 159
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 163,
            column: 34
          },
          end: {
            line: 163,
            column: 35
          }
        },
        loc: {
          start: {
            line: 163,
            column: 47
          },
          end: {
            line: 163,
            column: 63
          }
        },
        line: 163
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 11,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 11,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "1": {
        loc: {
          start: {
            line: 13,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 13,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 13
      },
      "2": {
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 36,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 36,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "3": {
        loc: {
          start: {
            line: 19,
            column: 20
          },
          end: {
            line: 29,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 20
          },
          end: {
            line: 29,
            column: 21
          }
        }, {
          start: {
            line: 27,
            column: 25
          },
          end: {
            line: 29,
            column: 21
          }
        }],
        line: 19
      },
      "4": {
        loc: {
          start: {
            line: 27,
            column: 25
          },
          end: {
            line: 29,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 25
          },
          end: {
            line: 29,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "5": {
        loc: {
          start: {
            line: 27,
            column: 29
          },
          end: {
            line: 27,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 29
          },
          end: {
            line: 27,
            column: 43
          }
        }, {
          start: {
            line: 27,
            column: 47
          },
          end: {
            line: 27,
            column: 81
          }
        }],
        line: 27
      },
      "6": {
        loc: {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "7": {
        loc: {
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "8": {
        loc: {
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "9": {
        loc: {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "10": {
        loc: {
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 80,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 80,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "11": {
        loc: {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "12": {
        loc: {
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "13": {
        loc: {
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "14": {
        loc: {
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 106,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 106,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 104
      },
      "15": {
        loc: {
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "16": {
        loc: {
          start: {
            line: 111,
            column: 16
          },
          end: {
            line: 131,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 16
          },
          end: {
            line: 131,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 111
      },
      "17": {
        loc: {
          start: {
            line: 114,
            column: 20
          },
          end: {
            line: 124,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 20
          },
          end: {
            line: 124,
            column: 21
          }
        }, {
          start: {
            line: 122,
            column: 25
          },
          end: {
            line: 124,
            column: 21
          }
        }],
        line: 114
      },
      "18": {
        loc: {
          start: {
            line: 122,
            column: 25
          },
          end: {
            line: 124,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 25
          },
          end: {
            line: 124,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "19": {
        loc: {
          start: {
            line: 122,
            column: 29
          },
          end: {
            line: 122,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 122,
            column: 29
          },
          end: {
            line: 122,
            column: 43
          }
        }, {
          start: {
            line: 122,
            column: 47
          },
          end: {
            line: 122,
            column: 81
          }
        }],
        line: 122
      },
      "20": {
        loc: {
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 142,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 142,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3e24c8eba5527c4674dfa2cb8236dbffa2c2d26c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1jkhrg2we6 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1jkhrg2we6();
import { Class } from "@/models/class.model";
import { Subject } from "@/models/subject.model";
import { Teacher } from "@/models/teacher.model";
import { UserService } from "./users.service";
export class TeacherService {
  // Create a new teacher
  static async createTeacher(campusId, teacherData) {
    /* istanbul ignore next */
    cov_1jkhrg2we6().f[0]++;
    const teacher =
    /* istanbul ignore next */
    (cov_1jkhrg2we6().s[0]++, await Teacher.create(Object.assign(Object.assign({
      campus_id: campusId
    }, teacherData), {
      created_at: new Date(),
      updated_at: new Date()
    })));
    /* istanbul ignore next */
    cov_1jkhrg2we6().s[1]++;
    if (!teacher) {
      /* istanbul ignore next */
      cov_1jkhrg2we6().b[0][0]++;
      cov_1jkhrg2we6().s[2]++;
      throw new Error("Teacher not created");
    } else
    /* istanbul ignore next */
    {
      cov_1jkhrg2we6().b[0][1]++;
    }
    // Update the user's meta_data with the teacher_id
    cov_1jkhrg2we6().s[3]++;
    if (teacherData.user_id) {
      /* istanbul ignore next */
      cov_1jkhrg2we6().b[1][0]++;
      cov_1jkhrg2we6().s[4]++;
      try {
        const user =
        /* istanbul ignore next */
        (cov_1jkhrg2we6().s[5]++, await UserService.getUser(teacherData.user_id));
        /* istanbul ignore next */
        cov_1jkhrg2we6().s[6]++;
        if (user) {
          /* istanbul ignore next */
          cov_1jkhrg2we6().b[2][0]++;
          // Parse existing meta_data if it's a string, otherwise use as object
          let existingMetaData =
          /* istanbul ignore next */
          (cov_1jkhrg2we6().s[7]++, {});
          /* istanbul ignore next */
          cov_1jkhrg2we6().s[8]++;
          if (typeof user.meta_data === "string") {
            /* istanbul ignore next */
            cov_1jkhrg2we6().b[3][0]++;
            cov_1jkhrg2we6().s[9]++;
            try {
              /* istanbul ignore next */
              cov_1jkhrg2we6().s[10]++;
              existingMetaData = JSON.parse(user.meta_data);
            } catch (_a) {
              /* istanbul ignore next */
              cov_1jkhrg2we6().s[11]++;
              existingMetaData = {};
            }
          } else {
            /* istanbul ignore next */
            cov_1jkhrg2we6().b[3][1]++;
            cov_1jkhrg2we6().s[12]++;
            if (
            /* istanbul ignore next */
            (cov_1jkhrg2we6().b[5][0]++, user.meta_data) &&
            /* istanbul ignore next */
            (cov_1jkhrg2we6().b[5][1]++, typeof user.meta_data === "object")) {
              /* istanbul ignore next */
              cov_1jkhrg2we6().b[4][0]++;
              cov_1jkhrg2we6().s[13]++;
              existingMetaData = user.meta_data;
            } else
            /* istanbul ignore next */
            {
              cov_1jkhrg2we6().b[4][1]++;
            }
          }
          // Add teacher_id to meta_data
          const updatedMetaData =
          /* istanbul ignore next */
          (cov_1jkhrg2we6().s[14]++, Object.assign(Object.assign({}, existingMetaData), {
            teacher_id: teacher.id
          }));
          // Update the user with the new meta_data (will be converted to JSON string by validation)
          /* istanbul ignore next */
          cov_1jkhrg2we6().s[15]++;
          await UserService.updateUsers(teacherData.user_id, {
            meta_data: updatedMetaData
          });
        } else
        /* istanbul ignore next */
        {
          cov_1jkhrg2we6().b[2][1]++;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_1jkhrg2we6().s[16]++;
        console.error(`Failed to update user meta_data with teacher_id: ${error}`);
        // Don't throw error here as teacher creation was successful
        // Just log the error for debugging
      }
    } else
    /* istanbul ignore next */
    {
      cov_1jkhrg2we6().b[1][1]++;
    }
    cov_1jkhrg2we6().s[17]++;
    return teacher;
  }
  // Get all teachers for a campus
  static async getAllTeachers(campusId) {
    /* istanbul ignore next */
    cov_1jkhrg2we6().f[1]++;
    const teachers =
    /* istanbul ignore next */
    (cov_1jkhrg2we6().s[18]++, await Teacher.find({
      campus_id: campusId
    }, {
      sort: {
        updated_at: "DESC"
      }
    }));
    /* istanbul ignore next */
    cov_1jkhrg2we6().s[19]++;
    if (teachers.rows.length === 0) {
      /* istanbul ignore next */
      cov_1jkhrg2we6().b[6][0]++;
      cov_1jkhrg2we6().s[20]++;
      throw new Error("No teachers found");
    } else
    /* istanbul ignore next */
    {
      cov_1jkhrg2we6().b[6][1]++;
    }
    const resultPromises =
    /* istanbul ignore next */
    (cov_1jkhrg2we6().s[21]++, teachers.rows.map(teacher => {
      /* istanbul ignore next */
      cov_1jkhrg2we6().f[2]++;
      cov_1jkhrg2we6().s[22]++;
      return this.getTeacherById(teacher.id);
    }));
    const result =
    /* istanbul ignore next */
    (cov_1jkhrg2we6().s[23]++, await Promise.all(resultPromises));
    /* istanbul ignore next */
    cov_1jkhrg2we6().s[24]++;
    if (!result) {
      /* istanbul ignore next */
      cov_1jkhrg2we6().b[7][0]++;
      cov_1jkhrg2we6().s[25]++;
      throw new Error("No teachers found");
    } else
    /* istanbul ignore next */
    {
      cov_1jkhrg2we6().b[7][1]++;
    }
    cov_1jkhrg2we6().s[26]++;
    return result;
  }
  // Get a teacher by ID
  static async getTeacherById(id) {
    /* istanbul ignore next */
    cov_1jkhrg2we6().f[3]++;
    const teacher =
    /* istanbul ignore next */
    (cov_1jkhrg2we6().s[27]++, await Teacher.findById(id));
    /* istanbul ignore next */
    cov_1jkhrg2we6().s[28]++;
    if (!teacher) {
      /* istanbul ignore next */
      cov_1jkhrg2we6().b[8][0]++;
      cov_1jkhrg2we6().s[29]++;
      throw new Error("Teacher not found");
    } else
    /* istanbul ignore next */
    {
      cov_1jkhrg2we6().b[8][1]++;
    }
    const teacher_profile =
    /* istanbul ignore next */
    (cov_1jkhrg2we6().s[30]++, await UserService.getUser(teacher.user_id));
    /* istanbul ignore next */
    cov_1jkhrg2we6().s[31]++;
    if (!teacher_profile) {
      /* istanbul ignore next */
      cov_1jkhrg2we6().b[9][0]++;
      cov_1jkhrg2we6().s[32]++;
      throw new Error("Teacher profile not found");
    } else
    /* istanbul ignore next */
    {
      cov_1jkhrg2we6().b[9][1]++;
    }
    const teacher_subjects =
    /* istanbul ignore next */
    (cov_1jkhrg2we6().s[33]++, await this.getAllSubjectsByTeacherId(teacher.id));
    /* istanbul ignore next */
    cov_1jkhrg2we6().s[34]++;
    if (!teacher_subjects) {
      /* istanbul ignore next */
      cov_1jkhrg2we6().b[10][0]++;
      cov_1jkhrg2we6().s[35]++;
      throw new Error("Teacher subjects not found");
    } else
    /* istanbul ignore next */
    {
      cov_1jkhrg2we6().b[10][1]++;
    }
    const teacher_classes =
    /* istanbul ignore next */
    (cov_1jkhrg2we6().s[36]++, await this.getAllClassesByTeacherId(teacher.id));
    /* istanbul ignore next */
    cov_1jkhrg2we6().s[37]++;
    if (!teacher_classes) {
      /* istanbul ignore next */
      cov_1jkhrg2we6().b[11][0]++;
      cov_1jkhrg2we6().s[38]++;
      throw new Error("Teacher classes not found");
    } else
    /* istanbul ignore next */
    {
      cov_1jkhrg2we6().b[11][1]++;
    }
    cov_1jkhrg2we6().s[39]++;
    return Object.assign(Object.assign({}, teacher), {
      teacher_profile,
      teacher_subjects,
      teacher_classes
    });
  }
  // Update a teacher
  static async updateTeacher(id, teacherData) {
    /* istanbul ignore next */
    cov_1jkhrg2we6().f[4]++;
    const teacher =
    /* istanbul ignore next */
    (cov_1jkhrg2we6().s[40]++, await Teacher.findById(id));
    /* istanbul ignore next */
    cov_1jkhrg2we6().s[41]++;
    if (!teacher) {
      /* istanbul ignore next */
      cov_1jkhrg2we6().b[12][0]++;
      cov_1jkhrg2we6().s[42]++;
      throw new Error("Teacher not found");
    } else
    /* istanbul ignore next */
    {
      cov_1jkhrg2we6().b[12][1]++;
    }
    const updatedTeacher =
    /* istanbul ignore next */
    (cov_1jkhrg2we6().s[43]++, await Teacher.updateById(id, Object.assign(Object.assign({}, teacherData), {
      updated_at: new Date()
    })));
    /* istanbul ignore next */
    cov_1jkhrg2we6().s[44]++;
    if (!updatedTeacher) {
      /* istanbul ignore next */
      cov_1jkhrg2we6().b[13][0]++;
      cov_1jkhrg2we6().s[45]++;
      throw new Error("Teacher not updated");
    } else
    /* istanbul ignore next */
    {
      cov_1jkhrg2we6().b[13][1]++;
    }
    cov_1jkhrg2we6().s[46]++;
    return updatedTeacher;
  }
  // Delete a teacher
  static async deleteTeacher(id) {
    /* istanbul ignore next */
    cov_1jkhrg2we6().f[5]++;
    const teacher =
    /* istanbul ignore next */
    (cov_1jkhrg2we6().s[47]++, await Teacher.findById(id));
    /* istanbul ignore next */
    cov_1jkhrg2we6().s[48]++;
    if (!teacher) {
      /* istanbul ignore next */
      cov_1jkhrg2we6().b[14][0]++;
      cov_1jkhrg2we6().s[49]++;
      throw new Error("Teacher not found");
    } else
    /* istanbul ignore next */
    {
      cov_1jkhrg2we6().b[14][1]++;
    }
    // Remove teacher_id from user's meta_data before deleting teacher
    cov_1jkhrg2we6().s[50]++;
    if (teacher.user_id) {
      /* istanbul ignore next */
      cov_1jkhrg2we6().b[15][0]++;
      cov_1jkhrg2we6().s[51]++;
      try {
        const user =
        /* istanbul ignore next */
        (cov_1jkhrg2we6().s[52]++, await UserService.getUser(teacher.user_id));
        /* istanbul ignore next */
        cov_1jkhrg2we6().s[53]++;
        if (user) {
          /* istanbul ignore next */
          cov_1jkhrg2we6().b[16][0]++;
          // Parse existing meta_data if it's a string, otherwise use as object
          let existingMetaData =
          /* istanbul ignore next */
          (cov_1jkhrg2we6().s[54]++, {});
          /* istanbul ignore next */
          cov_1jkhrg2we6().s[55]++;
          if (typeof user.meta_data === "string") {
            /* istanbul ignore next */
            cov_1jkhrg2we6().b[17][0]++;
            cov_1jkhrg2we6().s[56]++;
            try {
              /* istanbul ignore next */
              cov_1jkhrg2we6().s[57]++;
              existingMetaData = JSON.parse(user.meta_data);
            } catch (_a) {
              /* istanbul ignore next */
              cov_1jkhrg2we6().s[58]++;
              existingMetaData = {};
            }
          } else {
            /* istanbul ignore next */
            cov_1jkhrg2we6().b[17][1]++;
            cov_1jkhrg2we6().s[59]++;
            if (
            /* istanbul ignore next */
            (cov_1jkhrg2we6().b[19][0]++, user.meta_data) &&
            /* istanbul ignore next */
            (cov_1jkhrg2we6().b[19][1]++, typeof user.meta_data === "object")) {
              /* istanbul ignore next */
              cov_1jkhrg2we6().b[18][0]++;
              cov_1jkhrg2we6().s[60]++;
              existingMetaData = user.meta_data;
            } else
            /* istanbul ignore next */
            {
              cov_1jkhrg2we6().b[18][1]++;
            }
          }
          // Remove teacher_id from meta_data
          /* istanbul ignore next */
          cov_1jkhrg2we6().s[61]++;
          delete existingMetaData.teacher_id;
          // Update the user with the updated meta_data
          /* istanbul ignore next */
          cov_1jkhrg2we6().s[62]++;
          await UserService.updateUsers(teacher.user_id, {
            meta_data: existingMetaData
          });
        } else
        /* istanbul ignore next */
        {
          cov_1jkhrg2we6().b[16][1]++;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_1jkhrg2we6().s[63]++;
        console.error(`Failed to remove teacher_id from user meta_data: ${error}`);
        // Don't throw error here as we still want to delete the teacher
        // Just log the error for debugging
      }
    } else
    /* istanbul ignore next */
    {
      cov_1jkhrg2we6().b[15][1]++;
    }
    const deletedTeacher =
    /* istanbul ignore next */
    (cov_1jkhrg2we6().s[64]++, await Teacher.removeById(id));
    /* istanbul ignore next */
    cov_1jkhrg2we6().s[65]++;
    if (!deletedTeacher) {
      /* istanbul ignore next */
      cov_1jkhrg2we6().b[20][0]++;
      cov_1jkhrg2we6().s[66]++;
      throw new Error("Teacher not deleted");
    } else
    /* istanbul ignore next */
    {
      cov_1jkhrg2we6().b[20][1]++;
    }
    cov_1jkhrg2we6().s[67]++;
    return deletedTeacher;
  }
  // Get all classes by teacher ID
  static async getAllClassesByTeacherId(teacherId) {
    /* istanbul ignore next */
    cov_1jkhrg2we6().f[6]++;
    const teacher =
    /* istanbul ignore next */
    (cov_1jkhrg2we6().s[68]++, await Teacher.findById(teacherId));
    const classIds =
    /* istanbul ignore next */
    (cov_1jkhrg2we6().s[69]++, teacher.classes);
    const classPromises =
    /* istanbul ignore next */
    (cov_1jkhrg2we6().s[70]++, classIds.map(async classId => {
      /* istanbul ignore next */
      cov_1jkhrg2we6().f[7]++;
      cov_1jkhrg2we6().s[71]++;
      return await Class.findById(classId);
    }));
    const classData =
    /* istanbul ignore next */
    (cov_1jkhrg2we6().s[72]++, await Promise.all(classPromises));
    /* istanbul ignore next */
    cov_1jkhrg2we6().s[73]++;
    return classData.filter(classItem => {
      /* istanbul ignore next */
      cov_1jkhrg2we6().f[8]++;
      cov_1jkhrg2we6().s[74]++;
      return classItem !== null;
    });
  }
  // Get all subjects by teacher ID
  static async getAllSubjectsByTeacherId(teacherId) {
    /* istanbul ignore next */
    cov_1jkhrg2we6().f[9]++;
    const teacher =
    /* istanbul ignore next */
    (cov_1jkhrg2we6().s[75]++, await Teacher.findById(teacherId));
    const subjectIds =
    /* istanbul ignore next */
    (cov_1jkhrg2we6().s[76]++, teacher.subjects);
    const subjectPromises =
    /* istanbul ignore next */
    (cov_1jkhrg2we6().s[77]++, subjectIds.map(async subjectId => {
      /* istanbul ignore next */
      cov_1jkhrg2we6().f[10]++;
      cov_1jkhrg2we6().s[78]++;
      return await Subject.findById(subjectId);
    }));
    const subjectData =
    /* istanbul ignore next */
    (cov_1jkhrg2we6().s[79]++, await Promise.all(subjectPromises));
    /* istanbul ignore next */
    cov_1jkhrg2we6().s[80]++;
    return subjectData.filter(subject => {
      /* istanbul ignore next */
      cov_1jkhrg2we6().f[11]++;
      cov_1jkhrg2we6().s[81]++;
      return subject !== null;
    });
  }
}