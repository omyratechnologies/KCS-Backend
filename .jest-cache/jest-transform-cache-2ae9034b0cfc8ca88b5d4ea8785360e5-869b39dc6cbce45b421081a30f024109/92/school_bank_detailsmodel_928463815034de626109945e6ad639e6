92cf12b41cece620ed587c2b83e56b7a
/* istanbul ignore next */
function cov_2143k6nuxs() {
  var path = "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/models/school_bank_details.model.ts";
  var hash = "5c15a27fe167a9f2db7a75aa0cb5590c75185c30";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/models/school_bank_details.model.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 32
        },
        end: {
          line: 41,
          column: 2
        }
      },
      "1": {
        start: {
          line: 39,
          column: 45
        },
        end: {
          line: 39,
          column: 55
        }
      },
      "2": {
        start: {
          line: 40,
          column: 45
        },
        end: {
          line: 40,
          column: 55
        }
      },
      "3": {
        start: {
          line: 42,
          column: 0
        },
        end: {
          line: 42,
          column: 67
        }
      },
      "4": {
        start: {
          line: 43,
          column: 0
        },
        end: {
          line: 43,
          column: 77
        }
      },
      "5": {
        start: {
          line: 44,
          column: 0
        },
        end: {
          line: 44,
          column: 67
        }
      },
      "6": {
        start: {
          line: 45,
          column: 26
        },
        end: {
          line: 45,
          column: 87
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 39,
            column: 39
          },
          end: {
            line: 39,
            column: 40
          }
        },
        loc: {
          start: {
            line: 39,
            column: 45
          },
          end: {
            line: 39,
            column: 55
          }
        },
        line: 39
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 40,
            column: 39
          },
          end: {
            line: 40,
            column: 40
          }
        },
        loc: {
          start: {
            line: 40,
            column: 45
          },
          end: {
            line: 40,
            column: 55
          }
        },
        line: 40
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5c15a27fe167a9f2db7a75aa0cb5590c75185c30"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2143k6nuxs = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2143k6nuxs();
import { Schema } from "ottoman";
import { ottoman } from "../libs/db";
const SchoolBankDetailsSchema =
/* istanbul ignore next */
(cov_2143k6nuxs().s[0]++, new Schema({
  campus_id: {
    type: String,
    required: true
  },
  bank_name: {
    type: String,
    required: true
  },
  account_number: {
    type: String,
    required: true
  },
  account_holder_name: {
    type: String,
    required: true
  },
  ifsc_code: {
    type: String,
    required: true
  },
  branch_name: {
    type: String,
    required: true
  },
  account_type: {
    type: String,
    required: true,
    enum: ["savings", "current"]
  },
  upi_id: {
    type: String,
    required: false
  },
  // Encrypted credentials storage
  encrypted_payment_credentials: {
    type: Object,
    required: false
  },
  // Legacy field for backward compatibility (deprecated)
  payment_gateway_credentials: {
    type: Object,
    required: false,
    default: {}
  },
  // Gateway status (non-sensitive data)
  gateway_status: {
    type: Object,
    required: true,
    default: {}
  },
  is_active: {
    type: Boolean,
    required: true,
    default: true
  },
  is_verified: {
    type: Boolean,
    required: true,
    default: false
  },
  verified_at: {
    type: Date,
    required: false
  },
  credential_updated_at: {
    type: Date,
    required: false
  },
  encryption_version: {
    type: String,
    required: false,
    default: "v1"
  },
  meta_data: {
    type: Object,
    required: true,
    default: {}
  },
  created_at: {
    type: Date,
    default: () => {
      /* istanbul ignore next */
      cov_2143k6nuxs().f[0]++;
      cov_2143k6nuxs().s[1]++;
      return new Date();
    }
  },
  updated_at: {
    type: Date,
    default: () => {
      /* istanbul ignore next */
      cov_2143k6nuxs().f[1]++;
      cov_2143k6nuxs().s[2]++;
      return new Date();
    }
  }
}));
/* istanbul ignore next */
cov_2143k6nuxs().s[3]++;
SchoolBankDetailsSchema.index.findByCampusId = {
  by: "campus_id"
};
/* istanbul ignore next */
cov_2143k6nuxs().s[4]++;
SchoolBankDetailsSchema.index.findByAccountNumber = {
  by: "account_number"
};
/* istanbul ignore next */
cov_2143k6nuxs().s[5]++;
SchoolBankDetailsSchema.index.findByIfscCode = {
  by: "ifsc_code"
};
const SchoolBankDetails =
/* istanbul ignore next */
(cov_2143k6nuxs().s[6]++, ottoman.model("school_bank_details", SchoolBankDetailsSchema));
export { SchoolBankDetails };