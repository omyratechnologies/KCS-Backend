9d474705112d73eb5e4ff8952d7f8f90
/* istanbul ignore next */
function cov_12yewzv7uh() {
  var path = "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/routes/super_admin.routes.ts";
  var hash = "39586d21c05e655997d941a633d23a7a5fef327e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/routes/super_admin.routes.ts",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 25
        },
        end: {
          line: 4,
          column: 35
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 44
        }
      },
      "2": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 81
        }
      },
      "3": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 17,
          column: 82
        }
      },
      "4": {
        start: {
          line: 22,
          column: 0
        },
        end: {
          line: 22,
          column: 87
        }
      },
      "5": {
        start: {
          line: 27,
          column: 0
        },
        end: {
          line: 27,
          column: 106
        }
      },
      "6": {
        start: {
          line: 32,
          column: 0
        },
        end: {
          line: 32,
          column: 97
        }
      },
      "7": {
        start: {
          line: 38,
          column: 0
        },
        end: {
          line: 38,
          column: 86
        }
      },
      "8": {
        start: {
          line: 43,
          column: 0
        },
        end: {
          line: 43,
          column: 107
        }
      },
      "9": {
        start: {
          line: 48,
          column: 0
        },
        end: {
          line: 48,
          column: 94
        }
      },
      "10": {
        start: {
          line: 53,
          column: 0
        },
        end: {
          line: 53,
          column: 77
        }
      },
      "11": {
        start: {
          line: 58,
          column: 0
        },
        end: {
          line: 58,
          column: 85
        }
      },
      "12": {
        start: {
          line: 63,
          column: 0
        },
        end: {
          line: 63,
          column: 82
        }
      },
      "13": {
        start: {
          line: 68,
          column: 0
        },
        end: {
          line: 68,
          column: 80
        }
      },
      "14": {
        start: {
          line: 73,
          column: 0
        },
        end: {
          line: 73,
          column: 98
        }
      },
      "15": {
        start: {
          line: 78,
          column: 0
        },
        end: {
          line: 78,
          column: 83
        }
      },
      "16": {
        start: {
          line: 83,
          column: 0
        },
        end: {
          line: 83,
          column: 94
        }
      },
      "17": {
        start: {
          line: 88,
          column: 0
        },
        end: {
          line: 88,
          column: 90
        }
      },
      "18": {
        start: {
          line: 93,
          column: 0
        },
        end: {
          line: 93,
          column: 102
        }
      },
      "19": {
        start: {
          line: 98,
          column: 0
        },
        end: {
          line: 98,
          column: 106
        }
      },
      "20": {
        start: {
          line: 103,
          column: 0
        },
        end: {
          line: 103,
          column: 96
        }
      },
      "21": {
        start: {
          line: 108,
          column: 0
        },
        end: {
          line: 108,
          column: 96
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "39586d21c05e655997d941a633d23a7a5fef327e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_12yewzv7uh = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_12yewzv7uh();
import { Hono } from "hono";
import { SuperAdminController } from "@/controllers/super_admin.controller";
import { authMiddleware } from "@/middlewares/auth.middleware";
const superAdminRoutes =
/* istanbul ignore next */
(cov_12yewzv7uh().s[0]++, new Hono());
// Apply authentication middleware to all routes
/* istanbul ignore next */
cov_12yewzv7uh().s[1]++;
superAdminRoutes.use("*", authMiddleware());
// ========================= SCHOOL MANAGEMENT =========================
/**
 * Onboard a new school with payment system setup
 * POST /super-admin/schools/onboard
 */
/* istanbul ignore next */
cov_12yewzv7uh().s[2]++;
superAdminRoutes.post("/schools/onboard", SuperAdminController.onboardNewSchool);
/**
 * Monitor health of all schools
 * GET /super-admin/schools/health?campus_ids=id1,id2,id3
 */
/* istanbul ignore next */
cov_12yewzv7uh().s[3]++;
superAdminRoutes.get("/schools/health", SuperAdminController.monitorSchoolHealth);
/**
 * Get platform-wide analytics
 * GET /super-admin/analytics/platform
 */
/* istanbul ignore next */
cov_12yewzv7uh().s[4]++;
superAdminRoutes.get("/analytics/platform", SuperAdminController.getPlatformAnalytics);
/**
 * Troubleshoot payment issues for a specific school
 * GET /super-admin/schools/:campus_id/troubleshoot
 */
/* istanbul ignore next */
cov_12yewzv7uh().s[5]++;
superAdminRoutes.get("/schools/:campus_id/troubleshoot", SuperAdminController.troubleshootSchoolPayments);
/**
 * Check compliance for all schools
 * GET /super-admin/compliance/check-all
 */
/* istanbul ignore next */
cov_12yewzv7uh().s[6]++;
superAdminRoutes.get("/compliance/check-all", SuperAdminController.checkComplianceForAllSchools);
// ========================= SYSTEM OPERATIONS =========================
/**
 * Monitor system security across all campuses
 * GET /super-admin/security/monitor
 */
/* istanbul ignore next */
cov_12yewzv7uh().s[7]++;
superAdminRoutes.get("/security/monitor", SuperAdminController.monitorSystemSecurity);
/**
 * Update payment gateway configurations globally
 * POST /super-admin/gateways/update-configurations
 */
/* istanbul ignore next */
cov_12yewzv7uh().s[8]++;
superAdminRoutes.post("/gateways/update-configurations", SuperAdminController.updateGatewayConfigurations);
/**
 * Monitor platform performance
 * GET /super-admin/performance/monitor
 */
/* istanbul ignore next */
cov_12yewzv7uh().s[9]++;
superAdminRoutes.get("/performance/monitor", SuperAdminController.monitorPlatformPerformance);
/**
 * Get system backup status
 * GET /super-admin/backup/status
 */
/* istanbul ignore next */
cov_12yewzv7uh().s[10]++;
superAdminRoutes.get("/backup/status", SuperAdminController.getBackupStatus);
/**
 * Initiate manual backup
 * POST /super-admin/backup/initiate
 */
/* istanbul ignore next */
cov_12yewzv7uh().s[11]++;
superAdminRoutes.post("/backup/initiate", SuperAdminController.initiateManualBackup);
/**
 * Generate platform-wide audit report
 * GET /super-admin/audit/generate?start_date=2023-01-01&end_date=2023-12-31&include_payment_data=true
 */
/* istanbul ignore next */
cov_12yewzv7uh().s[12]++;
superAdminRoutes.get("/audit/generate", SuperAdminController.generateAuditReport);
/**
 * List available backups
 * GET /super-admin/backup/list
 */
/* istanbul ignore next */
cov_12yewzv7uh().s[13]++;
superAdminRoutes.get("/backup/list", SuperAdminController.listAvailableBackups);
/**
 * Validate backup integrity
 * GET /super-admin/backup/validate/:backup_id
 */
/* istanbul ignore next */
cov_12yewzv7uh().s[14]++;
superAdminRoutes.get("/backup/validate/:backup_id", SuperAdminController.validateBackupIntegrity);
/**
 * Initiate data restore
 * POST /super-admin/backup/restore
 */
/* istanbul ignore next */
cov_12yewzv7uh().s[15]++;
superAdminRoutes.post("/backup/restore", SuperAdminController.initiateDataRestore);
/**
 * Get disaster recovery plan
 * GET /super-admin/disaster-recovery/plan
 */
/* istanbul ignore next */
cov_12yewzv7uh().s[16]++;
superAdminRoutes.get("/disaster-recovery/plan", SuperAdminController.getDisasterRecoveryPlan);
/**
 * Rotate encryption keys for all campuses or specific campuses
 * POST /super-admin/security/rotate-keys
 */
/* istanbul ignore next */
cov_12yewzv7uh().s[17]++;
superAdminRoutes.post("/security/rotate-keys", SuperAdminController.rotateEncryptionKeys);
/**
 * Run automated compliance check with remediation suggestions
 * GET /super-admin/compliance/automated-check
 */
/* istanbul ignore next */
cov_12yewzv7uh().s[18]++;
superAdminRoutes.get("/compliance/automated-check", SuperAdminController.runAutomatedComplianceCheck);
/**
 * Get enhanced performance metrics with real-time data
 * GET /super-admin/performance/enhanced-metrics
 */
/* istanbul ignore next */
cov_12yewzv7uh().s[19]++;
superAdminRoutes.get("/performance/enhanced-metrics", SuperAdminController.getEnhancedPerformanceMetrics);
/**
 * Execute automated remediation actions
 * POST /super-admin/remediation/execute
 */
/* istanbul ignore next */
cov_12yewzv7uh().s[20]++;
superAdminRoutes.post("/remediation/execute", SuperAdminController.executeAutomatedRemediation);
/**
 * Get comprehensive system health dashboard
 * GET /super-admin/dashboard/system-health
 */
/* istanbul ignore next */
cov_12yewzv7uh().s[21]++;
superAdminRoutes.get("/dashboard/system-health", SuperAdminController.getSystemHealthDashboard);
export default superAdminRoutes;