a1e9c49423d75027262ec911d270e620
/* istanbul ignore next */
function cov_k1vyigxhz() {
  var path = "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/controllers/dashboard.controller.ts";
  var hash = "bd398094ac2997c93835129936644895751c53b8";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/controllers/dashboard.controller.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 25
        }
      },
      "1": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 28,
          column: 2
        }
      },
      "2": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 27,
          column: 5
        }
      },
      "3": {
        start: {
          line: 12,
          column: 24
        },
        end: {
          line: 12,
          column: 42
        }
      },
      "4": {
        start: {
          line: 13,
          column: 26
        },
        end: {
          line: 13,
          column: 46
        }
      },
      "5": {
        start: {
          line: 14,
          column: 30
        },
        end: {
          line: 14,
          column: 92
        }
      },
      "6": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 18,
          column: 11
        }
      },
      "7": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 26,
          column: 9
        }
      },
      "8": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 25,
          column: 20
        }
      },
      "9": {
        start: {
          line: 33,
          column: 0
        },
        end: {
          line: 51,
          column: 2
        }
      },
      "10": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "11": {
        start: {
          line: 35,
          column: 24
        },
        end: {
          line: 35,
          column: 42
        }
      },
      "12": {
        start: {
          line: 36,
          column: 26
        },
        end: {
          line: 36,
          column: 46
        }
      },
      "13": {
        start: {
          line: 37,
          column: 30
        },
        end: {
          line: 37,
          column: 92
        }
      },
      "14": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 41,
          column: 11
        }
      },
      "15": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "16": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 48,
          column: 20
        }
      },
      "17": {
        start: {
          line: 56,
          column: 0
        },
        end: {
          line: 74,
          column: 2
        }
      },
      "18": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 73,
          column: 5
        }
      },
      "19": {
        start: {
          line: 58,
          column: 24
        },
        end: {
          line: 58,
          column: 42
        }
      },
      "20": {
        start: {
          line: 59,
          column: 26
        },
        end: {
          line: 59,
          column: 46
        }
      },
      "21": {
        start: {
          line: 60,
          column: 30
        },
        end: {
          line: 60,
          column: 91
        }
      },
      "22": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 64,
          column: 11
        }
      },
      "23": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 72,
          column: 9
        }
      },
      "24": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 71,
          column: 20
        }
      },
      "25": {
        start: {
          line: 79,
          column: 0
        },
        end: {
          line: 98,
          column: 2
        }
      },
      "26": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 97,
          column: 5
        }
      },
      "27": {
        start: {
          line: 81,
          column: 24
        },
        end: {
          line: 81,
          column: 42
        }
      },
      "28": {
        start: {
          line: 82,
          column: 26
        },
        end: {
          line: 82,
          column: 46
        }
      },
      "29": {
        start: {
          line: 83,
          column: 26
        },
        end: {
          line: 83,
          column: 46
        }
      },
      "30": {
        start: {
          line: 84,
          column: 30
        },
        end: {
          line: 84,
          column: 101
        }
      },
      "31": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 88,
          column: 11
        }
      },
      "32": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 96,
          column: 9
        }
      },
      "33": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 95,
          column: 20
        }
      },
      "34": {
        start: {
          line: 103,
          column: 0
        },
        end: {
          line: 122,
          column: 2
        }
      },
      "35": {
        start: {
          line: 104,
          column: 4
        },
        end: {
          line: 121,
          column: 5
        }
      },
      "36": {
        start: {
          line: 105,
          column: 24
        },
        end: {
          line: 105,
          column: 42
        }
      },
      "37": {
        start: {
          line: 106,
          column: 26
        },
        end: {
          line: 106,
          column: 46
        }
      },
      "38": {
        start: {
          line: 107,
          column: 26
        },
        end: {
          line: 107,
          column: 46
        }
      },
      "39": {
        start: {
          line: 108,
          column: 22
        },
        end: {
          line: 108,
          column: 89
        }
      },
      "40": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 112,
          column: 11
        }
      },
      "41": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 120,
          column: 9
        }
      },
      "42": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 119,
          column: 20
        }
      },
      "43": {
        start: {
          line: 127,
          column: 0
        },
        end: {
          line: 147,
          column: 2
        }
      },
      "44": {
        start: {
          line: 128,
          column: 4
        },
        end: {
          line: 146,
          column: 5
        }
      },
      "45": {
        start: {
          line: 129,
          column: 24
        },
        end: {
          line: 129,
          column: 42
        }
      },
      "46": {
        start: {
          line: 130,
          column: 26
        },
        end: {
          line: 130,
          column: 46
        }
      },
      "47": {
        start: {
          line: 131,
          column: 26
        },
        end: {
          line: 131,
          column: 46
        }
      },
      "48": {
        start: {
          line: 132,
          column: 22
        },
        end: {
          line: 132,
          column: 58
        }
      },
      "49": {
        start: {
          line: 133,
          column: 27
        },
        end: {
          line: 133,
          column: 107
        }
      },
      "50": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 137,
          column: 11
        }
      },
      "51": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 145,
          column: 9
        }
      },
      "52": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 144,
          column: 20
        }
      },
      "53": {
        start: {
          line: 152,
          column: 0
        },
        end: {
          line: 171,
          column: 2
        }
      },
      "54": {
        start: {
          line: 153,
          column: 4
        },
        end: {
          line: 170,
          column: 5
        }
      },
      "55": {
        start: {
          line: 154,
          column: 24
        },
        end: {
          line: 154,
          column: 42
        }
      },
      "56": {
        start: {
          line: 155,
          column: 26
        },
        end: {
          line: 155,
          column: 46
        }
      },
      "57": {
        start: {
          line: 156,
          column: 26
        },
        end: {
          line: 156,
          column: 46
        }
      },
      "58": {
        start: {
          line: 157,
          column: 37
        },
        end: {
          line: 157,
          column: 114
        }
      },
      "59": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 161,
          column: 11
        }
      },
      "60": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 169,
          column: 9
        }
      },
      "61": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 168,
          column: 20
        }
      },
      "62": {
        start: {
          line: 176,
          column: 0
        },
        end: {
          line: 196,
          column: 2
        }
      },
      "63": {
        start: {
          line: 177,
          column: 4
        },
        end: {
          line: 195,
          column: 5
        }
      },
      "64": {
        start: {
          line: 178,
          column: 24
        },
        end: {
          line: 178,
          column: 42
        }
      },
      "65": {
        start: {
          line: 179,
          column: 26
        },
        end: {
          line: 179,
          column: 46
        }
      },
      "66": {
        start: {
          line: 180,
          column: 26
        },
        end: {
          line: 180,
          column: 46
        }
      },
      "67": {
        start: {
          line: 181,
          column: 21
        },
        end: {
          line: 181,
          column: 55
        }
      },
      "68": {
        start: {
          line: 182,
          column: 23
        },
        end: {
          line: 182,
          column: 100
        }
      },
      "69": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 186,
          column: 11
        }
      },
      "70": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 194,
          column: 9
        }
      },
      "71": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 193,
          column: 20
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 42
          },
          end: {
            line: 10,
            column: 43
          }
        },
        loc: {
          start: {
            line: 10,
            column: 57
          },
          end: {
            line: 28,
            column: 1
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 33,
            column: 42
          },
          end: {
            line: 33,
            column: 43
          }
        },
        loc: {
          start: {
            line: 33,
            column: 57
          },
          end: {
            line: 51,
            column: 1
          }
        },
        line: 33
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 56,
            column: 41
          },
          end: {
            line: 56,
            column: 42
          }
        },
        loc: {
          start: {
            line: 56,
            column: 56
          },
          end: {
            line: 74,
            column: 1
          }
        },
        line: 56
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 79,
            column: 40
          },
          end: {
            line: 79,
            column: 41
          }
        },
        loc: {
          start: {
            line: 79,
            column: 55
          },
          end: {
            line: 98,
            column: 1
          }
        },
        line: 79
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 103,
            column: 36
          },
          end: {
            line: 103,
            column: 37
          }
        },
        loc: {
          start: {
            line: 103,
            column: 51
          },
          end: {
            line: 122,
            column: 1
          }
        },
        line: 103
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 127,
            column: 42
          },
          end: {
            line: 127,
            column: 43
          }
        },
        loc: {
          start: {
            line: 127,
            column: 57
          },
          end: {
            line: 147,
            column: 1
          }
        },
        line: 127
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 152,
            column: 46
          },
          end: {
            line: 152,
            column: 47
          }
        },
        loc: {
          start: {
            line: 152,
            column: 61
          },
          end: {
            line: 171,
            column: 1
          }
        },
        line: 152
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 176,
            column: 40
          },
          end: {
            line: 176,
            column: 41
          }
        },
        loc: {
          start: {
            line: 176,
            column: 55
          },
          end: {
            line: 196,
            column: 1
          }
        },
        line: 176
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "2": {
        loc: {
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "3": {
        loc: {
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 96,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 96,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "4": {
        loc: {
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "5": {
        loc: {
          start: {
            line: 132,
            column: 22
          },
          end: {
            line: 132,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 132,
            column: 22
          },
          end: {
            line: 132,
            column: 52
          }
        }, {
          start: {
            line: 132,
            column: 56
          },
          end: {
            line: 132,
            column: 58
          }
        }],
        line: 132
      },
      "6": {
        loc: {
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 145,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 145,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      },
      "7": {
        loc: {
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 169,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 169,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 164
      },
      "8": {
        loc: {
          start: {
            line: 181,
            column: 21
          },
          end: {
            line: 181,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 181,
            column: 21
          },
          end: {
            line: 181,
            column: 50
          }
        }, {
          start: {
            line: 181,
            column: 54
          },
          end: {
            line: 181,
            column: 55
          }
        }],
        line: 181
      },
      "9": {
        loc: {
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 194,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 194,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 189
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bd398094ac2997c93835129936644895751c53b8"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_k1vyigxhz = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_k1vyigxhz();
var _a;
import { DashboardService } from "@/services/dashboard.service";
export class DashboardController {}
/* istanbul ignore next */
cov_k1vyigxhz().s[0]++;
_a = DashboardController;
/**
 * Get comprehensive dashboard data for students
 * Includes: profile, classes, assignments, quizzes, notifications, attendance, grades
 */
/* istanbul ignore next */
cov_k1vyigxhz().s[1]++;
DashboardController.getStudentDashboard = async ctx => {
  /* istanbul ignore next */
  cov_k1vyigxhz().f[0]++;
  cov_k1vyigxhz().s[2]++;
  try {
    const user_id =
    /* istanbul ignore next */
    (cov_k1vyigxhz().s[3]++, ctx.get("user_id"));
    const campus_id =
    /* istanbul ignore next */
    (cov_k1vyigxhz().s[4]++, ctx.get("campus_id"));
    const dashboardData =
    /* istanbul ignore next */
    (cov_k1vyigxhz().s[5]++, await DashboardService.getStudentDashboard(user_id, campus_id));
    /* istanbul ignore next */
    cov_k1vyigxhz().s[6]++;
    return ctx.json({
      success: true,
      data: dashboardData
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_k1vyigxhz().s[7]++;
    if (error instanceof Error) {
      /* istanbul ignore next */
      cov_k1vyigxhz().b[0][0]++;
      cov_k1vyigxhz().s[8]++;
      return ctx.json({
        success: false,
        message: error.message
      }, 500);
    } else
    /* istanbul ignore next */
    {
      cov_k1vyigxhz().b[0][1]++;
    }
  }
};
/**
 * Get comprehensive dashboard data for teachers
 * Includes: profile, classes, subjects, assignments, students, notifications, schedule
 */
/* istanbul ignore next */
cov_k1vyigxhz().s[9]++;
DashboardController.getTeacherDashboard = async ctx => {
  /* istanbul ignore next */
  cov_k1vyigxhz().f[1]++;
  cov_k1vyigxhz().s[10]++;
  try {
    const user_id =
    /* istanbul ignore next */
    (cov_k1vyigxhz().s[11]++, ctx.get("user_id"));
    const campus_id =
    /* istanbul ignore next */
    (cov_k1vyigxhz().s[12]++, ctx.get("campus_id"));
    const dashboardData =
    /* istanbul ignore next */
    (cov_k1vyigxhz().s[13]++, await DashboardService.getTeacherDashboard(user_id, campus_id));
    /* istanbul ignore next */
    cov_k1vyigxhz().s[14]++;
    return ctx.json({
      success: true,
      data: dashboardData
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_k1vyigxhz().s[15]++;
    if (error instanceof Error) {
      /* istanbul ignore next */
      cov_k1vyigxhz().b[1][0]++;
      cov_k1vyigxhz().s[16]++;
      return ctx.json({
        success: false,
        message: error.message
      }, 500);
    } else
    /* istanbul ignore next */
    {
      cov_k1vyigxhz().b[1][1]++;
    }
  }
};
/**
 * Get comprehensive dashboard data for parents
 * Includes: children's profiles, grades, attendance, notifications, upcoming events
 */
/* istanbul ignore next */
cov_k1vyigxhz().s[17]++;
DashboardController.getParentDashboard = async ctx => {
  /* istanbul ignore next */
  cov_k1vyigxhz().f[2]++;
  cov_k1vyigxhz().s[18]++;
  try {
    const user_id =
    /* istanbul ignore next */
    (cov_k1vyigxhz().s[19]++, ctx.get("user_id"));
    const campus_id =
    /* istanbul ignore next */
    (cov_k1vyigxhz().s[20]++, ctx.get("campus_id"));
    const dashboardData =
    /* istanbul ignore next */
    (cov_k1vyigxhz().s[21]++, await DashboardService.getParentDashboard(user_id, campus_id));
    /* istanbul ignore next */
    cov_k1vyigxhz().s[22]++;
    return ctx.json({
      success: true,
      data: dashboardData
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_k1vyigxhz().s[23]++;
    if (error instanceof Error) {
      /* istanbul ignore next */
      cov_k1vyigxhz().b[2][0]++;
      cov_k1vyigxhz().s[24]++;
      return ctx.json({
        success: false,
        message: error.message
      }, 500);
    } else
    /* istanbul ignore next */
    {
      cov_k1vyigxhz().b[2][1]++;
    }
  }
};
/**
 * Get comprehensive dashboard data for admin/staff
 * Includes: campus overview, student count, teacher count, recent activities, notifications
 */
/* istanbul ignore next */
cov_k1vyigxhz().s[25]++;
DashboardController.getAdminDashboard = async ctx => {
  /* istanbul ignore next */
  cov_k1vyigxhz().f[3]++;
  cov_k1vyigxhz().s[26]++;
  try {
    const user_id =
    /* istanbul ignore next */
    (cov_k1vyigxhz().s[27]++, ctx.get("user_id"));
    const campus_id =
    /* istanbul ignore next */
    (cov_k1vyigxhz().s[28]++, ctx.get("campus_id"));
    const user_type =
    /* istanbul ignore next */
    (cov_k1vyigxhz().s[29]++, ctx.get("user_type"));
    const dashboardData =
    /* istanbul ignore next */
    (cov_k1vyigxhz().s[30]++, await DashboardService.getAdminDashboard(user_id, campus_id, user_type));
    /* istanbul ignore next */
    cov_k1vyigxhz().s[31]++;
    return ctx.json({
      success: true,
      data: dashboardData
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_k1vyigxhz().s[32]++;
    if (error instanceof Error) {
      /* istanbul ignore next */
      cov_k1vyigxhz().b[3][0]++;
      cov_k1vyigxhz().s[33]++;
      return ctx.json({
        success: false,
        message: error.message
      }, 500);
    } else
    /* istanbul ignore next */
    {
      cov_k1vyigxhz().b[3][1]++;
    }
  }
};
/**
 * Get quick stats for any user type
 * Provides essential counts and metrics
 */
/* istanbul ignore next */
cov_k1vyigxhz().s[34]++;
DashboardController.getQuickStats = async ctx => {
  /* istanbul ignore next */
  cov_k1vyigxhz().f[4]++;
  cov_k1vyigxhz().s[35]++;
  try {
    const user_id =
    /* istanbul ignore next */
    (cov_k1vyigxhz().s[36]++, ctx.get("user_id"));
    const campus_id =
    /* istanbul ignore next */
    (cov_k1vyigxhz().s[37]++, ctx.get("campus_id"));
    const user_type =
    /* istanbul ignore next */
    (cov_k1vyigxhz().s[38]++, ctx.get("user_type"));
    const stats =
    /* istanbul ignore next */
    (cov_k1vyigxhz().s[39]++, await DashboardService.getQuickStats(user_id, campus_id, user_type));
    /* istanbul ignore next */
    cov_k1vyigxhz().s[40]++;
    return ctx.json({
      success: true,
      data: stats
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_k1vyigxhz().s[41]++;
    if (error instanceof Error) {
      /* istanbul ignore next */
      cov_k1vyigxhz().b[4][0]++;
      cov_k1vyigxhz().s[42]++;
      return ctx.json({
        success: false,
        message: error.message
      }, 500);
    } else
    /* istanbul ignore next */
    {
      cov_k1vyigxhz().b[4][1]++;
    }
  }
};
/**
 * Get recent activities for dashboard
 * Shows latest 10 activities relevant to the user
 */
/* istanbul ignore next */
cov_k1vyigxhz().s[43]++;
DashboardController.getRecentActivities = async ctx => {
  /* istanbul ignore next */
  cov_k1vyigxhz().f[5]++;
  cov_k1vyigxhz().s[44]++;
  try {
    const user_id =
    /* istanbul ignore next */
    (cov_k1vyigxhz().s[45]++, ctx.get("user_id"));
    const campus_id =
    /* istanbul ignore next */
    (cov_k1vyigxhz().s[46]++, ctx.get("campus_id"));
    const user_type =
    /* istanbul ignore next */
    (cov_k1vyigxhz().s[47]++, ctx.get("user_type"));
    const limit =
    /* istanbul ignore next */
    (cov_k1vyigxhz().s[48]++,
    /* istanbul ignore next */
    (cov_k1vyigxhz().b[5][0]++, Number(ctx.req.query("limit"))) ||
    /* istanbul ignore next */
    (cov_k1vyigxhz().b[5][1]++, 10));
    const activities =
    /* istanbul ignore next */
    (cov_k1vyigxhz().s[49]++, await DashboardService.getRecentActivities(user_id, campus_id, user_type, limit));
    /* istanbul ignore next */
    cov_k1vyigxhz().s[50]++;
    return ctx.json({
      success: true,
      data: activities
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_k1vyigxhz().s[51]++;
    if (error instanceof Error) {
      /* istanbul ignore next */
      cov_k1vyigxhz().b[6][0]++;
      cov_k1vyigxhz().s[52]++;
      return ctx.json({
        success: false,
        message: error.message
      }, 500);
    } else
    /* istanbul ignore next */
    {
      cov_k1vyigxhz().b[6][1]++;
    }
  }
};
/**
 * Get notifications summary for dashboard
 * Returns unread count and recent notifications
 */
/* istanbul ignore next */
cov_k1vyigxhz().s[53]++;
DashboardController.getNotificationsSummary = async ctx => {
  /* istanbul ignore next */
  cov_k1vyigxhz().f[6]++;
  cov_k1vyigxhz().s[54]++;
  try {
    const user_id =
    /* istanbul ignore next */
    (cov_k1vyigxhz().s[55]++, ctx.get("user_id"));
    const campus_id =
    /* istanbul ignore next */
    (cov_k1vyigxhz().s[56]++, ctx.get("campus_id"));
    const user_type =
    /* istanbul ignore next */
    (cov_k1vyigxhz().s[57]++, ctx.get("user_type"));
    const notificationsSummary =
    /* istanbul ignore next */
    (cov_k1vyigxhz().s[58]++, await DashboardService.getNotificationsSummary(user_id, campus_id, user_type));
    /* istanbul ignore next */
    cov_k1vyigxhz().s[59]++;
    return ctx.json({
      success: true,
      data: notificationsSummary
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_k1vyigxhz().s[60]++;
    if (error instanceof Error) {
      /* istanbul ignore next */
      cov_k1vyigxhz().b[7][0]++;
      cov_k1vyigxhz().s[61]++;
      return ctx.json({
        success: false,
        message: error.message
      }, 500);
    } else
    /* istanbul ignore next */
    {
      cov_k1vyigxhz().b[7][1]++;
    }
  }
};
/**
 * Get upcoming events and deadlines
 * Returns assignments, exams, meetings, etc. for the next 7 days
 */
/* istanbul ignore next */
cov_k1vyigxhz().s[62]++;
DashboardController.getUpcomingEvents = async ctx => {
  /* istanbul ignore next */
  cov_k1vyigxhz().f[7]++;
  cov_k1vyigxhz().s[63]++;
  try {
    const user_id =
    /* istanbul ignore next */
    (cov_k1vyigxhz().s[64]++, ctx.get("user_id"));
    const campus_id =
    /* istanbul ignore next */
    (cov_k1vyigxhz().s[65]++, ctx.get("campus_id"));
    const user_type =
    /* istanbul ignore next */
    (cov_k1vyigxhz().s[66]++, ctx.get("user_type"));
    const days =
    /* istanbul ignore next */
    (cov_k1vyigxhz().s[67]++,
    /* istanbul ignore next */
    (cov_k1vyigxhz().b[8][0]++, Number(ctx.req.query("days"))) ||
    /* istanbul ignore next */
    (cov_k1vyigxhz().b[8][1]++, 7));
    const events =
    /* istanbul ignore next */
    (cov_k1vyigxhz().s[68]++, await DashboardService.getUpcomingEvents(user_id, campus_id, user_type, days));
    /* istanbul ignore next */
    cov_k1vyigxhz().s[69]++;
    return ctx.json({
      success: true,
      data: events
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_k1vyigxhz().s[70]++;
    if (error instanceof Error) {
      /* istanbul ignore next */
      cov_k1vyigxhz().b[9][0]++;
      cov_k1vyigxhz().s[71]++;
      return ctx.json({
        success: false,
        message: error.message
      }, 500);
    } else
    /* istanbul ignore next */
    {
      cov_k1vyigxhz().b[9][1]++;
    }
  }
};