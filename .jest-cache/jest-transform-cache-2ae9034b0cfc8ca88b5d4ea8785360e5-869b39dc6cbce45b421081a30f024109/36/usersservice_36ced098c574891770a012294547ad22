d8c074c75ac0445faa259fee9bc57798
/* istanbul ignore next */
function cov_1ubjvwsj9y() {
  var path = "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/services/users.service.ts";
  var hash = "be6b07bb37527cd3d09e6d0a48d61bb16f9af5d8";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/services/users.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 17
        }
      },
      "1": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 74,
          column: 2
        }
      },
      "2": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 25,
          column: 5
        }
      },
      "3": {
        start: {
          line: 15,
          column: 29
        },
        end: {
          line: 15,
          column: 62
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 18,
          column: 9
        }
      },
      "5": {
        start: {
          line: 17,
          column: 12
        },
        end: {
          line: 17,
          column: 52
        }
      },
      "6": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 23,
          column: 9
        }
      },
      "7": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 24
        }
      },
      "8": {
        start: {
          line: 26,
          column: 17
        },
        end: {
          line: 26,
          column: 55
        }
      },
      "9": {
        start: {
          line: 27,
          column: 17
        },
        end: {
          line: 27,
          column: 86
        }
      },
      "10": {
        start: {
          line: 28,
          column: 20
        },
        end: {
          line: 44,
          column: 6
        }
      },
      "11": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 72,
          column: 5
        }
      },
      "12": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 58,
          column: 9
        }
      },
      "13": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 57,
          column: 13
        }
      },
      "14": {
        start: {
          line: 51,
          column: 31
        },
        end: {
          line: 51,
          column: 71
        }
      },
      "15": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 52,
          column: 89
        }
      },
      "16": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 56,
          column: 135
        }
      },
      "17": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 66,
          column: 11
        }
      },
      "18": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 105
        }
      },
      "19": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 128
        }
      },
      "20": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 73,
          column: 19
        }
      },
      "21": {
        start: {
          line: 76,
          column: 0
        },
        end: {
          line: 107,
          column: 2
        }
      },
      "22": {
        start: {
          line: 77,
          column: 19
        },
        end: {
          line: 77,
          column: 60
        }
      },
      "23": {
        start: {
          line: 78,
          column: 20
        },
        end: {
          line: 101,
          column: 5
        }
      },
      "24": {
        start: {
          line: 102,
          column: 17
        },
        end: {
          line: 102,
          column: 49
        }
      },
      "25": {
        start: {
          line: 103,
          column: 4
        },
        end: {
          line: 105,
          column: 5
        }
      },
      "26": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 42
        }
      },
      "27": {
        start: {
          line: 106,
          column: 4
        },
        end: {
          line: 106,
          column: 21
        }
      },
      "28": {
        start: {
          line: 109,
          column: 0
        },
        end: {
          line: 129,
          column: 2
        }
      },
      "29": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 128,
          column: 7
        }
      },
      "30": {
        start: {
          line: 131,
          column: 0
        },
        end: {
          line: 152,
          column: 2
        }
      },
      "31": {
        start: {
          line: 132,
          column: 17
        },
        end: {
          line: 132,
          column: 40
        }
      },
      "32": {
        start: {
          line: 133,
          column: 4
        },
        end: {
          line: 135,
          column: 5
        }
      },
      "33": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 42
        }
      },
      "34": {
        start: {
          line: 137,
          column: 4
        },
        end: {
          line: 150,
          column: 5
        }
      },
      "35": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 149,
          column: 9
        }
      },
      "36": {
        start: {
          line: 139,
          column: 33
        },
        end: {
          line: 139,
          column: 71
        }
      },
      "37": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 142,
          column: 13
        }
      },
      "38": {
        start: {
          line: 141,
          column: 16
        },
        end: {
          line: 141,
          column: 56
        }
      },
      "39": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 147,
          column: 13
        }
      },
      "40": {
        start: {
          line: 146,
          column: 16
        },
        end: {
          line: 146,
          column: 28
        }
      },
      "41": {
        start: {
          line: 151,
          column: 4
        },
        end: {
          line: 151,
          column: 98
        }
      },
      "42": {
        start: {
          line: 154,
          column: 0
        },
        end: {
          line: 160,
          column: 2
        }
      },
      "43": {
        start: {
          line: 155,
          column: 17
        },
        end: {
          line: 155,
          column: 40
        }
      },
      "44": {
        start: {
          line: 156,
          column: 4
        },
        end: {
          line: 158,
          column: 5
        }
      },
      "45": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 157,
          column: 42
        }
      },
      "46": {
        start: {
          line: 159,
          column: 4
        },
        end: {
          line: 159,
          column: 30
        }
      },
      "47": {
        start: {
          line: 162,
          column: 0
        },
        end: {
          line: 174,
          column: 2
        }
      },
      "48": {
        start: {
          line: 163,
          column: 17
        },
        end: {
          line: 163,
          column: 40
        }
      },
      "49": {
        start: {
          line: 164,
          column: 4
        },
        end: {
          line: 166,
          column: 5
        }
      },
      "50": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 165,
          column: 42
        }
      },
      "51": {
        start: {
          line: 167,
          column: 17
        },
        end: {
          line: 167,
          column: 55
        }
      },
      "52": {
        start: {
          line: 168,
          column: 17
        },
        end: {
          line: 168,
          column: 86
        }
      },
      "53": {
        start: {
          line: 169,
          column: 4
        },
        end: {
          line: 173,
          column: 7
        }
      },
      "54": {
        start: {
          line: 176,
          column: 0
        },
        end: {
          line: 205,
          column: 2
        }
      },
      "55": {
        start: {
          line: 179,
          column: 24
        },
        end: {
          line: 184,
          column: 6
        }
      },
      "56": {
        start: {
          line: 185,
          column: 4
        },
        end: {
          line: 187,
          column: 5
        }
      },
      "57": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 186,
          column: 45
        }
      },
      "58": {
        start: {
          line: 188,
          column: 20
        },
        end: {
          line: 188,
          column: 39
        }
      },
      "59": {
        start: {
          line: 190,
          column: 22
        },
        end: {
          line: 190,
          column: 96
        }
      },
      "60": {
        start: {
          line: 191,
          column: 4
        },
        end: {
          line: 193,
          column: 5
        }
      },
      "61": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 192,
          column: 60
        }
      },
      "62": {
        start: {
          line: 195,
          column: 17
        },
        end: {
          line: 200,
          column: 6
        }
      },
      "63": {
        start: {
          line: 201,
          column: 4
        },
        end: {
          line: 203,
          column: 5
        }
      },
      "64": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 202,
          column: 60
        }
      },
      "65": {
        start: {
          line: 204,
          column: 4
        },
        end: {
          line: 204,
          column: 21
        }
      },
      "66": {
        start: {
          line: 207,
          column: 0
        },
        end: {
          line: 236,
          column: 2
        }
      },
      "67": {
        start: {
          line: 210,
          column: 23
        },
        end: {
          line: 215,
          column: 6
        }
      },
      "68": {
        start: {
          line: 216,
          column: 4
        },
        end: {
          line: 218,
          column: 5
        }
      },
      "69": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 217,
          column: 44
        }
      },
      "70": {
        start: {
          line: 219,
          column: 19
        },
        end: {
          line: 219,
          column: 37
        }
      },
      "71": {
        start: {
          line: 221,
          column: 23
        },
        end: {
          line: 221,
          column: 97
        }
      },
      "72": {
        start: {
          line: 222,
          column: 4
        },
        end: {
          line: 224,
          column: 5
        }
      },
      "73": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 223,
          column: 60
        }
      },
      "74": {
        start: {
          line: 226,
          column: 17
        },
        end: {
          line: 231,
          column: 6
        }
      },
      "75": {
        start: {
          line: 232,
          column: 4
        },
        end: {
          line: 234,
          column: 5
        }
      },
      "76": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 233,
          column: 60
        }
      },
      "77": {
        start: {
          line: 235,
          column: 4
        },
        end: {
          line: 235,
          column: 21
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 26
          },
          end: {
            line: 12,
            column: 27
          }
        },
        loc: {
          start: {
            line: 12,
            column: 139
          },
          end: {
            line: 74,
            column: 1
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 76,
            column: 23
          },
          end: {
            line: 76,
            column: 24
          }
        },
        loc: {
          start: {
            line: 76,
            column: 44
          },
          end: {
            line: 107,
            column: 1
          }
        },
        line: 76
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 109,
            column: 22
          },
          end: {
            line: 109,
            column: 23
          }
        },
        loc: {
          start: {
            line: 109,
            column: 36
          },
          end: {
            line: 129,
            column: 1
          }
        },
        line: 109
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 131,
            column: 26
          },
          end: {
            line: 131,
            column: 27
          }
        },
        loc: {
          start: {
            line: 131,
            column: 46
          },
          end: {
            line: 152,
            column: 1
          }
        },
        line: 131
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 154,
            column: 26
          },
          end: {
            line: 154,
            column: 27
          }
        },
        loc: {
          start: {
            line: 154,
            column: 40
          },
          end: {
            line: 160,
            column: 1
          }
        },
        line: 154
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 162,
            column: 29
          },
          end: {
            line: 162,
            column: 30
          }
        },
        loc: {
          start: {
            line: 162,
            column: 58
          },
          end: {
            line: 174,
            column: 1
          }
        },
        line: 162
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 176,
            column: 34
          },
          end: {
            line: 176,
            column: 35
          }
        },
        loc: {
          start: {
            line: 176,
            column: 56
          },
          end: {
            line: 205,
            column: 1
          }
        },
        line: 176
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 207,
            column: 34
          },
          end: {
            line: 207,
            column: 35
          }
        },
        loc: {
          start: {
            line: 207,
            column: 55
          },
          end: {
            line: 236,
            column: 1
          }
        },
        line: 207
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 18,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 18,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 21,
            column: 12
          },
          end: {
            line: 21,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 12
          },
          end: {
            line: 21,
            column: 34
          }
        }, {
          start: {
            line: 21,
            column: 38
          },
          end: {
            line: 21,
            column: 78
          }
        }],
        line: 21
      },
      "3": {
        loc: {
          start: {
            line: 41,
            column: 19
          },
          end: {
            line: 41,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 41,
            column: 64
          },
          end: {
            line: 41,
            column: 73
          }
        }, {
          start: {
            line: 41,
            column: 76
          },
          end: {
            line: 41,
            column: 79
          }
        }],
        line: 41
      },
      "4": {
        loc: {
          start: {
            line: 41,
            column: 19
          },
          end: {
            line: 41,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 19
          },
          end: {
            line: 41,
            column: 37
          }
        }, {
          start: {
            line: 41,
            column: 41
          },
          end: {
            line: 41,
            column: 61
          }
        }],
        line: 41
      },
      "5": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "6": {
        loc: {
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 49,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 49,
            column: 21
          }
        }, {
          start: {
            line: 49,
            column: 25
          },
          end: {
            line: 49,
            column: 48
          }
        }],
        line: 49
      },
      "7": {
        loc: {
          start: {
            line: 52,
            column: 29
          },
          end: {
            line: 52,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 52,
            column: 68
          },
          end: {
            line: 52,
            column: 74
          }
        }, {
          start: {
            line: 52,
            column: 77
          },
          end: {
            line: 52,
            column: 88
          }
        }],
        line: 52
      },
      "8": {
        loc: {
          start: {
            line: 52,
            column: 29
          },
          end: {
            line: 52,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 29
          },
          end: {
            line: 52,
            column: 44
          }
        }, {
          start: {
            line: 52,
            column: 48
          },
          end: {
            line: 52,
            column: 65
          }
        }],
        line: 52
      },
      "9": {
        loc: {
          start: {
            line: 77,
            column: 19
          },
          end: {
            line: 77,
            column: 60
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 77,
            column: 31
          },
          end: {
            line: 77,
            column: 55
          }
        }, {
          start: {
            line: 77,
            column: 58
          },
          end: {
            line: 77,
            column: 60
          }
        }],
        line: 77
      },
      "10": {
        loc: {
          start: {
            line: 103,
            column: 4
          },
          end: {
            line: 105,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 4
          },
          end: {
            line: 105,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "11": {
        loc: {
          start: {
            line: 133,
            column: 4
          },
          end: {
            line: 135,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 133,
            column: 4
          },
          end: {
            line: 135,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 133
      },
      "12": {
        loc: {
          start: {
            line: 137,
            column: 4
          },
          end: {
            line: 150,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 137,
            column: 4
          },
          end: {
            line: 150,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 137
      },
      "13": {
        loc: {
          start: {
            line: 137,
            column: 8
          },
          end: {
            line: 137,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 137,
            column: 8
          },
          end: {
            line: 137,
            column: 18
          }
        }, {
          start: {
            line: 137,
            column: 22
          },
          end: {
            line: 137,
            column: 47
          }
        }],
        line: 137
      },
      "14": {
        loc: {
          start: {
            line: 140,
            column: 12
          },
          end: {
            line: 142,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 12
          },
          end: {
            line: 142,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      },
      "15": {
        loc: {
          start: {
            line: 145,
            column: 12
          },
          end: {
            line: 147,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 12
          },
          end: {
            line: 147,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      },
      "16": {
        loc: {
          start: {
            line: 145,
            column: 16
          },
          end: {
            line: 145,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 145,
            column: 16
          },
          end: {
            line: 145,
            column: 38
          }
        }, {
          start: {
            line: 145,
            column: 42
          },
          end: {
            line: 145,
            column: 82
          }
        }],
        line: 145
      },
      "17": {
        loc: {
          start: {
            line: 156,
            column: 4
          },
          end: {
            line: 158,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 156,
            column: 4
          },
          end: {
            line: 158,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 156
      },
      "18": {
        loc: {
          start: {
            line: 164,
            column: 4
          },
          end: {
            line: 166,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 164,
            column: 4
          },
          end: {
            line: 166,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 164
      },
      "19": {
        loc: {
          start: {
            line: 185,
            column: 4
          },
          end: {
            line: 187,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 185,
            column: 4
          },
          end: {
            line: 187,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 185
      },
      "20": {
        loc: {
          start: {
            line: 190,
            column: 22
          },
          end: {
            line: 190,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 190,
            column: 75
          },
          end: {
            line: 190,
            column: 81
          }
        }, {
          start: {
            line: 190,
            column: 84
          },
          end: {
            line: 190,
            column: 96
          }
        }],
        line: 190
      },
      "21": {
        loc: {
          start: {
            line: 190,
            column: 22
          },
          end: {
            line: 190,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 190,
            column: 22
          },
          end: {
            line: 190,
            column: 55
          }
        }, {
          start: {
            line: 190,
            column: 59
          },
          end: {
            line: 190,
            column: 72
          }
        }],
        line: 190
      },
      "22": {
        loc: {
          start: {
            line: 191,
            column: 4
          },
          end: {
            line: 193,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 4
          },
          end: {
            line: 193,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 191
      },
      "23": {
        loc: {
          start: {
            line: 191,
            column: 8
          },
          end: {
            line: 191,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 191,
            column: 8
          },
          end: {
            line: 191,
            column: 18
          }
        }, {
          start: {
            line: 191,
            column: 22
          },
          end: {
            line: 191,
            column: 47
          }
        }, {
          start: {
            line: 191,
            column: 51
          },
          end: {
            line: 191,
            column: 73
          }
        }],
        line: 191
      },
      "24": {
        loc: {
          start: {
            line: 201,
            column: 4
          },
          end: {
            line: 203,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 201,
            column: 4
          },
          end: {
            line: 203,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 201
      },
      "25": {
        loc: {
          start: {
            line: 216,
            column: 4
          },
          end: {
            line: 218,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 216,
            column: 4
          },
          end: {
            line: 218,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 216
      },
      "26": {
        loc: {
          start: {
            line: 221,
            column: 23
          },
          end: {
            line: 221,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 221,
            column: 75
          },
          end: {
            line: 221,
            column: 81
          }
        }, {
          start: {
            line: 221,
            column: 84
          },
          end: {
            line: 221,
            column: 97
          }
        }],
        line: 221
      },
      "27": {
        loc: {
          start: {
            line: 221,
            column: 23
          },
          end: {
            line: 221,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 221,
            column: 23
          },
          end: {
            line: 221,
            column: 55
          }
        }, {
          start: {
            line: 221,
            column: 59
          },
          end: {
            line: 221,
            column: 72
          }
        }],
        line: 221
      },
      "28": {
        loc: {
          start: {
            line: 222,
            column: 4
          },
          end: {
            line: 224,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 222,
            column: 4
          },
          end: {
            line: 224,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 222
      },
      "29": {
        loc: {
          start: {
            line: 222,
            column: 8
          },
          end: {
            line: 222,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 222,
            column: 8
          },
          end: {
            line: 222,
            column: 19
          }
        }, {
          start: {
            line: 222,
            column: 23
          },
          end: {
            line: 222,
            column: 49
          }
        }, {
          start: {
            line: 222,
            column: 53
          },
          end: {
            line: 222,
            column: 76
          }
        }],
        line: 222
      },
      "30": {
        loc: {
          start: {
            line: 232,
            column: 4
          },
          end: {
            line: 234,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 232,
            column: 4
          },
          end: {
            line: 234,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 232
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0, 0],
      "30": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "be6b07bb37527cd3d09e6d0a48d61bb16f9af5d8"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ubjvwsj9y = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ubjvwsj9y();
var _a;
/* eslint-disable @typescript-eslint/no-explicit-any */
import crypto from "node:crypto";
import infoLogs, { LogTypes } from "@/libs/logger";
import { sendWelcomeEmail } from "@/libs/mailer";
import { User } from "@/models/user.model";
import { CampusService } from "./campuses.service";
export class UserService {}
/* istanbul ignore next */
cov_1ubjvwsj9y().s[0]++;
_a = UserService;
// Create
/* istanbul ignore next */
cov_1ubjvwsj9y().s[1]++;
UserService.createUsers = async ({
  user_id,
  email,
  password,
  first_name,
  last_name,
  phone,
  address,
  meta_data,
  user_type,
  campus_id
}) => {
  /* istanbul ignore next */
  cov_1ubjvwsj9y().f[0]++;
  cov_1ubjvwsj9y().s[2]++;
  // Check if email already exists
  try {
    const existingUser =
    /* istanbul ignore next */
    (cov_1ubjvwsj9y().s[3]++, await User.find({
      email: email
    }));
    /* istanbul ignore next */
    cov_1ubjvwsj9y().s[4]++;
    if (existingUser.rows.length > 0) {
      /* istanbul ignore next */
      cov_1ubjvwsj9y().b[0][0]++;
      cov_1ubjvwsj9y().s[5]++;
      throw new Error("Email already exists");
    } else
    /* istanbul ignore next */
    {
      cov_1ubjvwsj9y().b[0][1]++;
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_1ubjvwsj9y().s[6]++;
    if (
    /* istanbul ignore next */
    (cov_1ubjvwsj9y().b[2][0]++, error instanceof Error) &&
    /* istanbul ignore next */
    (cov_1ubjvwsj9y().b[2][1]++, error.message === "Email already exists")) {
      /* istanbul ignore next */
      cov_1ubjvwsj9y().b[1][0]++;
      cov_1ubjvwsj9y().s[7]++;
      throw error;
    } else
    /* istanbul ignore next */
    {
      cov_1ubjvwsj9y().b[1][1]++;
    }
    // If error is not about existing user, continue with creation
  }
  const salt =
  /* istanbul ignore next */
  (cov_1ubjvwsj9y().s[8]++, crypto.randomBytes(16).toString("hex"));
  const hash =
  /* istanbul ignore next */
  (cov_1ubjvwsj9y().s[9]++, crypto.pbkdf2Sync(password, salt, 1000, 64, "sha512").toString("hex"));
  const newUser =
  /* istanbul ignore next */
  (cov_1ubjvwsj9y().s[10]++, await User.create({
    user_id: user_id,
    email: email,
    hash: hash,
    salt: salt,
    first_name: first_name,
    last_name: last_name,
    phone: phone,
    address: address,
    meta_data: meta_data,
    is_active: true,
    is_deleted: false,
    user_type: user_type,
    campus_id:
    /* istanbul ignore next */
    (cov_1ubjvwsj9y().b[4][0]++, campus_id !== null) &&
    /* istanbul ignore next */
    (cov_1ubjvwsj9y().b[4][1]++, campus_id !== void 0) ?
    /* istanbul ignore next */
    (cov_1ubjvwsj9y().b[3][0]++, campus_id) :
    /* istanbul ignore next */
    (cov_1ubjvwsj9y().b[3][1]++, " "),
    created_at: new Date(),
    updated_at: new Date()
  }));
  // Send welcome email after successful user creation
  /* istanbul ignore next */
  cov_1ubjvwsj9y().s[11]++;
  try {
    // Get campus name if campus_id is provided
    let campusName;
    /* istanbul ignore next */
    cov_1ubjvwsj9y().s[12]++;
    if (
    /* istanbul ignore next */
    (cov_1ubjvwsj9y().b[6][0]++, campus_id) &&
    /* istanbul ignore next */
    (cov_1ubjvwsj9y().b[6][1]++, campus_id.trim() !== "")) {
      /* istanbul ignore next */
      cov_1ubjvwsj9y().b[5][0]++;
      cov_1ubjvwsj9y().s[13]++;
      try {
        const campus =
        /* istanbul ignore next */
        (cov_1ubjvwsj9y().s[14]++, await CampusService.getCampus(campus_id));
        /* istanbul ignore next */
        cov_1ubjvwsj9y().s[15]++;
        campusName =
        /* istanbul ignore next */
        (cov_1ubjvwsj9y().b[8][0]++, campus === null) ||
        /* istanbul ignore next */
        (cov_1ubjvwsj9y().b[8][1]++, campus === void 0) ?
        /* istanbul ignore next */
        (cov_1ubjvwsj9y().b[7][0]++, void 0) :
        /* istanbul ignore next */
        (cov_1ubjvwsj9y().b[7][1]++, campus.name);
      } catch (_b) {
        /* istanbul ignore next */
        cov_1ubjvwsj9y().s[16]++;
        // If campus fetch fails, continue without campus name
        infoLogs(`Could not fetch campus info for campus_id: ${campus_id}`, LogTypes.ERROR, "USER:CREATE:CAMPUS_FETCH_FAILED");
      }
    } else
    /* istanbul ignore next */
    {
      cov_1ubjvwsj9y().b[5][1]++;
    }
    cov_1ubjvwsj9y().s[17]++;
    await sendWelcomeEmail(email, {
      first_name,
      last_name,
      email,
      user_type,
      user_id,
      campus_name: campusName
    });
    /* istanbul ignore next */
    cov_1ubjvwsj9y().s[18]++;
    infoLogs(`Welcome email sent to new user: ${email}`, LogTypes.LOGS, "USER:CREATE:WELCOME_EMAIL");
  } catch (emailError) {
    /* istanbul ignore next */
    cov_1ubjvwsj9y().s[19]++;
    // Log the error but don't fail user creation
    infoLogs(`Failed to send welcome email to ${email}: ${emailError}`, LogTypes.ERROR, "USER:CREATE:WELCOME_EMAIL_FAILED");
  }
  /* istanbul ignore next */
  cov_1ubjvwsj9y().s[20]++;
  return newUser;
};
// Get All
/* istanbul ignore next */
cov_1ubjvwsj9y().s[21]++;
UserService.getUsers = async campus_id => {
  /* istanbul ignore next */
  cov_1ubjvwsj9y().f[1]++;
  const filter =
  /* istanbul ignore next */
  (cov_1ubjvwsj9y().s[22]++, campus_id ?
  /* istanbul ignore next */
  (cov_1ubjvwsj9y().b[9][0]++, {
    campus_id: campus_id
  }) :
  /* istanbul ignore next */
  (cov_1ubjvwsj9y().b[9][1]++, {}));
  const options =
  /* istanbul ignore next */
  (cov_1ubjvwsj9y().s[23]++, {
    sort: {
      created_at: "DESC"
    },
    limit: 100,
    skip: 0,
    select: ["id", "user_id", "email", "first_name", "last_name", "phone", "address", "last_login", "meta_data", "is_active", "is_deleted", "user_type", "campus_id", "created_at", "updated_at"]
  });
  const data =
  /* istanbul ignore next */
  (cov_1ubjvwsj9y().s[24]++, await User.find(filter, options));
  /* istanbul ignore next */
  cov_1ubjvwsj9y().s[25]++;
  if (data.rows.length === 0) {
    /* istanbul ignore next */
    cov_1ubjvwsj9y().b[10][0]++;
    cov_1ubjvwsj9y().s[26]++;
    throw new Error("No users found");
  } else
  /* istanbul ignore next */
  {
    cov_1ubjvwsj9y().b[10][1]++;
  }
  cov_1ubjvwsj9y().s[27]++;
  return data.rows;
};
// Get One
/* istanbul ignore next */
cov_1ubjvwsj9y().s[28]++;
UserService.getUser = async id => {
  /* istanbul ignore next */
  cov_1ubjvwsj9y().f[2]++;
  cov_1ubjvwsj9y().s[29]++;
  return await User.findById(id, {
    select: ["id", "user_id", "email", "first_name", "last_name", "phone", "address", "last_login", "meta_data", "is_active", "is_deleted", "user_type", "campus_id", "created_at", "updated_at"]
  });
};
// Update
/* istanbul ignore next */
cov_1ubjvwsj9y().s[30]++;
UserService.updateUsers = async (id, data) => {
  /* istanbul ignore next */
  cov_1ubjvwsj9y().f[3]++;
  const user =
  /* istanbul ignore next */
  (cov_1ubjvwsj9y().s[31]++, await User.findById(id));
  /* istanbul ignore next */
  cov_1ubjvwsj9y().s[32]++;
  if (!user) {
    /* istanbul ignore next */
    cov_1ubjvwsj9y().b[11][0]++;
    cov_1ubjvwsj9y().s[33]++;
    throw new Error("User not found");
  } else
  /* istanbul ignore next */
  {
    cov_1ubjvwsj9y().b[11][1]++;
  }
  // Check if email is being updated and if it already exists
  cov_1ubjvwsj9y().s[34]++;
  if (
  /* istanbul ignore next */
  (cov_1ubjvwsj9y().b[13][0]++, data.email) &&
  /* istanbul ignore next */
  (cov_1ubjvwsj9y().b[13][1]++, data.email !== user.email)) {
    /* istanbul ignore next */
    cov_1ubjvwsj9y().b[12][0]++;
    cov_1ubjvwsj9y().s[35]++;
    try {
      const existingUser =
      /* istanbul ignore next */
      (cov_1ubjvwsj9y().s[36]++, await User.find({
        email: data.email
      }));
      /* istanbul ignore next */
      cov_1ubjvwsj9y().s[37]++;
      if (existingUser.rows.length > 0) {
        /* istanbul ignore next */
        cov_1ubjvwsj9y().b[14][0]++;
        cov_1ubjvwsj9y().s[38]++;
        throw new Error("Email already exists");
      } else
      /* istanbul ignore next */
      {
        cov_1ubjvwsj9y().b[14][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1ubjvwsj9y().s[39]++;
      if (
      /* istanbul ignore next */
      (cov_1ubjvwsj9y().b[16][0]++, error instanceof Error) &&
      /* istanbul ignore next */
      (cov_1ubjvwsj9y().b[16][1]++, error.message === "Email already exists")) {
        /* istanbul ignore next */
        cov_1ubjvwsj9y().b[15][0]++;
        cov_1ubjvwsj9y().s[40]++;
        throw error;
      } else
      /* istanbul ignore next */
      {
        cov_1ubjvwsj9y().b[15][1]++;
      }
      // If error is not about existing user, continue with update
    }
  } else
  /* istanbul ignore next */
  {
    cov_1ubjvwsj9y().b[12][1]++;
  }
  cov_1ubjvwsj9y().s[41]++;
  await User.updateById(id, Object.assign(Object.assign({}, data), {
    updated_at: new Date()
  }));
};
// Delete
/* istanbul ignore next */
cov_1ubjvwsj9y().s[42]++;
UserService.deleteUsers = async id => {
  /* istanbul ignore next */
  cov_1ubjvwsj9y().f[4]++;
  const user =
  /* istanbul ignore next */
  (cov_1ubjvwsj9y().s[43]++, await User.findById(id));
  /* istanbul ignore next */
  cov_1ubjvwsj9y().s[44]++;
  if (!user) {
    /* istanbul ignore next */
    cov_1ubjvwsj9y().b[17][0]++;
    cov_1ubjvwsj9y().s[45]++;
    throw new Error("User not found");
  } else
  /* istanbul ignore next */
  {
    cov_1ubjvwsj9y().b[17][1]++;
  }
  cov_1ubjvwsj9y().s[46]++;
  await User.removeById(id);
};
// Update Password
/* istanbul ignore next */
cov_1ubjvwsj9y().s[47]++;
UserService.updatePassword = async (id, {
  password
}) => {
  /* istanbul ignore next */
  cov_1ubjvwsj9y().f[5]++;
  const user =
  /* istanbul ignore next */
  (cov_1ubjvwsj9y().s[48]++, await User.findById(id));
  /* istanbul ignore next */
  cov_1ubjvwsj9y().s[49]++;
  if (!user) {
    /* istanbul ignore next */
    cov_1ubjvwsj9y().b[18][0]++;
    cov_1ubjvwsj9y().s[50]++;
    throw new Error("User not found");
  } else
  /* istanbul ignore next */
  {
    cov_1ubjvwsj9y().b[18][1]++;
  }
  const salt =
  /* istanbul ignore next */
  (cov_1ubjvwsj9y().s[51]++, crypto.randomBytes(16).toString("hex"));
  const hash =
  /* istanbul ignore next */
  (cov_1ubjvwsj9y().s[52]++, crypto.pbkdf2Sync(password, salt, 1000, 64, "sha512").toString("hex"));
  /* istanbul ignore next */
  cov_1ubjvwsj9y().s[53]++;
  await User.updateById(id, {
    hash: hash,
    salt: salt,
    updated_at: new Date()
  });
};
// getParentForStudent
/* istanbul ignore next */
cov_1ubjvwsj9y().s[54]++;
UserService.getParentForStudent = async student_id => {
  /* istanbul ignore next */
  cov_1ubjvwsj9y().f[6]++;
  var _b;
  // First, get the student to extract parent IDs from their meta_data
  const studentData =
  /* istanbul ignore next */
  (cov_1ubjvwsj9y().s[55]++, await User.find({
    id: student_id,
    user_type: "Student",
    is_active: true,
    is_deleted: false
  }));
  /* istanbul ignore next */
  cov_1ubjvwsj9y().s[56]++;
  if (studentData.rows.length === 0) {
    /* istanbul ignore next */
    cov_1ubjvwsj9y().b[19][0]++;
    cov_1ubjvwsj9y().s[57]++;
    throw new Error("Student not found");
  } else
  /* istanbul ignore next */
  {
    cov_1ubjvwsj9y().b[19][1]++;
  }
  const student =
  /* istanbul ignore next */
  (cov_1ubjvwsj9y().s[58]++, studentData.rows[0]);
  // Extract parent IDs from student's meta_data
  const parentIds =
  /* istanbul ignore next */
  (cov_1ubjvwsj9y().s[59]++,
  /* istanbul ignore next */
  (cov_1ubjvwsj9y().b[21][0]++, (_b = student.meta_data) === null) ||
  /* istanbul ignore next */
  (cov_1ubjvwsj9y().b[21][1]++, _b === void 0) ?
  /* istanbul ignore next */
  (cov_1ubjvwsj9y().b[20][0]++, void 0) :
  /* istanbul ignore next */
  (cov_1ubjvwsj9y().b[20][1]++, _b.parent_id));
  /* istanbul ignore next */
  cov_1ubjvwsj9y().s[60]++;
  if (
  /* istanbul ignore next */
  (cov_1ubjvwsj9y().b[23][0]++, !parentIds) ||
  /* istanbul ignore next */
  (cov_1ubjvwsj9y().b[23][1]++, !Array.isArray(parentIds)) ||
  /* istanbul ignore next */
  (cov_1ubjvwsj9y().b[23][2]++, parentIds.length === 0)) {
    /* istanbul ignore next */
    cov_1ubjvwsj9y().b[22][0]++;
    cov_1ubjvwsj9y().s[61]++;
    throw new Error("No parents found for the student");
  } else
  /* istanbul ignore next */
  {
    cov_1ubjvwsj9y().b[22][1]++;
  }
  // Query parents by the IDs found in student's meta_data
  const data =
  /* istanbul ignore next */
  (cov_1ubjvwsj9y().s[62]++, await User.find({
    id: {
      $in: parentIds
    },
    user_type: "Parent",
    is_active: true,
    is_deleted: false
  }));
  /* istanbul ignore next */
  cov_1ubjvwsj9y().s[63]++;
  if (data.rows.length === 0) {
    /* istanbul ignore next */
    cov_1ubjvwsj9y().b[24][0]++;
    cov_1ubjvwsj9y().s[64]++;
    throw new Error("No parents found for the student");
  } else
  /* istanbul ignore next */
  {
    cov_1ubjvwsj9y().b[24][1]++;
  }
  cov_1ubjvwsj9y().s[65]++;
  return data.rows;
};
// getStudentForParent
/* istanbul ignore next */
cov_1ubjvwsj9y().s[66]++;
UserService.getStudentForParent = async parent_id => {
  /* istanbul ignore next */
  cov_1ubjvwsj9y().f[7]++;
  var _b;
  // First, get the parent to extract student IDs from their meta_data
  const parentData =
  /* istanbul ignore next */
  (cov_1ubjvwsj9y().s[67]++, await User.find({
    id: parent_id,
    user_type: "Parent",
    is_active: true,
    is_deleted: false
  }));
  /* istanbul ignore next */
  cov_1ubjvwsj9y().s[68]++;
  if (parentData.rows.length === 0) {
    /* istanbul ignore next */
    cov_1ubjvwsj9y().b[25][0]++;
    cov_1ubjvwsj9y().s[69]++;
    throw new Error("Parent not found");
  } else
  /* istanbul ignore next */
  {
    cov_1ubjvwsj9y().b[25][1]++;
  }
  const parent =
  /* istanbul ignore next */
  (cov_1ubjvwsj9y().s[70]++, parentData.rows[0]);
  // Extract student IDs from parent's meta_data
  const studentIds =
  /* istanbul ignore next */
  (cov_1ubjvwsj9y().s[71]++,
  /* istanbul ignore next */
  (cov_1ubjvwsj9y().b[27][0]++, (_b = parent.meta_data) === null) ||
  /* istanbul ignore next */
  (cov_1ubjvwsj9y().b[27][1]++, _b === void 0) ?
  /* istanbul ignore next */
  (cov_1ubjvwsj9y().b[26][0]++, void 0) :
  /* istanbul ignore next */
  (cov_1ubjvwsj9y().b[26][1]++, _b.student_id));
  /* istanbul ignore next */
  cov_1ubjvwsj9y().s[72]++;
  if (
  /* istanbul ignore next */
  (cov_1ubjvwsj9y().b[29][0]++, !studentIds) ||
  /* istanbul ignore next */
  (cov_1ubjvwsj9y().b[29][1]++, !Array.isArray(studentIds)) ||
  /* istanbul ignore next */
  (cov_1ubjvwsj9y().b[29][2]++, studentIds.length === 0)) {
    /* istanbul ignore next */
    cov_1ubjvwsj9y().b[28][0]++;
    cov_1ubjvwsj9y().s[73]++;
    throw new Error("No students found for the parent");
  } else
  /* istanbul ignore next */
  {
    cov_1ubjvwsj9y().b[28][1]++;
  }
  // Query students by the IDs found in parent's meta_data
  const data =
  /* istanbul ignore next */
  (cov_1ubjvwsj9y().s[74]++, await User.find({
    id: {
      $in: studentIds
    },
    user_type: "Student",
    is_active: true,
    is_deleted: false
  }));
  /* istanbul ignore next */
  cov_1ubjvwsj9y().s[75]++;
  if (data.rows.length === 0) {
    /* istanbul ignore next */
    cov_1ubjvwsj9y().b[30][0]++;
    cov_1ubjvwsj9y().s[76]++;
    throw new Error("No students found for the parent");
  } else
  /* istanbul ignore next */
  {
    cov_1ubjvwsj9y().b[30][1]++;
  }
  cov_1ubjvwsj9y().s[77]++;
  return data.rows;
};