dc9c7c976db249f4e69dff71e97d20a9
/* istanbul ignore next */
function cov_2jvmtp4c98() {
  var path = "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/routes/message.route.ts";
  var hash = "de7bb2a8702f21584800e741d1973ff93b34234d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/routes/message.route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 12
        },
        end: {
          line: 3,
          column: 22
        }
      },
      "1": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 46
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 44
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 49
        }
      },
      "4": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 52
        }
      },
      "5": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 50
        }
      },
      "6": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 53
        }
      },
      "7": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 56
        }
      },
      "8": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 50
        }
      },
      "9": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 54
        }
      },
      "10": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 13,
          column: 61
        }
      },
      "11": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 67
        }
      },
      "12": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 16,
          column: 71
        }
      },
      "14": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 17,
          column: 71
        }
      },
      "15": {
        start: {
          line: 18,
          column: 0
        },
        end: {
          line: 18,
          column: 74
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "de7bb2a8702f21584800e741d1973ff93b34234d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2jvmtp4c98 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2jvmtp4c98();
import { Hono } from "hono";
import { MessageController } from "@/controllers/message.controller";
const app =
/* istanbul ignore next */
(cov_2jvmtp4c98().s[0]++, new Hono());
/* istanbul ignore next */
cov_2jvmtp4c98().s[1]++;
app.post("/", MessageController.storeMessage);
/* istanbul ignore next */
cov_2jvmtp4c98().s[2]++;
app.get("/", MessageController.getMessages);
/* istanbul ignore next */
cov_2jvmtp4c98().s[3]++;
app.put("/:id", MessageController.updateMessage);
/* istanbul ignore next */
cov_2jvmtp4c98().s[4]++;
app.delete("/:id", MessageController.deleteMessage);
/* istanbul ignore next */
cov_2jvmtp4c98().s[5]++;
app.post("/group", MessageController.createGroup);
/* istanbul ignore next */
cov_2jvmtp4c98().s[6]++;
app.put("/group/:id", MessageController.updateGroup);
/* istanbul ignore next */
cov_2jvmtp4c98().s[7]++;
app.delete("/group/:id", MessageController.deleteGroup);
/* istanbul ignore next */
cov_2jvmtp4c98().s[8]++;
app.get("/group", MessageController.getAllGroups);
/* istanbul ignore next */
cov_2jvmtp4c98().s[9]++;
app.get("/group/:id", MessageController.getGroupById);
/* istanbul ignore next */
cov_2jvmtp4c98().s[10]++;
app.post("/group/:id/add", MessageController.addUserToGroup);
/* istanbul ignore next */
cov_2jvmtp4c98().s[11]++;
app.post("/group/:id/kick", MessageController.removeUserFromGroup);
/* istanbul ignore next */
cov_2jvmtp4c98().s[12]++;
app.get("/group/:id/messages", MessageController.getAllMessagesInGroup);
/* istanbul ignore next */
cov_2jvmtp4c98().s[13]++;
app.post("/group/:id/messages", MessageController.storeMessageInGroup);
/* istanbul ignore next */
cov_2jvmtp4c98().s[14]++;
app.put("/group/:id/messages", MessageController.updateMessageInGroup);
/* istanbul ignore next */
cov_2jvmtp4c98().s[15]++;
app.delete("/group/:id/messages", MessageController.deleteMessageInGroup);
export default app;