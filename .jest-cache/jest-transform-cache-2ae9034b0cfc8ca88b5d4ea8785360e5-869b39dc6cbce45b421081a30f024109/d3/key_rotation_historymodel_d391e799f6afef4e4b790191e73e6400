d7161c13dcf59a3af262bdfca7cda2be
/* istanbul ignore next */
function cov_onhkyn1ds() {
  var path = "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/models/key_rotation_history.model.ts";
  var hash = "2b12d5138a0eadae7e7bca00ae111fcba23421ed";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/models/key_rotation_history.model.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 33
        },
        end: {
          line: 16,
          column: 2
        }
      },
      "1": {
        start: {
          line: 14,
          column: 45
        },
        end: {
          line: 14,
          column: 55
        }
      },
      "2": {
        start: {
          line: 15,
          column: 45
        },
        end: {
          line: 15,
          column: 55
        }
      },
      "3": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 17,
          column: 68
        }
      },
      "4": {
        start: {
          line: 18,
          column: 0
        },
        end: {
          line: 18,
          column: 66
        }
      },
      "5": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 19,
          column: 72
        }
      },
      "6": {
        start: {
          line: 20,
          column: 0
        },
        end: {
          line: 22,
          column: 2
        }
      },
      "7": {
        start: {
          line: 23,
          column: 27
        },
        end: {
          line: 23,
          column: 90
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 139
        }
      },
      "9": {
        start: {
          line: 29,
          column: 24
        },
        end: {
          line: 31,
          column: 10
        }
      },
      "10": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 34
        }
      },
      "11": {
        start: {
          line: 36,
          column: 29
        },
        end: {
          line: 40,
          column: 10
        }
      },
      "12": {
        start: {
          line: 41,
          column: 26
        },
        end: {
          line: 41,
          column: 49
        }
      },
      "13": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 44,
          column: 9
        }
      },
      "14": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 43,
          column: 24
        }
      },
      "15": {
        start: {
          line: 45,
          column: 32
        },
        end: {
          line: 45,
          column: 125
        }
      },
      "16": {
        start: {
          line: 45,
          column: 57
        },
        end: {
          line: 45,
          column: 124
        }
      },
      "17": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 105
        }
      },
      "18": {
        start: {
          line: 49,
          column: 27
        },
        end: {
          line: 52,
          column: 9
        }
      },
      "19": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 55,
          column: 9
        }
      },
      "20": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 65
        }
      },
      "21": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 67
        }
      },
      "22": {
        start: {
          line: 59,
          column: 29
        },
        end: {
          line: 59,
          column: 62
        }
      },
      "23": {
        start: {
          line: 60,
          column: 26
        },
        end: {
          line: 60,
          column: 49
        }
      },
      "24": {
        start: {
          line: 61,
          column: 22
        },
        end: {
          line: 61,
          column: 38
        }
      },
      "25": {
        start: {
          line: 62,
          column: 27
        },
        end: {
          line: 62,
          column: 92
        }
      },
      "26": {
        start: {
          line: 62,
          column: 51
        },
        end: {
          line: 62,
          column: 84
        }
      },
      "27": {
        start: {
          line: 63,
          column: 23
        },
        end: {
          line: 63,
          column: 85
        }
      },
      "28": {
        start: {
          line: 63,
          column: 47
        },
        end: {
          line: 63,
          column: 77
        }
      },
      "29": {
        start: {
          line: 64,
          column: 24
        },
        end: {
          line: 64,
          column: 87
        }
      },
      "30": {
        start: {
          line: 64,
          column: 48
        },
        end: {
          line: 64,
          column: 79
        }
      },
      "31": {
        start: {
          line: 65,
          column: 29
        },
        end: {
          line: 67,
          column: 18
        }
      },
      "32": {
        start: {
          line: 66,
          column: 39
        },
        end: {
          line: 66,
          column: 106
        }
      },
      "33": {
        start: {
          line: 69,
          column: 35
        },
        end: {
          line: 71,
          column: 96
        }
      },
      "34": {
        start: {
          line: 70,
          column: 27
        },
        end: {
          line: 70,
          column: 60
        }
      },
      "35": {
        start: {
          line: 71,
          column: 28
        },
        end: {
          line: 71,
          column: 95
        }
      },
      "36": {
        start: {
          line: 72,
          column: 30
        },
        end: {
          line: 72,
          column: 31
        }
      },
      "37": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 82,
          column: 9
        }
      },
      "38": {
        start: {
          line: 74,
          column: 30
        },
        end: {
          line: 74,
          column: 32
        }
      },
      "39": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 80,
          column: 13
        }
      },
      "40": {
        start: {
          line: 75,
          column: 25
        },
        end: {
          line: 75,
          column: 26
        }
      },
      "41": {
        start: {
          line: 76,
          column: 33
        },
        end: {
          line: 76,
          column: 79
        }
      },
      "42": {
        start: {
          line: 77,
          column: 36
        },
        end: {
          line: 77,
          column: 78
        }
      },
      "43": {
        start: {
          line: 78,
          column: 37
        },
        end: {
          line: 78,
          column: 105
        }
      },
      "44": {
        start: {
          line: 79,
          column: 16
        },
        end: {
          line: 79,
          column: 45
        }
      },
      "45": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 104
        }
      },
      "46": {
        start: {
          line: 81,
          column: 66
        },
        end: {
          line: 81,
          column: 80
        }
      },
      "47": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 90,
          column: 10
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 39
          },
          end: {
            line: 14,
            column: 40
          }
        },
        loc: {
          start: {
            line: 14,
            column: 45
          },
          end: {
            line: 14,
            column: 55
          }
        },
        line: 14
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 39
          },
          end: {
            line: 15,
            column: 40
          }
        },
        loc: {
          start: {
            line: 15,
            column: 45
          },
          end: {
            line: 15,
            column: 55
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 44
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        loc: {
          start: {
            line: 28,
            column: 47
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 28
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        loc: {
          start: {
            line: 34,
            column: 58
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 34
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 45,
            column: 47
          },
          end: {
            line: 45,
            column: 48
          }
        },
        loc: {
          start: {
            line: 45,
            column: 57
          },
          end: {
            line: 45,
            column: 124
          }
        },
        line: 45
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        },
        loc: {
          start: {
            line: 48,
            column: 71
          },
          end: {
            line: 57,
            column: 5
          }
        },
        line: 48
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        loc: {
          start: {
            line: 58,
            column: 41
          },
          end: {
            line: 91,
            column: 5
          }
        },
        line: 58
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 62,
            column: 44
          },
          end: {
            line: 62,
            column: 45
          }
        },
        loc: {
          start: {
            line: 62,
            column: 51
          },
          end: {
            line: 62,
            column: 84
          }
        },
        line: 62
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 63,
            column: 40
          },
          end: {
            line: 63,
            column: 41
          }
        },
        loc: {
          start: {
            line: 63,
            column: 47
          },
          end: {
            line: 63,
            column: 77
          }
        },
        line: 63
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 64,
            column: 41
          },
          end: {
            line: 64,
            column: 42
          }
        },
        loc: {
          start: {
            line: 64,
            column: 48
          },
          end: {
            line: 64,
            column: 79
          }
        },
        line: 64
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 66,
            column: 29
          },
          end: {
            line: 66,
            column: 30
          }
        },
        loc: {
          start: {
            line: 66,
            column: 39
          },
          end: {
            line: 66,
            column: 106
          }
        },
        line: 66
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 70,
            column: 20
          },
          end: {
            line: 70,
            column: 21
          }
        },
        loc: {
          start: {
            line: 70,
            column: 27
          },
          end: {
            line: 70,
            column: 60
          }
        },
        line: 70
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 71,
            column: 18
          },
          end: {
            line: 71,
            column: 19
          }
        },
        loc: {
          start: {
            line: 71,
            column: 28
          },
          end: {
            line: 71,
            column: 95
          }
        },
        line: 71
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 81,
            column: 47
          },
          end: {
            line: 81,
            column: 48
          }
        },
        loc: {
          start: {
            line: 81,
            column: 66
          },
          end: {
            line: 81,
            column: 80
          }
        },
        line: 81
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 32,
            column: 15
          },
          end: {
            line: 32,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 15
          },
          end: {
            line: 32,
            column: 27
          }
        }, {
          start: {
            line: 32,
            column: 31
          },
          end: {
            line: 32,
            column: 33
          }
        }],
        line: 32
      },
      "1": {
        loc: {
          start: {
            line: 41,
            column: 26
          },
          end: {
            line: 41,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 26
          },
          end: {
            line: 41,
            column: 43
          }
        }, {
          start: {
            line: 41,
            column: 47
          },
          end: {
            line: 41,
            column: 49
          }
        }],
        line: 41
      },
      "2": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "3": {
        loc: {
          start: {
            line: 46,
            column: 15
          },
          end: {
            line: 46,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 16
          },
          end: {
            line: 46,
            column: 95
          }
        }, {
          start: {
            line: 46,
            column: 100
          },
          end: {
            line: 46,
            column: 104
          }
        }],
        line: 46
      },
      "4": {
        loc: {
          start: {
            line: 46,
            column: 16
          },
          end: {
            line: 46,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 46,
            column: 70
          },
          end: {
            line: 46,
            column: 76
          }
        }, {
          start: {
            line: 46,
            column: 79
          },
          end: {
            line: 46,
            column: 95
          }
        }],
        line: 46
      },
      "5": {
        loc: {
          start: {
            line: 46,
            column: 16
          },
          end: {
            line: 46,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 16
          },
          end: {
            line: 46,
            column: 50
          }
        }, {
          start: {
            line: 46,
            column: 54
          },
          end: {
            line: 46,
            column: 67
          }
        }],
        line: 46
      },
      "6": {
        loc: {
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "7": {
        loc: {
          start: {
            line: 60,
            column: 26
          },
          end: {
            line: 60,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 26
          },
          end: {
            line: 60,
            column: 43
          }
        }, {
          start: {
            line: 60,
            column: 47
          },
          end: {
            line: 60,
            column: 49
          }
        }],
        line: 60
      },
      "8": {
        loc: {
          start: {
            line: 65,
            column: 29
          },
          end: {
            line: 67,
            column: 18
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 66,
            column: 14
          },
          end: {
            line: 66,
            column: 110
          }
        }, {
          start: {
            line: 67,
            column: 14
          },
          end: {
            line: 67,
            column: 18
          }
        }],
        line: 65
      },
      "9": {
        loc: {
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 82,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 82,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "10": {
        loc: {
          start: {
            line: 88,
            column: 32
          },
          end: {
            line: 88,
            column: 128
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 88,
            column: 33
          },
          end: {
            line: 88,
            column: 119
          }
        }, {
          start: {
            line: 88,
            column: 124
          },
          end: {
            line: 88,
            column: 128
          }
        }],
        line: 88
      },
      "11": {
        loc: {
          start: {
            line: 88,
            column: 33
          },
          end: {
            line: 88,
            column: 119
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 88,
            column: 84
          },
          end: {
            line: 88,
            column: 90
          }
        }, {
          start: {
            line: 88,
            column: 93
          },
          end: {
            line: 88,
            column: 119
          }
        }],
        line: 88
      },
      "12": {
        loc: {
          start: {
            line: 88,
            column: 33
          },
          end: {
            line: 88,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 88,
            column: 33
          },
          end: {
            line: 88,
            column: 54
          }
        }, {
          start: {
            line: 88,
            column: 58
          },
          end: {
            line: 88,
            column: 81
          }
        }],
        line: 88
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2b12d5138a0eadae7e7bca00ae111fcba23421ed"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_onhkyn1ds = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_onhkyn1ds();
import { Schema } from "ottoman";
import { ottoman } from "../libs/db";
const KeyRotationHistorySchema =
/* istanbul ignore next */
(cov_onhkyn1ds().s[0]++, new Schema({
  campus_id: {
    type: String,
    required: true
  },
  rotation_date: {
    type: Date,
    required: true
  },
  old_key_id: {
    type: String,
    required: true
  },
  new_key_id: {
    type: String,
    required: true
  },
  key_type: {
    type: String,
    required: true
  },
  rotation_reason: {
    type: String,
    required: true
  },
  rotated_by: {
    type: String,
    required: true
  },
  rotation_status: {
    type: String,
    required: true
  },
  backup_location: {
    type: String,
    required: true
  },
  verification_status: {
    type: String,
    required: true
  },
  created_at: {
    type: Date,
    default: () => {
      /* istanbul ignore next */
      cov_onhkyn1ds().f[0]++;
      cov_onhkyn1ds().s[1]++;
      return new Date();
    }
  },
  updated_at: {
    type: Date,
    default: () => {
      /* istanbul ignore next */
      cov_onhkyn1ds().f[1]++;
      cov_onhkyn1ds().s[2]++;
      return new Date();
    }
  }
}));
/* istanbul ignore next */
cov_onhkyn1ds().s[3]++;
KeyRotationHistorySchema.index.findByCampusId = {
  by: "campus_id"
};
/* istanbul ignore next */
cov_onhkyn1ds().s[4]++;
KeyRotationHistorySchema.index.findByKeyType = {
  by: "key_type"
};
/* istanbul ignore next */
cov_onhkyn1ds().s[5]++;
KeyRotationHistorySchema.index.findByStatus = {
  by: "rotation_status"
};
/* istanbul ignore next */
cov_onhkyn1ds().s[6]++;
KeyRotationHistorySchema.index.findByCampusIdAndKeyType = {
  by: ["campus_id", "key_type"]
};
const KeyRotationHistory =
/* istanbul ignore next */
(cov_onhkyn1ds().s[7]++, ottoman.model("key_rotation_history", KeyRotationHistorySchema));
export class KeyRotationHistoryService {
  static async createRotationRecord(data) {
    /* istanbul ignore next */
    cov_onhkyn1ds().f[2]++;
    cov_onhkyn1ds().s[8]++;
    return await KeyRotationHistory.create(Object.assign(Object.assign({}, data), {
      created_at: new Date(),
      updated_at: new Date()
    }));
  }
  static async getRotationHistory(campus_id) {
    /* istanbul ignore next */
    cov_onhkyn1ds().f[3]++;
    const history =
    /* istanbul ignore next */
    (cov_onhkyn1ds().s[9]++, await KeyRotationHistory.find({
      campus_id
    }));
    /* istanbul ignore next */
    cov_onhkyn1ds().s[10]++;
    return /* istanbul ignore next */(cov_onhkyn1ds().b[0][0]++, history.rows) ||
    /* istanbul ignore next */
    (cov_onhkyn1ds().b[0][1]++, []);
  }
  static async getLastRotationDate(campus_id, key_type) {
    /* istanbul ignore next */
    cov_onhkyn1ds().f[4]++;
    var _a;
    const lastRotation =
    /* istanbul ignore next */
    (cov_onhkyn1ds().s[11]++, await KeyRotationHistory.find({
      campus_id,
      key_type,
      rotation_status: "completed"
    }));
    const rotations =
    /* istanbul ignore next */
    (cov_onhkyn1ds().s[12]++,
    /* istanbul ignore next */
    (cov_onhkyn1ds().b[1][0]++, lastRotation.rows) ||
    /* istanbul ignore next */
    (cov_onhkyn1ds().b[1][1]++, []));
    /* istanbul ignore next */
    cov_onhkyn1ds().s[13]++;
    if (rotations.length === 0) {
      /* istanbul ignore next */
      cov_onhkyn1ds().b[2][0]++;
      cov_onhkyn1ds().s[14]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_onhkyn1ds().b[2][1]++;
    }
    const sortedRotations =
    /* istanbul ignore next */
    (cov_onhkyn1ds().s[15]++, rotations.sort((a, b) => {
      /* istanbul ignore next */
      cov_onhkyn1ds().f[5]++;
      cov_onhkyn1ds().s[16]++;
      return new Date(b.created_at).getTime() - new Date(a.created_at).getTime();
    }));
    /* istanbul ignore next */
    cov_onhkyn1ds().s[17]++;
    return /* istanbul ignore next */(cov_onhkyn1ds().b[3][0]++,
    /* istanbul ignore next */
    (cov_onhkyn1ds().b[5][0]++, (_a = sortedRotations[0]) === null) ||
    /* istanbul ignore next */
    (cov_onhkyn1ds().b[5][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_onhkyn1ds().b[4][0]++, void 0) :
    /* istanbul ignore next */
    (cov_onhkyn1ds().b[4][1]++, _a.rotation_date)) ||
    /* istanbul ignore next */
    (cov_onhkyn1ds().b[3][1]++, null);
  }
  static async updateRotationStatus(id, status, verification_status) {
    /* istanbul ignore next */
    cov_onhkyn1ds().f[6]++;
    const updateData =
    /* istanbul ignore next */
    (cov_onhkyn1ds().s[18]++, {
      rotation_status: status,
      updated_at: new Date()
    });
    /* istanbul ignore next */
    cov_onhkyn1ds().s[19]++;
    if (verification_status) {
      /* istanbul ignore next */
      cov_onhkyn1ds().b[6][0]++;
      cov_onhkyn1ds().s[20]++;
      updateData.verification_status = verification_status;
    } else
    /* istanbul ignore next */
    {
      cov_onhkyn1ds().b[6][1]++;
    }
    cov_onhkyn1ds().s[21]++;
    return await KeyRotationHistory.updateById(id, updateData);
  }
  static async getRotationStatistics() {
    /* istanbul ignore next */
    cov_onhkyn1ds().f[7]++;
    const allRotations =
    /* istanbul ignore next */
    (cov_onhkyn1ds().s[22]++, await KeyRotationHistory.find({}));
    const rotations =
    /* istanbul ignore next */
    (cov_onhkyn1ds().s[23]++,
    /* istanbul ignore next */
    (cov_onhkyn1ds().b[7][0]++, allRotations.rows) ||
    /* istanbul ignore next */
    (cov_onhkyn1ds().b[7][1]++, []));
    const total =
    /* istanbul ignore next */
    (cov_onhkyn1ds().s[24]++, rotations.length);
    const successful =
    /* istanbul ignore next */
    (cov_onhkyn1ds().s[25]++, rotations.filter(r => {
      /* istanbul ignore next */
      cov_onhkyn1ds().f[8]++;
      cov_onhkyn1ds().s[26]++;
      return r.rotation_status === "completed";
    }).length);
    const failed =
    /* istanbul ignore next */
    (cov_onhkyn1ds().s[27]++, rotations.filter(r => {
      /* istanbul ignore next */
      cov_onhkyn1ds().f[9]++;
      cov_onhkyn1ds().s[28]++;
      return r.rotation_status === "failed";
    }).length);
    const pending =
    /* istanbul ignore next */
    (cov_onhkyn1ds().s[29]++, rotations.filter(r => {
      /* istanbul ignore next */
      cov_onhkyn1ds().f[10]++;
      cov_onhkyn1ds().s[30]++;
      return r.rotation_status === "pending";
    }).length);
    const lastRotation =
    /* istanbul ignore next */
    (cov_onhkyn1ds().s[31]++, rotations.length > 0 ?
    /* istanbul ignore next */
    (cov_onhkyn1ds().b[8][0]++, rotations.sort((a, b) => {
      /* istanbul ignore next */
      cov_onhkyn1ds().f[11]++;
      cov_onhkyn1ds().s[32]++;
      return new Date(b.created_at).getTime() - new Date(a.created_at).getTime();
    })[0]) :
    /* istanbul ignore next */
    (cov_onhkyn1ds().b[8][1]++, null));
    // Calculate average rotation interval
    const completedRotations =
    /* istanbul ignore next */
    (cov_onhkyn1ds().s[33]++, rotations.filter(r => {
      /* istanbul ignore next */
      cov_onhkyn1ds().f[12]++;
      cov_onhkyn1ds().s[34]++;
      return r.rotation_status === "completed";
    }).sort((a, b) => {
      /* istanbul ignore next */
      cov_onhkyn1ds().f[13]++;
      cov_onhkyn1ds().s[35]++;
      return new Date(a.created_at).getTime() - new Date(b.created_at).getTime();
    }));
    let avgIntervalDays =
    /* istanbul ignore next */
    (cov_onhkyn1ds().s[36]++, 0);
    /* istanbul ignore next */
    cov_onhkyn1ds().s[37]++;
    if (completedRotations.length > 1) {
      /* istanbul ignore next */
      cov_onhkyn1ds().b[9][0]++;
      const intervals =
      /* istanbul ignore next */
      (cov_onhkyn1ds().s[38]++, []);
      /* istanbul ignore next */
      cov_onhkyn1ds().s[39]++;
      for (let i =
      /* istanbul ignore next */
      (cov_onhkyn1ds().s[40]++, 1); i < completedRotations.length; i++) {
        const prevDate =
        /* istanbul ignore next */
        (cov_onhkyn1ds().s[41]++, new Date(completedRotations[i - 1].created_at));
        const currentDate =
        /* istanbul ignore next */
        (cov_onhkyn1ds().s[42]++, new Date(completedRotations[i].created_at));
        const intervalDays =
        /* istanbul ignore next */
        (cov_onhkyn1ds().s[43]++, (currentDate.getTime() - prevDate.getTime()) / (1000 * 60 * 60 * 24));
        /* istanbul ignore next */
        cov_onhkyn1ds().s[44]++;
        intervals.push(intervalDays);
      }
      /* istanbul ignore next */
      cov_onhkyn1ds().s[45]++;
      avgIntervalDays = intervals.reduce((sum, interval) => {
        /* istanbul ignore next */
        cov_onhkyn1ds().f[14]++;
        cov_onhkyn1ds().s[46]++;
        return sum + interval;
      }, 0) / intervals.length;
    } else
    /* istanbul ignore next */
    {
      cov_onhkyn1ds().b[9][1]++;
    }
    cov_onhkyn1ds().s[47]++;
    return {
      total_rotations: total,
      successful_rotations: successful,
      failed_rotations: failed,
      pending_rotations: pending,
      last_rotation_date:
      /* istanbul ignore next */
      (cov_onhkyn1ds().b[10][0]++,
      /* istanbul ignore next */
      (cov_onhkyn1ds().b[12][0]++, lastRotation === null) ||
      /* istanbul ignore next */
      (cov_onhkyn1ds().b[12][1]++, lastRotation === void 0) ?
      /* istanbul ignore next */
      (cov_onhkyn1ds().b[11][0]++, void 0) :
      /* istanbul ignore next */
      (cov_onhkyn1ds().b[11][1]++, lastRotation.rotation_date)) ||
      /* istanbul ignore next */
      (cov_onhkyn1ds().b[10][1]++, null),
      avg_rotation_interval_days: avgIntervalDays
    };
  }
}
export { KeyRotationHistory };