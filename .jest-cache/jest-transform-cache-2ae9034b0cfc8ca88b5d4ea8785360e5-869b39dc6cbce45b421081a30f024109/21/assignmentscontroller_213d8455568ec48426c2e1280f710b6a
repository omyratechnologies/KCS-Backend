3584569bd1b613b9e21c11f7e9594e66
/* istanbul ignore next */
function cov_es6dr5dvi() {
  var path = "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/controllers/assignments.controller.ts";
  var hash = "fed8311ea37dbb3af51017bb387b0670ebb64a57";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/controllers/assignments.controller.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 21
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "1": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 26
        }
      },
      "2": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 39,
          column: 2
        }
      },
      "3": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "4": {
        start: {
          line: 15,
          column: 26
        },
        end: {
          line: 15,
          column: 46
        }
      },
      "5": {
        start: {
          line: 16,
          column: 24
        },
        end: {
          line: 16,
          column: 42
        }
      },
      "6": {
        start: {
          line: 17,
          column: 21
        },
        end: {
          line: 17,
          column: 41
        }
      },
      "7": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 24,
          column: 9
        }
      },
      "8": {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 23,
          column: 20
        }
      },
      "9": {
        start: {
          line: 25,
          column: 23
        },
        end: {
          line: 25,
          column: 137
        }
      },
      "10": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 30,
          column: 16
        }
      },
      "11": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 59
        }
      },
      "12": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 37,
          column: 16
        }
      },
      "13": {
        start: {
          line: 40,
          column: 0
        },
        end: {
          line: 145,
          column: 2
        }
      },
      "14": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 144,
          column: 5
        }
      },
      "15": {
        start: {
          line: 42,
          column: 26
        },
        end: {
          line: 42,
          column: 46
        }
      },
      "16": {
        start: {
          line: 43,
          column: 94
        },
        end: {
          line: 43,
          column: 109
        }
      },
      "17": {
        start: {
          line: 45,
          column: 31
        },
        end: {
          line: 45,
          column: 92
        }
      },
      "18": {
        start: {
          line: 47,
          column: 34
        },
        end: {
          line: 47,
          column: 53
        }
      },
      "19": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 51,
          column: 9
        }
      },
      "20": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 111
        }
      },
      "21": {
        start: {
          line: 50,
          column: 77
        },
        end: {
          line: 50,
          column: 109
        }
      },
      "22": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 54,
          column: 9
        }
      },
      "23": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 115
        }
      },
      "24": {
        start: {
          line: 53,
          column: 77
        },
        end: {
          line: 53,
          column: 113
        }
      },
      "25": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "26": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 112
        }
      },
      "27": {
        start: {
          line: 56,
          column: 77
        },
        end: {
          line: 56,
          column: 110
        }
      },
      "28": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 61,
          column: 9
        }
      },
      "29": {
        start: {
          line: 59,
          column: 29
        },
        end: {
          line: 59,
          column: 48
        }
      },
      "30": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 120
        }
      },
      "31": {
        start: {
          line: 60,
          column: 77
        },
        end: {
          line: 60,
          column: 118
        }
      },
      "32": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 65,
          column: 9
        }
      },
      "33": {
        start: {
          line: 63,
          column: 27
        },
        end: {
          line: 63,
          column: 44
        }
      },
      "34": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 118
        }
      },
      "35": {
        start: {
          line: 64,
          column: 77
        },
        end: {
          line: 64,
          column: 116
        }
      },
      "36": {
        start: {
          line: 67,
          column: 28
        },
        end: {
          line: 67,
          column: 38
        }
      },
      "37": {
        start: {
          line: 68,
          column: 34
        },
        end: {
          line: 68,
          column: 122
        }
      },
      "38": {
        start: {
          line: 68,
          column: 77
        },
        end: {
          line: 68,
          column: 121
        }
      },
      "39": {
        start: {
          line: 69,
          column: 35
        },
        end: {
          line: 69,
          column: 122
        }
      },
      "40": {
        start: {
          line: 69,
          column: 78
        },
        end: {
          line: 69,
          column: 121
        }
      },
      "41": {
        start: {
          line: 71,
          column: 31
        },
        end: {
          line: 71,
          column: 32
        }
      },
      "42": {
        start: {
          line: 72,
          column: 29
        },
        end: {
          line: 72,
          column: 30
        }
      },
      "43": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 85,
          column: 9
        }
      },
      "44": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 81,
          column: 13
        }
      },
      "45": {
        start: {
          line: 76,
          column: 36
        },
        end: {
          line: 76,
          column: 107
        }
      },
      "46": {
        start: {
          line: 77,
          column: 16
        },
        end: {
          line: 77,
          column: 55
        }
      },
      "47": {
        start: {
          line: 79,
          column: 44
        },
        end: {
          line: 79,
          column: 118
        }
      },
      "48": {
        start: {
          line: 79,
          column: 72
        },
        end: {
          line: 79,
          column: 117
        }
      },
      "49": {
        start: {
          line: 80,
          column: 16
        },
        end: {
          line: 80,
          column: 61
        }
      },
      "50": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 72
        }
      },
      "51": {
        start: {
          line: 87,
          column: 24
        },
        end: {
          line: 87,
          column: 50
        }
      },
      "52": {
        start: {
          line: 88,
          column: 25
        },
        end: {
          line: 88,
          column: 53
        }
      },
      "53": {
        start: {
          line: 89,
          column: 23
        },
        end: {
          line: 89,
          column: 47
        }
      },
      "54": {
        start: {
          line: 90,
          column: 37
        },
        end: {
          line: 90,
          column: 89
        }
      },
      "55": {
        start: {
          line: 92,
          column: 36
        },
        end: {
          line: 106,
          column: 11
        }
      },
      "56": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 105,
          column: 13
        }
      },
      "57": {
        start: {
          line: 95,
          column: 36
        },
        end: {
          line: 95,
          column: 107
        }
      },
      "58": {
        start: {
          line: 96,
          column: 16
        },
        end: {
          line: 99,
          column: 107
        }
      },
      "59": {
        start: {
          line: 96,
          column: 150
        },
        end: {
          line: 96,
          column: 195
        }
      },
      "60": {
        start: {
          line: 97,
          column: 76
        },
        end: {
          line: 97,
          column: 121
        }
      },
      "61": {
        start: {
          line: 102,
          column: 16
        },
        end: {
          line: 102,
          column: 83
        }
      },
      "62": {
        start: {
          line: 103,
          column: 16
        },
        end: {
          line: 104,
          column: 107
        }
      },
      "63": {
        start: {
          line: 108,
          column: 38
        },
        end: {
          line: 110,
          column: 15
        }
      },
      "64": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 136,
          column: 11
        }
      },
      "65": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 74
        }
      },
      "66": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 143,
          column: 16
        }
      },
      "67": {
        start: {
          line: 146,
          column: 0
        },
        end: {
          line: 164,
          column: 2
        }
      },
      "68": {
        start: {
          line: 147,
          column: 4
        },
        end: {
          line: 163,
          column: 5
        }
      },
      "69": {
        start: {
          line: 148,
          column: 21
        },
        end: {
          line: 148,
          column: 41
        }
      },
      "70": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 155,
          column: 11
        }
      },
      "71": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 158,
          column: 77
        }
      },
      "72": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 162,
          column: 16
        }
      },
      "73": {
        start: {
          line: 165,
          column: 0
        },
        end: {
          line: 274,
          column: 2
        }
      },
      "74": {
        start: {
          line: 166,
          column: 4
        },
        end: {
          line: 273,
          column: 5
        }
      },
      "75": {
        start: {
          line: 167,
          column: 26
        },
        end: {
          line: 167,
          column: 46
        }
      },
      "76": {
        start: {
          line: 168,
          column: 49
        },
        end: {
          line: 168,
          column: 64
        }
      },
      "77": {
        start: {
          line: 170,
          column: 31
        },
        end: {
          line: 170,
          column: 92
        }
      },
      "78": {
        start: {
          line: 172,
          column: 34
        },
        end: {
          line: 172,
          column: 48
        }
      },
      "79": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 175,
          column: 9
        }
      },
      "80": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 174,
          column: 111
        }
      },
      "81": {
        start: {
          line: 174,
          column: 77
        },
        end: {
          line: 174,
          column: 109
        }
      },
      "82": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 178,
          column: 9
        }
      },
      "83": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 177,
          column: 115
        }
      },
      "84": {
        start: {
          line: 177,
          column: 77
        },
        end: {
          line: 177,
          column: 113
        }
      },
      "85": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 205,
          column: 9
        }
      },
      "86": {
        start: {
          line: 181,
          column: 32
        },
        end: {
          line: 181,
          column: 42
        }
      },
      "87": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 203,
          column: 13
        }
      },
      "88": {
        start: {
          line: 185,
          column: 20
        },
        end: {
          line: 185,
          column: 96
        }
      },
      "89": {
        start: {
          line: 186,
          column: 20
        },
        end: {
          line: 186,
          column: 26
        }
      },
      "90": {
        start: {
          line: 189,
          column: 20
        },
        end: {
          line: 189,
          column: 97
        }
      },
      "91": {
        start: {
          line: 190,
          column: 20
        },
        end: {
          line: 190,
          column: 26
        }
      },
      "92": {
        start: {
          line: 193,
          column: 20
        },
        end: {
          line: 193,
          column: 97
        }
      },
      "93": {
        start: {
          line: 194,
          column: 20
        },
        end: {
          line: 194,
          column: 26
        }
      },
      "94": {
        start: {
          line: 197,
          column: 20
        },
        end: {
          line: 197,
          column: 98
        }
      },
      "95": {
        start: {
          line: 198,
          column: 20
        },
        end: {
          line: 198,
          column: 26
        }
      },
      "96": {
        start: {
          line: 201,
          column: 20
        },
        end: {
          line: 201,
          column: 97
        }
      },
      "97": {
        start: {
          line: 204,
          column: 12
        },
        end: {
          line: 204,
          column: 129
        }
      },
      "98": {
        start: {
          line: 204,
          column: 77
        },
        end: {
          line: 204,
          column: 127
        }
      },
      "99": {
        start: {
          line: 207,
          column: 28
        },
        end: {
          line: 207,
          column: 38
        }
      },
      "100": {
        start: {
          line: 208,
          column: 34
        },
        end: {
          line: 208,
          column: 122
        }
      },
      "101": {
        start: {
          line: 208,
          column: 77
        },
        end: {
          line: 208,
          column: 121
        }
      },
      "102": {
        start: {
          line: 209,
          column: 35
        },
        end: {
          line: 209,
          column: 122
        }
      },
      "103": {
        start: {
          line: 209,
          column: 78
        },
        end: {
          line: 209,
          column: 121
        }
      },
      "104": {
        start: {
          line: 211,
          column: 31
        },
        end: {
          line: 211,
          column: 32
        }
      },
      "105": {
        start: {
          line: 212,
          column: 29
        },
        end: {
          line: 212,
          column: 30
        }
      },
      "106": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 223,
          column: 9
        }
      },
      "107": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 219,
          column: 13
        }
      },
      "108": {
        start: {
          line: 215,
          column: 36
        },
        end: {
          line: 215,
          column: 107
        }
      },
      "109": {
        start: {
          line: 216,
          column: 16
        },
        end: {
          line: 216,
          column: 55
        }
      },
      "110": {
        start: {
          line: 217,
          column: 44
        },
        end: {
          line: 217,
          column: 118
        }
      },
      "111": {
        start: {
          line: 217,
          column: 72
        },
        end: {
          line: 217,
          column: 117
        }
      },
      "112": {
        start: {
          line: 218,
          column: 16
        },
        end: {
          line: 218,
          column: 61
        }
      },
      "113": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 222,
          column: 86
        }
      },
      "114": {
        start: {
          line: 225,
          column: 38
        },
        end: {
          line: 227,
          column: 15
        }
      },
      "115": {
        start: {
          line: 229,
          column: 33
        },
        end: {
          line: 242,
          column: 11
        }
      },
      "116": {
        start: {
          line: 229,
          column: 94
        },
        end: {
          line: 229,
          column: 106
        }
      },
      "117": {
        start: {
          line: 230,
          column: 39
        },
        end: {
          line: 230,
          column: 100
        }
      },
      "118": {
        start: {
          line: 230,
          column: 73
        },
        end: {
          line: 230,
          column: 99
        }
      },
      "119": {
        start: {
          line: 231,
          column: 37
        },
        end: {
          line: 231,
          column: 38
        }
      },
      "120": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 235,
          column: 13
        }
      },
      "121": {
        start: {
          line: 233,
          column: 36
        },
        end: {
          line: 233,
          column: 107
        }
      },
      "122": {
        start: {
          line: 234,
          column: 16
        },
        end: {
          line: 234,
          column: 57
        }
      },
      "123": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 241,
          column: 14
        }
      },
      "124": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 265,
          column: 11
        }
      },
      "125": {
        start: {
          line: 268,
          column: 8
        },
        end: {
          line: 268,
          column: 69
        }
      },
      "126": {
        start: {
          line: 269,
          column: 8
        },
        end: {
          line: 272,
          column: 16
        }
      },
      "127": {
        start: {
          line: 276,
          column: 0
        },
        end: {
          line: 320,
          column: 2
        }
      },
      "128": {
        start: {
          line: 277,
          column: 4
        },
        end: {
          line: 319,
          column: 5
        }
      },
      "129": {
        start: {
          line: 278,
          column: 24
        },
        end: {
          line: 278,
          column: 42
        }
      },
      "130": {
        start: {
          line: 279,
          column: 50
        },
        end: {
          line: 279,
          column: 65
        }
      },
      "131": {
        start: {
          line: 280,
          column: 28
        },
        end: {
          line: 280,
          column: 80
        }
      },
      "132": {
        start: {
          line: 282,
          column: 34
        },
        end: {
          line: 282,
          column: 45
        }
      },
      "133": {
        start: {
          line: 283,
          column: 8
        },
        end: {
          line: 285,
          column: 9
        }
      },
      "134": {
        start: {
          line: 284,
          column: 12
        },
        end: {
          line: 284,
          column: 93
        }
      },
      "135": {
        start: {
          line: 284,
          column: 68
        },
        end: {
          line: 284,
          column: 91
        }
      },
      "136": {
        start: {
          line: 287,
          column: 24
        },
        end: {
          line: 287,
          column: 50
        }
      },
      "137": {
        start: {
          line: 288,
          column: 25
        },
        end: {
          line: 288,
          column: 53
        }
      },
      "138": {
        start: {
          line: 289,
          column: 23
        },
        end: {
          line: 289,
          column: 47
        }
      },
      "139": {
        start: {
          line: 290,
          column: 37
        },
        end: {
          line: 290,
          column: 89
        }
      },
      "140": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 311,
          column: 11
        }
      },
      "141": {
        start: {
          line: 292,
          column: 67
        },
        end: {
          line: 298,
          column: 20
        }
      },
      "142": {
        start: {
          line: 314,
          column: 8
        },
        end: {
          line: 314,
          column: 68
        }
      },
      "143": {
        start: {
          line: 315,
          column: 8
        },
        end: {
          line: 318,
          column: 16
        }
      },
      "144": {
        start: {
          line: 321,
          column: 0
        },
        end: {
          line: 366,
          column: 2
        }
      },
      "145": {
        start: {
          line: 322,
          column: 4
        },
        end: {
          line: 365,
          column: 5
        }
      },
      "146": {
        start: {
          line: 323,
          column: 34
        },
        end: {
          line: 323,
          column: 49
        }
      },
      "147": {
        start: {
          line: 324,
          column: 39
        },
        end: {
          line: 324,
          column: 54
        }
      },
      "148": {
        start: {
          line: 325,
          column: 42
        },
        end: {
          line: 328,
          column: 10
        }
      },
      "149": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 334,
          column: 9
        }
      },
      "150": {
        start: {
          line: 330,
          column: 12
        },
        end: {
          line: 333,
          column: 20
        }
      },
      "151": {
        start: {
          line: 336,
          column: 34
        },
        end: {
          line: 336,
          column: 45
        }
      },
      "152": {
        start: {
          line: 337,
          column: 8
        },
        end: {
          line: 339,
          column: 9
        }
      },
      "153": {
        start: {
          line: 338,
          column: 12
        },
        end: {
          line: 338,
          column: 86
        }
      },
      "154": {
        start: {
          line: 338,
          column: 60
        },
        end: {
          line: 338,
          column: 84
        }
      },
      "155": {
        start: {
          line: 341,
          column: 22
        },
        end: {
          line: 352,
          column: 9
        }
      },
      "156": {
        start: {
          line: 345,
          column: 54
        },
        end: {
          line: 345,
          column: 95
        }
      },
      "157": {
        start: {
          line: 348,
          column: 35
        },
        end: {
          line: 348,
          column: 76
        }
      },
      "158": {
        start: {
          line: 349,
          column: 40
        },
        end: {
          line: 349,
          column: 60
        }
      },
      "159": {
        start: {
          line: 350,
          column: 54
        },
        end: {
          line: 350,
          column: 95
        }
      },
      "160": {
        start: {
          line: 353,
          column: 8
        },
        end: {
          line: 357,
          column: 11
        }
      },
      "161": {
        start: {
          line: 360,
          column: 8
        },
        end: {
          line: 360,
          column: 71
        }
      },
      "162": {
        start: {
          line: 361,
          column: 8
        },
        end: {
          line: 364,
          column: 16
        }
      },
      "163": {
        start: {
          line: 367,
          column: 0
        },
        end: {
          line: 385,
          column: 2
        }
      },
      "164": {
        start: {
          line: 368,
          column: 4
        },
        end: {
          line: 384,
          column: 5
        }
      },
      "165": {
        start: {
          line: 369,
          column: 34
        },
        end: {
          line: 369,
          column: 49
        }
      },
      "166": {
        start: {
          line: 370,
          column: 36
        },
        end: {
          line: 370,
          column: 56
        }
      },
      "167": {
        start: {
          line: 371,
          column: 23
        },
        end: {
          line: 371,
          column: 99
        }
      },
      "168": {
        start: {
          line: 372,
          column: 8
        },
        end: {
          line: 376,
          column: 11
        }
      },
      "169": {
        start: {
          line: 379,
          column: 8
        },
        end: {
          line: 379,
          column: 58
        }
      },
      "170": {
        start: {
          line: 380,
          column: 8
        },
        end: {
          line: 383,
          column: 16
        }
      },
      "171": {
        start: {
          line: 386,
          column: 0
        },
        end: {
          line: 419,
          column: 2
        }
      },
      "172": {
        start: {
          line: 387,
          column: 4
        },
        end: {
          line: 418,
          column: 5
        }
      },
      "173": {
        start: {
          line: 388,
          column: 24
        },
        end: {
          line: 388,
          column: 42
        }
      },
      "174": {
        start: {
          line: 389,
          column: 28
        },
        end: {
          line: 389,
          column: 80
        }
      },
      "175": {
        start: {
          line: 390,
          column: 8
        },
        end: {
          line: 410,
          column: 11
        }
      },
      "176": {
        start: {
          line: 391,
          column: 58
        },
        end: {
          line: 397,
          column: 20
        }
      },
      "177": {
        start: {
          line: 413,
          column: 8
        },
        end: {
          line: 413,
          column: 77
        }
      },
      "178": {
        start: {
          line: 414,
          column: 8
        },
        end: {
          line: 417,
          column: 16
        }
      },
      "179": {
        start: {
          line: 421,
          column: 0
        },
        end: {
          line: 454,
          column: 2
        }
      },
      "180": {
        start: {
          line: 422,
          column: 4
        },
        end: {
          line: 453,
          column: 5
        }
      },
      "181": {
        start: {
          line: 423,
          column: 24
        },
        end: {
          line: 423,
          column: 42
        }
      },
      "182": {
        start: {
          line: 424,
          column: 26
        },
        end: {
          line: 424,
          column: 46
        }
      },
      "183": {
        start: {
          line: 425,
          column: 96
        },
        end: {
          line: 425,
          column: 111
        }
      },
      "184": {
        start: {
          line: 426,
          column: 24
        },
        end: {
          line: 435,
          column: 9
        }
      },
      "185": {
        start: {
          line: 437,
          column: 23
        },
        end: {
          line: 444,
          column: 9
        }
      },
      "186": {
        start: {
          line: 445,
          column: 8
        },
        end: {
          line: 445,
          column: 32
        }
      },
      "187": {
        start: {
          line: 448,
          column: 8
        },
        end: {
          line: 448,
          column: 68
        }
      },
      "188": {
        start: {
          line: 449,
          column: 8
        },
        end: {
          line: 452,
          column: 16
        }
      },
      "189": {
        start: {
          line: 455,
          column: 0
        },
        end: {
          line: 522,
          column: 2
        }
      },
      "190": {
        start: {
          line: 456,
          column: 4
        },
        end: {
          line: 521,
          column: 5
        }
      },
      "191": {
        start: {
          line: 457,
          column: 24
        },
        end: {
          line: 457,
          column: 42
        }
      },
      "192": {
        start: {
          line: 458,
          column: 34
        },
        end: {
          line: 458,
          column: 49
        }
      },
      "193": {
        start: {
          line: 460,
          column: 25
        },
        end: {
          line: 460,
          column: 29
        }
      },
      "194": {
        start: {
          line: 461,
          column: 25
        },
        end: {
          line: 461,
          column: 29
        }
      },
      "195": {
        start: {
          line: 462,
          column: 8
        },
        end: {
          line: 471,
          column: 9
        }
      },
      "196": {
        start: {
          line: 463,
          column: 12
        },
        end: {
          line: 463,
          column: 77
        }
      },
      "197": {
        start: {
          line: 464,
          column: 12
        },
        end: {
          line: 467,
          column: 13
        }
      },
      "198": {
        start: {
          line: 465,
          column: 36
        },
        end: {
          line: 465,
          column: 107
        }
      },
      "199": {
        start: {
          line: 466,
          column: 16
        },
        end: {
          line: 466,
          column: 84
        }
      },
      "200": {
        start: {
          line: 466,
          column: 53
        },
        end: {
          line: 466,
          column: 74
        }
      },
      "201": {
        start: {
          line: 470,
          column: 12
        },
        end: {
          line: 470,
          column: 84
        }
      },
      "202": {
        start: {
          line: 472,
          column: 8
        },
        end: {
          line: 477,
          column: 9
        }
      },
      "203": {
        start: {
          line: 473,
          column: 12
        },
        end: {
          line: 476,
          column: 20
        }
      },
      "204": {
        start: {
          line: 478,
          column: 28
        },
        end: {
          line: 478,
          column: 38
        }
      },
      "205": {
        start: {
          line: 479,
          column: 24
        },
        end: {
          line: 479,
          column: 53
        }
      },
      "206": {
        start: {
          line: 480,
          column: 29
        },
        end: {
          line: 480,
          column: 107
        }
      },
      "207": {
        start: {
          line: 481,
          column: 21
        },
        end: {
          line: 481,
          column: 30
        }
      },
      "208": {
        start: {
          line: 482,
          column: 8
        },
        end: {
          line: 487,
          column: 9
        }
      },
      "209": {
        start: {
          line: 483,
          column: 12
        },
        end: {
          line: 483,
          column: 106
        }
      },
      "210": {
        start: {
          line: 485,
          column: 13
        },
        end: {
          line: 487,
          column: 9
        }
      },
      "211": {
        start: {
          line: 486,
          column: 12
        },
        end: {
          line: 486,
          column: 31
        }
      },
      "212": {
        start: {
          line: 489,
          column: 37
        },
        end: {
          line: 500,
          column: 9
        }
      },
      "213": {
        start: {
          line: 501,
          column: 8
        },
        end: {
          line: 513,
          column: 11
        }
      },
      "214": {
        start: {
          line: 516,
          column: 8
        },
        end: {
          line: 516,
          column: 75
        }
      },
      "215": {
        start: {
          line: 517,
          column: 8
        },
        end: {
          line: 520,
          column: 16
        }
      },
      "216": {
        start: {
          line: 523,
          column: 0
        },
        end: {
          line: 577,
          column: 2
        }
      },
      "217": {
        start: {
          line: 524,
          column: 4
        },
        end: {
          line: 576,
          column: 5
        }
      },
      "218": {
        start: {
          line: 525,
          column: 24
        },
        end: {
          line: 525,
          column: 42
        }
      },
      "219": {
        start: {
          line: 526,
          column: 34
        },
        end: {
          line: 526,
          column: 49
        }
      },
      "220": {
        start: {
          line: 527,
          column: 21
        },
        end: {
          line: 527,
          column: 41
        }
      },
      "221": {
        start: {
          line: 529,
          column: 27
        },
        end: {
          line: 529,
          column: 78
        }
      },
      "222": {
        start: {
          line: 530,
          column: 8
        },
        end: {
          line: 535,
          column: 9
        }
      },
      "223": {
        start: {
          line: 531,
          column: 12
        },
        end: {
          line: 534,
          column: 20
        }
      },
      "224": {
        start: {
          line: 537,
          column: 36
        },
        end: {
          line: 537,
          column: 107
        }
      },
      "225": {
        start: {
          line: 538,
          column: 35
        },
        end: {
          line: 538,
          column: 89
        }
      },
      "226": {
        start: {
          line: 538,
          column: 67
        },
        end: {
          line: 538,
          column: 88
        }
      },
      "227": {
        start: {
          line: 539,
          column: 8
        },
        end: {
          line: 544,
          column: 9
        }
      },
      "228": {
        start: {
          line: 540,
          column: 12
        },
        end: {
          line: 543,
          column: 20
        }
      },
      "229": {
        start: {
          line: 546,
          column: 28
        },
        end: {
          line: 546,
          column: 38
        }
      },
      "230": {
        start: {
          line: 547,
          column: 24
        },
        end: {
          line: 547,
          column: 53
        }
      },
      "231": {
        start: {
          line: 548,
          column: 23
        },
        end: {
          line: 548,
          column: 44
        }
      },
      "232": {
        start: {
          line: 549,
          column: 8
        },
        end: {
          line: 555,
          column: 9
        }
      },
      "233": {
        start: {
          line: 551,
          column: 12
        },
        end: {
          line: 554,
          column: 20
        }
      },
      "234": {
        start: {
          line: 556,
          column: 31
        },
        end: {
          line: 561,
          column: 9
        }
      },
      "235": {
        start: {
          line: 562,
          column: 23
        },
        end: {
          line: 562,
          column: 99
        }
      },
      "236": {
        start: {
          line: 563,
          column: 8
        },
        end: {
          line: 568,
          column: 16
        }
      },
      "237": {
        start: {
          line: 571,
          column: 8
        },
        end: {
          line: 571,
          column: 61
        }
      },
      "238": {
        start: {
          line: 572,
          column: 8
        },
        end: {
          line: 575,
          column: 16
        }
      },
      "239": {
        start: {
          line: 578,
          column: 0
        },
        end: {
          line: 609,
          column: 2
        }
      },
      "240": {
        start: {
          line: 579,
          column: 4
        },
        end: {
          line: 608,
          column: 5
        }
      },
      "241": {
        start: {
          line: 580,
          column: 24
        },
        end: {
          line: 580,
          column: 42
        }
      },
      "242": {
        start: {
          line: 581,
          column: 26
        },
        end: {
          line: 581,
          column: 46
        }
      },
      "243": {
        start: {
          line: 583,
          column: 26
        },
        end: {
          line: 599,
          column: 9
        }
      },
      "244": {
        start: {
          line: 600,
          column: 8
        },
        end: {
          line: 600,
          column: 35
        }
      },
      "245": {
        start: {
          line: 603,
          column: 8
        },
        end: {
          line: 603,
          column: 77
        }
      },
      "246": {
        start: {
          line: 604,
          column: 8
        },
        end: {
          line: 607,
          column: 16
        }
      },
      "247": {
        start: {
          line: 610,
          column: 0
        },
        end: {
          line: 633,
          column: 2
        }
      },
      "248": {
        start: {
          line: 611,
          column: 4
        },
        end: {
          line: 632,
          column: 5
        }
      },
      "249": {
        start: {
          line: 612,
          column: 24
        },
        end: {
          line: 612,
          column: 42
        }
      },
      "250": {
        start: {
          line: 613,
          column: 26
        },
        end: {
          line: 613,
          column: 46
        }
      },
      "251": {
        start: {
          line: 614,
          column: 39
        },
        end: {
          line: 614,
          column: 54
        }
      },
      "252": {
        start: {
          line: 616,
          column: 8
        },
        end: {
          line: 624,
          column: 11
        }
      },
      "253": {
        start: {
          line: 627,
          column: 8
        },
        end: {
          line: 627,
          column: 79
        }
      },
      "254": {
        start: {
          line: 628,
          column: 8
        },
        end: {
          line: 631,
          column: 16
        }
      },
      "255": {
        start: {
          line: 635,
          column: 0
        },
        end: {
          line: 683,
          column: 2
        }
      },
      "256": {
        start: {
          line: 636,
          column: 4
        },
        end: {
          line: 682,
          column: 5
        }
      },
      "257": {
        start: {
          line: 637,
          column: 31
        },
        end: {
          line: 637,
          column: 46
        }
      },
      "258": {
        start: {
          line: 638,
          column: 26
        },
        end: {
          line: 638,
          column: 46
        }
      },
      "259": {
        start: {
          line: 639,
          column: 35
        },
        end: {
          line: 639,
          column: 50
        }
      },
      "260": {
        start: {
          line: 642,
          column: 24
        },
        end: {
          line: 642,
          column: 61
        }
      },
      "261": {
        start: {
          line: 643,
          column: 8
        },
        end: {
          line: 648,
          column: 9
        }
      },
      "262": {
        start: {
          line: 644,
          column: 12
        },
        end: {
          line: 647,
          column: 20
        }
      },
      "263": {
        start: {
          line: 650,
          column: 28
        },
        end: {
          line: 650,
          column: 30
        }
      },
      "264": {
        start: {
          line: 651,
          column: 24
        },
        end: {
          line: 656,
          column: 9
        }
      },
      "265": {
        start: {
          line: 657,
          column: 8
        },
        end: {
          line: 674,
          column: 11
        }
      },
      "266": {
        start: {
          line: 677,
          column: 8
        },
        end: {
          line: 677,
          column: 75
        }
      },
      "267": {
        start: {
          line: 678,
          column: 8
        },
        end: {
          line: 681,
          column: 16
        }
      },
      "268": {
        start: {
          line: 684,
          column: 0
        },
        end: {
          line: 714,
          column: 2
        }
      },
      "269": {
        start: {
          line: 685,
          column: 4
        },
        end: {
          line: 713,
          column: 5
        }
      },
      "270": {
        start: {
          line: 686,
          column: 31
        },
        end: {
          line: 686,
          column: 46
        }
      },
      "271": {
        start: {
          line: 687,
          column: 27
        },
        end: {
          line: 687,
          column: 42
        }
      },
      "272": {
        start: {
          line: 689,
          column: 8
        },
        end: {
          line: 705,
          column: 11
        }
      },
      "273": {
        start: {
          line: 708,
          column: 8
        },
        end: {
          line: 708,
          column: 75
        }
      },
      "274": {
        start: {
          line: 709,
          column: 8
        },
        end: {
          line: 712,
          column: 16
        }
      },
      "275": {
        start: {
          line: 716,
          column: 0
        },
        end: {
          line: 755,
          column: 2
        }
      },
      "276": {
        start: {
          line: 717,
          column: 4
        },
        end: {
          line: 754,
          column: 5
        }
      },
      "277": {
        start: {
          line: 718,
          column: 34
        },
        end: {
          line: 718,
          column: 49
        }
      },
      "278": {
        start: {
          line: 719,
          column: 26
        },
        end: {
          line: 719,
          column: 46
        }
      },
      "279": {
        start: {
          line: 721,
          column: 27
        },
        end: {
          line: 721,
          column: 78
        }
      },
      "280": {
        start: {
          line: 722,
          column: 8
        },
        end: {
          line: 727,
          column: 9
        }
      },
      "281": {
        start: {
          line: 723,
          column: 12
        },
        end: {
          line: 726,
          column: 20
        }
      },
      "282": {
        start: {
          line: 729,
          column: 37
        },
        end: {
          line: 743,
          column: 9
        }
      },
      "283": {
        start: {
          line: 746,
          column: 8
        },
        end: {
          line: 746,
          column: 46
        }
      },
      "284": {
        start: {
          line: 749,
          column: 8
        },
        end: {
          line: 749,
          column: 65
        }
      },
      "285": {
        start: {
          line: 750,
          column: 8
        },
        end: {
          line: 753,
          column: 16
        }
      },
      "286": {
        start: {
          line: 756,
          column: 0
        },
        end: {
          line: 782,
          column: 2
        }
      },
      "287": {
        start: {
          line: 757,
          column: 4
        },
        end: {
          line: 781,
          column: 5
        }
      },
      "288": {
        start: {
          line: 758,
          column: 34
        },
        end: {
          line: 758,
          column: 49
        }
      },
      "289": {
        start: {
          line: 759,
          column: 21
        },
        end: {
          line: 759,
          column: 41
        }
      },
      "290": {
        start: {
          line: 761,
          column: 23
        },
        end: {
          line: 761,
          column: 79
        }
      },
      "291": {
        start: {
          line: 762,
          column: 8
        },
        end: {
          line: 767,
          column: 9
        }
      },
      "292": {
        start: {
          line: 763,
          column: 12
        },
        end: {
          line: 766,
          column: 20
        }
      },
      "293": {
        start: {
          line: 768,
          column: 8
        },
        end: {
          line: 773,
          column: 11
        }
      },
      "294": {
        start: {
          line: 776,
          column: 8
        },
        end: {
          line: 776,
          column: 59
        }
      },
      "295": {
        start: {
          line: 777,
          column: 8
        },
        end: {
          line: 780,
          column: 16
        }
      },
      "296": {
        start: {
          line: 783,
          column: 0
        },
        end: {
          line: 807,
          column: 2
        }
      },
      "297": {
        start: {
          line: 784,
          column: 4
        },
        end: {
          line: 806,
          column: 5
        }
      },
      "298": {
        start: {
          line: 785,
          column: 34
        },
        end: {
          line: 785,
          column: 49
        }
      },
      "299": {
        start: {
          line: 787,
          column: 24
        },
        end: {
          line: 787,
          column: 74
        }
      },
      "300": {
        start: {
          line: 788,
          column: 8
        },
        end: {
          line: 793,
          column: 9
        }
      },
      "301": {
        start: {
          line: 789,
          column: 12
        },
        end: {
          line: 792,
          column: 20
        }
      },
      "302": {
        start: {
          line: 794,
          column: 8
        },
        end: {
          line: 798,
          column: 11
        }
      },
      "303": {
        start: {
          line: 801,
          column: 8
        },
        end: {
          line: 801,
          column: 59
        }
      },
      "304": {
        start: {
          line: 802,
          column: 8
        },
        end: {
          line: 805,
          column: 16
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 13,
            column: 40
          },
          end: {
            line: 13,
            column: 41
          }
        },
        loc: {
          start: {
            line: 13,
            column: 55
          },
          end: {
            line: 39,
            column: 1
          }
        },
        line: 13
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 40,
            column: 50
          },
          end: {
            line: 40,
            column: 51
          }
        },
        loc: {
          start: {
            line: 40,
            column: 65
          },
          end: {
            line: 145,
            column: 1
          }
        },
        line: 40
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 50,
            column: 61
          },
          end: {
            line: 50,
            column: 62
          }
        },
        loc: {
          start: {
            line: 50,
            column: 77
          },
          end: {
            line: 50,
            column: 109
          }
        },
        line: 50
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 53,
            column: 61
          },
          end: {
            line: 53,
            column: 62
          }
        },
        loc: {
          start: {
            line: 53,
            column: 77
          },
          end: {
            line: 53,
            column: 113
          }
        },
        line: 53
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 56,
            column: 61
          },
          end: {
            line: 56,
            column: 62
          }
        },
        loc: {
          start: {
            line: 56,
            column: 77
          },
          end: {
            line: 56,
            column: 110
          }
        },
        line: 56
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 60,
            column: 61
          },
          end: {
            line: 60,
            column: 62
          }
        },
        loc: {
          start: {
            line: 60,
            column: 77
          },
          end: {
            line: 60,
            column: 118
          }
        },
        line: 60
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 64,
            column: 61
          },
          end: {
            line: 64,
            column: 62
          }
        },
        loc: {
          start: {
            line: 64,
            column: 77
          },
          end: {
            line: 64,
            column: 116
          }
        },
        line: 64
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 68,
            column: 61
          },
          end: {
            line: 68,
            column: 62
          }
        },
        loc: {
          start: {
            line: 68,
            column: 77
          },
          end: {
            line: 68,
            column: 121
          }
        },
        line: 68
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 69,
            column: 62
          },
          end: {
            line: 69,
            column: 63
          }
        },
        loc: {
          start: {
            line: 69,
            column: 78
          },
          end: {
            line: 69,
            column: 121
          }
        },
        line: 69
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 79,
            column: 63
          },
          end: {
            line: 79,
            column: 64
          }
        },
        loc: {
          start: {
            line: 79,
            column: 72
          },
          end: {
            line: 79,
            column: 117
          }
        },
        line: 79
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 92,
            column: 79
          },
          end: {
            line: 92,
            column: 80
          }
        },
        loc: {
          start: {
            line: 92,
            column: 101
          },
          end: {
            line: 106,
            column: 9
          }
        },
        line: 92
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 96,
            column: 141
          },
          end: {
            line: 96,
            column: 142
          }
        },
        loc: {
          start: {
            line: 96,
            column: 150
          },
          end: {
            line: 96,
            column: 195
          }
        },
        line: 96
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 97,
            column: 67
          },
          end: {
            line: 97,
            column: 68
          }
        },
        loc: {
          start: {
            line: 97,
            column: 76
          },
          end: {
            line: 97,
            column: 121
          }
        },
        line: 97
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 146,
            column: 55
          },
          end: {
            line: 146,
            column: 56
          }
        },
        loc: {
          start: {
            line: 146,
            column: 70
          },
          end: {
            line: 164,
            column: 1
          }
        },
        line: 146
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 165,
            column: 46
          },
          end: {
            line: 165,
            column: 47
          }
        },
        loc: {
          start: {
            line: 165,
            column: 61
          },
          end: {
            line: 274,
            column: 1
          }
        },
        line: 165
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 174,
            column: 61
          },
          end: {
            line: 174,
            column: 62
          }
        },
        loc: {
          start: {
            line: 174,
            column: 77
          },
          end: {
            line: 174,
            column: 109
          }
        },
        line: 174
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 177,
            column: 61
          },
          end: {
            line: 177,
            column: 62
          }
        },
        loc: {
          start: {
            line: 177,
            column: 77
          },
          end: {
            line: 177,
            column: 113
          }
        },
        line: 177
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 204,
            column: 61
          },
          end: {
            line: 204,
            column: 62
          }
        },
        loc: {
          start: {
            line: 204,
            column: 77
          },
          end: {
            line: 204,
            column: 127
          }
        },
        line: 204
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 208,
            column: 61
          },
          end: {
            line: 208,
            column: 62
          }
        },
        loc: {
          start: {
            line: 208,
            column: 77
          },
          end: {
            line: 208,
            column: 121
          }
        },
        line: 208
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 209,
            column: 62
          },
          end: {
            line: 209,
            column: 63
          }
        },
        loc: {
          start: {
            line: 209,
            column: 78
          },
          end: {
            line: 209,
            column: 121
          }
        },
        line: 209
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 217,
            column: 63
          },
          end: {
            line: 217,
            column: 64
          }
        },
        loc: {
          start: {
            line: 217,
            column: 72
          },
          end: {
            line: 217,
            column: 117
          }
        },
        line: 217
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 229,
            column: 87
          },
          end: {
            line: 229,
            column: 88
          }
        },
        loc: {
          start: {
            line: 229,
            column: 94
          },
          end: {
            line: 229,
            column: 106
          }
        },
        line: 229
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 229,
            column: 114
          },
          end: {
            line: 229,
            column: 115
          }
        },
        loc: {
          start: {
            line: 229,
            column: 135
          },
          end: {
            line: 242,
            column: 9
          }
        },
        line: 229
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 230,
            column: 66
          },
          end: {
            line: 230,
            column: 67
          }
        },
        loc: {
          start: {
            line: 230,
            column: 73
          },
          end: {
            line: 230,
            column: 99
          }
        },
        line: 230
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 276,
            column: 45
          },
          end: {
            line: 276,
            column: 46
          }
        },
        loc: {
          start: {
            line: 276,
            column: 60
          },
          end: {
            line: 320,
            column: 1
          }
        },
        line: 276
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 284,
            column: 61
          },
          end: {
            line: 284,
            column: 62
          }
        },
        loc: {
          start: {
            line: 284,
            column: 68
          },
          end: {
            line: 284,
            column: 91
          }
        },
        line: 284
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 292,
            column: 50
          },
          end: {
            line: 292,
            column: 51
          }
        },
        loc: {
          start: {
            line: 292,
            column: 67
          },
          end: {
            line: 298,
            column: 20
          }
        },
        line: 292
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 321,
            column: 48
          },
          end: {
            line: 321,
            column: 49
          }
        },
        loc: {
          start: {
            line: 321,
            column: 63
          },
          end: {
            line: 366,
            column: 1
          }
        },
        line: 321
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 338,
            column: 53
          },
          end: {
            line: 338,
            column: 54
          }
        },
        loc: {
          start: {
            line: 338,
            column: 60
          },
          end: {
            line: 338,
            column: 84
          }
        },
        line: 338
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 345,
            column: 47
          },
          end: {
            line: 345,
            column: 48
          }
        },
        loc: {
          start: {
            line: 345,
            column: 54
          },
          end: {
            line: 345,
            column: 95
          }
        },
        line: 345
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 348,
            column: 28
          },
          end: {
            line: 348,
            column: 29
          }
        },
        loc: {
          start: {
            line: 348,
            column: 35
          },
          end: {
            line: 348,
            column: 76
          }
        },
        line: 348
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 349,
            column: 28
          },
          end: {
            line: 349,
            column: 29
          }
        },
        loc: {
          start: {
            line: 349,
            column: 40
          },
          end: {
            line: 349,
            column: 60
          }
        },
        line: 349
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 350,
            column: 47
          },
          end: {
            line: 350,
            column: 48
          }
        },
        loc: {
          start: {
            line: 350,
            column: 54
          },
          end: {
            line: 350,
            column: 95
          }
        },
        line: 350
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 367,
            column: 39
          },
          end: {
            line: 367,
            column: 40
          }
        },
        loc: {
          start: {
            line: 367,
            column: 54
          },
          end: {
            line: 385,
            column: 1
          }
        },
        line: 367
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 386,
            column: 53
          },
          end: {
            line: 386,
            column: 54
          }
        },
        loc: {
          start: {
            line: 386,
            column: 68
          },
          end: {
            line: 419,
            column: 1
          }
        },
        line: 386
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 391,
            column: 41
          },
          end: {
            line: 391,
            column: 42
          }
        },
        loc: {
          start: {
            line: 391,
            column: 58
          },
          end: {
            line: 397,
            column: 20
          }
        },
        line: 391
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 421,
            column: 45
          },
          end: {
            line: 421,
            column: 46
          }
        },
        loc: {
          start: {
            line: 421,
            column: 60
          },
          end: {
            line: 454,
            column: 1
          }
        },
        line: 421
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 455,
            column: 51
          },
          end: {
            line: 455,
            column: 52
          }
        },
        loc: {
          start: {
            line: 455,
            column: 66
          },
          end: {
            line: 522,
            column: 1
          }
        },
        line: 455
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 466,
            column: 46
          },
          end: {
            line: 466,
            column: 47
          }
        },
        loc: {
          start: {
            line: 466,
            column: 53
          },
          end: {
            line: 466,
            column: 74
          }
        },
        line: 466
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 523,
            column: 40
          },
          end: {
            line: 523,
            column: 41
          }
        },
        loc: {
          start: {
            line: 523,
            column: 55
          },
          end: {
            line: 577,
            column: 1
          }
        },
        line: 523
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 538,
            column: 60
          },
          end: {
            line: 538,
            column: 61
          }
        },
        loc: {
          start: {
            line: 538,
            column: 67
          },
          end: {
            line: 538,
            column: 88
          }
        },
        line: 538
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 578,
            column: 53
          },
          end: {
            line: 578,
            column: 54
          }
        },
        loc: {
          start: {
            line: 578,
            column: 68
          },
          end: {
            line: 609,
            column: 1
          }
        },
        line: 578
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 610,
            column: 55
          },
          end: {
            line: 610,
            column: 56
          }
        },
        loc: {
          start: {
            line: 610,
            column: 70
          },
          end: {
            line: 633,
            column: 1
          }
        },
        line: 610
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 635,
            column: 51
          },
          end: {
            line: 635,
            column: 52
          }
        },
        loc: {
          start: {
            line: 635,
            column: 66
          },
          end: {
            line: 683,
            column: 1
          }
        },
        line: 635
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 684,
            column: 51
          },
          end: {
            line: 684,
            column: 52
          }
        },
        loc: {
          start: {
            line: 684,
            column: 66
          },
          end: {
            line: 714,
            column: 1
          }
        },
        line: 684
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 716,
            column: 41
          },
          end: {
            line: 716,
            column: 42
          }
        },
        loc: {
          start: {
            line: 716,
            column: 56
          },
          end: {
            line: 755,
            column: 1
          }
        },
        line: 716
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 756,
            column: 40
          },
          end: {
            line: 756,
            column: 41
          }
        },
        loc: {
          start: {
            line: 756,
            column: 55
          },
          end: {
            line: 782,
            column: 1
          }
        },
        line: 756
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 783,
            column: 40
          },
          end: {
            line: 783,
            column: 41
          }
        },
        loc: {
          start: {
            line: 783,
            column: 55
          },
          end: {
            line: 807,
            column: 1
          }
        },
        line: 783
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 24,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "1": {
        loc: {
          start: {
            line: 36,
            column: 19
          },
          end: {
            line: 36,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 36,
            column: 44
          },
          end: {
            line: 36,
            column: 57
          }
        }, {
          start: {
            line: 36,
            column: 60
          },
          end: {
            line: 36,
            column: 89
          }
        }],
        line: 36
      },
      "2": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 51,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 51,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "3": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "4": {
        loc: {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "5": {
        loc: {
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 61,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 61,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "6": {
        loc: {
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "7": {
        loc: {
          start: {
            line: 79,
            column: 72
          },
          end: {
            line: 79,
            column: 117
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 79,
            column: 72
          },
          end: {
            line: 79,
            column: 95
          }
        }, {
          start: {
            line: 79,
            column: 99
          },
          end: {
            line: 79,
            column: 117
          }
        }],
        line: 79
      },
      "8": {
        loc: {
          start: {
            line: 87,
            column: 24
          },
          end: {
            line: 87,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 87,
            column: 24
          },
          end: {
            line: 87,
            column: 45
          }
        }, {
          start: {
            line: 87,
            column: 49
          },
          end: {
            line: 87,
            column: 50
          }
        }],
        line: 87
      },
      "9": {
        loc: {
          start: {
            line: 88,
            column: 25
          },
          end: {
            line: 88,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 88,
            column: 25
          },
          end: {
            line: 88,
            column: 47
          }
        }, {
          start: {
            line: 88,
            column: 51
          },
          end: {
            line: 88,
            column: 53
          }
        }],
        line: 88
      },
      "10": {
        loc: {
          start: {
            line: 96,
            column: 150
          },
          end: {
            line: 96,
            column: 195
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 96,
            column: 150
          },
          end: {
            line: 96,
            column: 173
          }
        }, {
          start: {
            line: 96,
            column: 177
          },
          end: {
            line: 96,
            column: 195
          }
        }],
        line: 96
      },
      "11": {
        loc: {
          start: {
            line: 97,
            column: 76
          },
          end: {
            line: 97,
            column: 121
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 97,
            column: 76
          },
          end: {
            line: 97,
            column: 99
          }
        }, {
          start: {
            line: 97,
            column: 103
          },
          end: {
            line: 97,
            column: 121
          }
        }],
        line: 97
      },
      "12": {
        loc: {
          start: {
            line: 108,
            column: 38
          },
          end: {
            line: 110,
            column: 15
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 109,
            column: 14
          },
          end: {
            line: 109,
            column: 85
          }
        }, {
          start: {
            line: 110,
            column: 14
          },
          end: {
            line: 110,
            column: 15
          }
        }],
        line: 108
      },
      "13": {
        loc: {
          start: {
            line: 142,
            column: 19
          },
          end: {
            line: 142,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 142,
            column: 44
          },
          end: {
            line: 142,
            column: 57
          }
        }, {
          start: {
            line: 142,
            column: 60
          },
          end: {
            line: 142,
            column: 97
          }
        }],
        line: 142
      },
      "14": {
        loc: {
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 175,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 175,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "15": {
        loc: {
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 178,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 178,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "16": {
        loc: {
          start: {
            line: 180,
            column: 8
          },
          end: {
            line: 205,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 180,
            column: 8
          },
          end: {
            line: 205,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 180
      },
      "17": {
        loc: {
          start: {
            line: 183,
            column: 12
          },
          end: {
            line: 203,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 184,
            column: 16
          },
          end: {
            line: 187,
            column: 17
          }
        }, {
          start: {
            line: 188,
            column: 16
          },
          end: {
            line: 191,
            column: 17
          }
        }, {
          start: {
            line: 192,
            column: 16
          },
          end: {
            line: 195,
            column: 17
          }
        }, {
          start: {
            line: 196,
            column: 16
          },
          end: {
            line: 199,
            column: 17
          }
        }, {
          start: {
            line: 200,
            column: 16
          },
          end: {
            line: 202,
            column: 17
          }
        }],
        line: 183
      },
      "18": {
        loc: {
          start: {
            line: 217,
            column: 72
          },
          end: {
            line: 217,
            column: 117
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 217,
            column: 72
          },
          end: {
            line: 217,
            column: 95
          }
        }, {
          start: {
            line: 217,
            column: 99
          },
          end: {
            line: 217,
            column: 117
          }
        }],
        line: 217
      },
      "19": {
        loc: {
          start: {
            line: 225,
            column: 38
          },
          end: {
            line: 227,
            column: 15
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 226,
            column: 14
          },
          end: {
            line: 226,
            column: 85
          }
        }, {
          start: {
            line: 227,
            column: 14
          },
          end: {
            line: 227,
            column: 15
          }
        }],
        line: 225
      },
      "20": {
        loc: {
          start: {
            line: 240,
            column: 33
          },
          end: {
            line: 240,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 240,
            column: 65
          },
          end: {
            line: 240,
            column: 111
          }
        }, {
          start: {
            line: 240,
            column: 114
          },
          end: {
            line: 240,
            column: 115
          }
        }],
        line: 240
      },
      "21": {
        loc: {
          start: {
            line: 256,
            column: 36
          },
          end: {
            line: 256,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 256,
            column: 36
          },
          end: {
            line: 256,
            column: 42
          }
        }, {
          start: {
            line: 256,
            column: 46
          },
          end: {
            line: 256,
            column: 53
          }
        }],
        line: 256
      },
      "22": {
        loc: {
          start: {
            line: 271,
            column: 19
          },
          end: {
            line: 271,
            column: 98
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 271,
            column: 44
          },
          end: {
            line: 271,
            column: 57
          }
        }, {
          start: {
            line: 271,
            column: 60
          },
          end: {
            line: 271,
            column: 98
          }
        }],
        line: 271
      },
      "23": {
        loc: {
          start: {
            line: 283,
            column: 8
          },
          end: {
            line: 285,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 283,
            column: 8
          },
          end: {
            line: 285,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 283
      },
      "24": {
        loc: {
          start: {
            line: 287,
            column: 24
          },
          end: {
            line: 287,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 287,
            column: 24
          },
          end: {
            line: 287,
            column: 45
          }
        }, {
          start: {
            line: 287,
            column: 49
          },
          end: {
            line: 287,
            column: 50
          }
        }],
        line: 287
      },
      "25": {
        loc: {
          start: {
            line: 288,
            column: 25
          },
          end: {
            line: 288,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 288,
            column: 25
          },
          end: {
            line: 288,
            column: 47
          }
        }, {
          start: {
            line: 288,
            column: 51
          },
          end: {
            line: 288,
            column: 53
          }
        }],
        line: 288
      },
      "26": {
        loc: {
          start: {
            line: 329,
            column: 8
          },
          end: {
            line: 334,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 329,
            column: 8
          },
          end: {
            line: 334,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 329
      },
      "27": {
        loc: {
          start: {
            line: 337,
            column: 8
          },
          end: {
            line: 339,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 337,
            column: 8
          },
          end: {
            line: 339,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 337
      },
      "28": {
        loc: {
          start: {
            line: 345,
            column: 54
          },
          end: {
            line: 345,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 345,
            column: 54
          },
          end: {
            line: 345,
            column: 70
          }
        }, {
          start: {
            line: 345,
            column: 74
          },
          end: {
            line: 345,
            column: 95
          }
        }],
        line: 345
      },
      "29": {
        loc: {
          start: {
            line: 346,
            column: 27
          },
          end: {
            line: 351,
            column: 19
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 347,
            column: 18
          },
          end: {
            line: 350,
            column: 103
          }
        }, {
          start: {
            line: 351,
            column: 18
          },
          end: {
            line: 351,
            column: 19
          }
        }],
        line: 346
      },
      "30": {
        loc: {
          start: {
            line: 348,
            column: 35
          },
          end: {
            line: 348,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 348,
            column: 35
          },
          end: {
            line: 348,
            column: 51
          }
        }, {
          start: {
            line: 348,
            column: 55
          },
          end: {
            line: 348,
            column: 76
          }
        }],
        line: 348
      },
      "31": {
        loc: {
          start: {
            line: 349,
            column: 47
          },
          end: {
            line: 349,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 349,
            column: 47
          },
          end: {
            line: 349,
            column: 54
          }
        }, {
          start: {
            line: 349,
            column: 58
          },
          end: {
            line: 349,
            column: 59
          }
        }],
        line: 349
      },
      "32": {
        loc: {
          start: {
            line: 350,
            column: 54
          },
          end: {
            line: 350,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 350,
            column: 54
          },
          end: {
            line: 350,
            column: 70
          }
        }, {
          start: {
            line: 350,
            column: 74
          },
          end: {
            line: 350,
            column: 95
          }
        }],
        line: 350
      },
      "33": {
        loc: {
          start: {
            line: 429,
            column: 25
          },
          end: {
            line: 429,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 429,
            column: 39
          },
          end: {
            line: 429,
            column: 67
          }
        }, {
          start: {
            line: 429,
            column: 70
          },
          end: {
            line: 429,
            column: 79
          }
        }],
        line: 429
      },
      "34": {
        loc: {
          start: {
            line: 433,
            column: 18
          },
          end: {
            line: 433,
            column: 58
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 433,
            column: 25
          },
          end: {
            line: 433,
            column: 46
          }
        }, {
          start: {
            line: 433,
            column: 49
          },
          end: {
            line: 433,
            column: 58
          }
        }],
        line: 433
      },
      "35": {
        loc: {
          start: {
            line: 434,
            column: 19
          },
          end: {
            line: 434,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 434,
            column: 27
          },
          end: {
            line: 434,
            column: 49
          }
        }, {
          start: {
            line: 434,
            column: 52
          },
          end: {
            line: 434,
            column: 61
          }
        }],
        line: 434
      },
      "36": {
        loc: {
          start: {
            line: 441,
            column: 18
          },
          end: {
            line: 441,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 441,
            column: 18
          },
          end: {
            line: 441,
            column: 30
          }
        }, {
          start: {
            line: 441,
            column: 34
          },
          end: {
            line: 441,
            column: 35
          }
        }],
        line: 441
      },
      "37": {
        loc: {
          start: {
            line: 442,
            column: 19
          },
          end: {
            line: 442,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 442,
            column: 19
          },
          end: {
            line: 442,
            column: 32
          }
        }, {
          start: {
            line: 442,
            column: 36
          },
          end: {
            line: 442,
            column: 38
          }
        }],
        line: 442
      },
      "38": {
        loc: {
          start: {
            line: 464,
            column: 12
          },
          end: {
            line: 467,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 464,
            column: 12
          },
          end: {
            line: 467,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 464
      },
      "39": {
        loc: {
          start: {
            line: 466,
            column: 29
          },
          end: {
            line: 466,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 466,
            column: 29
          },
          end: {
            line: 466,
            column: 75
          }
        }, {
          start: {
            line: 466,
            column: 79
          },
          end: {
            line: 466,
            column: 83
          }
        }],
        line: 466
      },
      "40": {
        loc: {
          start: {
            line: 472,
            column: 8
          },
          end: {
            line: 477,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 472,
            column: 8
          },
          end: {
            line: 477,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 472
      },
      "41": {
        loc: {
          start: {
            line: 482,
            column: 8
          },
          end: {
            line: 487,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 482,
            column: 8
          },
          end: {
            line: 487,
            column: 9
          }
        }, {
          start: {
            line: 485,
            column: 13
          },
          end: {
            line: 487,
            column: 9
          }
        }],
        line: 482
      },
      "42": {
        loc: {
          start: {
            line: 483,
            column: 21
          },
          end: {
            line: 483,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 483,
            column: 83
          },
          end: {
            line: 483,
            column: 91
          }
        }, {
          start: {
            line: 483,
            column: 94
          },
          end: {
            line: 483,
            column: 105
          }
        }],
        line: 483
      },
      "43": {
        loc: {
          start: {
            line: 483,
            column: 21
          },
          end: {
            line: 483,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 483,
            column: 21
          },
          end: {
            line: 483,
            column: 46
          }
        }, {
          start: {
            line: 483,
            column: 50
          },
          end: {
            line: 483,
            column: 80
          }
        }],
        line: 483
      },
      "44": {
        loc: {
          start: {
            line: 485,
            column: 13
          },
          end: {
            line: 487,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 485,
            column: 13
          },
          end: {
            line: 487,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 485
      },
      "45": {
        loc: {
          start: {
            line: 498,
            column: 24
          },
          end: {
            line: 498,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 498,
            column: 24
          },
          end: {
            line: 498,
            column: 45
          }
        }, {
          start: {
            line: 498,
            column: 49
          },
          end: {
            line: 498,
            column: 58
          }
        }],
        line: 498
      },
      "46": {
        loc: {
          start: {
            line: 499,
            column: 21
          },
          end: {
            line: 499,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 499,
            column: 21
          },
          end: {
            line: 499,
            column: 39
          }
        }, {
          start: {
            line: 499,
            column: 43
          },
          end: {
            line: 499,
            column: 52
          }
        }],
        line: 499
      },
      "47": {
        loc: {
          start: {
            line: 530,
            column: 8
          },
          end: {
            line: 535,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 530,
            column: 8
          },
          end: {
            line: 535,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 530
      },
      "48": {
        loc: {
          start: {
            line: 539,
            column: 8
          },
          end: {
            line: 544,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 539,
            column: 8
          },
          end: {
            line: 544,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 539
      },
      "49": {
        loc: {
          start: {
            line: 549,
            column: 8
          },
          end: {
            line: 555,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 549,
            column: 8
          },
          end: {
            line: 555,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 549
      },
      "50": {
        loc: {
          start: {
            line: 549,
            column: 12
          },
          end: {
            line: 549,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 549,
            column: 12
          },
          end: {
            line: 549,
            column: 18
          }
        }, {
          start: {
            line: 549,
            column: 22
          },
          end: {
            line: 549,
            column: 43
          }
        }],
        line: 549
      },
      "51": {
        loc: {
          start: {
            line: 643,
            column: 8
          },
          end: {
            line: 648,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 643,
            column: 8
          },
          end: {
            line: 648,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 643
      },
      "52": {
        loc: {
          start: {
            line: 722,
            column: 8
          },
          end: {
            line: 727,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 722,
            column: 8
          },
          end: {
            line: 727,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 722
      },
      "53": {
        loc: {
          start: {
            line: 738,
            column: 24
          },
          end: {
            line: 738,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 738,
            column: 24
          },
          end: {
            line: 738,
            column: 45
          }
        }, {
          start: {
            line: 738,
            column: 49
          },
          end: {
            line: 738,
            column: 58
          }
        }],
        line: 738
      },
      "54": {
        loc: {
          start: {
            line: 739,
            column: 21
          },
          end: {
            line: 739,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 739,
            column: 21
          },
          end: {
            line: 739,
            column: 39
          }
        }, {
          start: {
            line: 739,
            column: 43
          },
          end: {
            line: 739,
            column: 52
          }
        }],
        line: 739
      },
      "55": {
        loc: {
          start: {
            line: 762,
            column: 8
          },
          end: {
            line: 767,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 762,
            column: 8
          },
          end: {
            line: 767,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 762
      },
      "56": {
        loc: {
          start: {
            line: 788,
            column: 8
          },
          end: {
            line: 793,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 788,
            column: 8
          },
          end: {
            line: 793,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 788
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0,
      "290": 0,
      "291": 0,
      "292": 0,
      "293": 0,
      "294": 0,
      "295": 0,
      "296": 0,
      "297": 0,
      "298": 0,
      "299": 0,
      "300": 0,
      "301": 0,
      "302": 0,
      "303": 0,
      "304": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0, 0, 0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fed8311ea37dbb3af51017bb387b0670ebb64a57"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_es6dr5dvi = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_es6dr5dvi();
var _a;
// import { Assignment } from "@/models/assignment.model";
// import { AssignmentSubmission } from "@/models/assignment_submission.model";
import { ClassService } from "@/services/class.service";
// import { EnhancedAssignmentService } from "@/services/enhanced_assignment.service"; // Disabled until course assignment models exist
import { UserService } from "@/services/users.service";
// const enhancedAssignmentService = new EnhancedAssignmentService(); // Disabled until course assignment models exist
const classService =
/* istanbul ignore next */
(cov_es6dr5dvi().s[0]++, new ClassService());
export class AssignmentController {}
/* istanbul ignore next */
cov_es6dr5dvi().s[1]++;
_a = AssignmentController;
// ======================= ADMIN ROUTES =======================
/* istanbul ignore next */
cov_es6dr5dvi().s[2]++;
AssignmentController.createAssignment = async ctx => {
  /* istanbul ignore next */
  cov_es6dr5dvi().f[0]++;
  cov_es6dr5dvi().s[3]++;
  try {
    const campus_id =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[4]++, ctx.get("campus_id"));
    const user_id =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[5]++, ctx.get("user_id"));
    const data =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[6]++, await ctx.req.json());
    // Validate that class_id is provided
    /* istanbul ignore next */
    cov_es6dr5dvi().s[7]++;
    if (!data.class_id) {
      /* istanbul ignore next */
      cov_es6dr5dvi().b[0][0]++;
      cov_es6dr5dvi().s[8]++;
      return ctx.json({
        success: false,
        error: "class_id is required"
      }, 400);
    } else
    /* istanbul ignore next */
    {
      cov_es6dr5dvi().b[0][1]++;
    }
    const result =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[9]++, await classService.createAssignment(campus_id, data.class_id, Object.assign(Object.assign({}, data), {
      user_id
    })));
    /* istanbul ignore next */
    cov_es6dr5dvi().s[10]++;
    return ctx.json({
      success: true,
      message: "Assignment created successfully",
      data: result
    }, 201);
  } catch (error) {
    /* istanbul ignore next */
    cov_es6dr5dvi().s[11]++;
    console.error("Error creating assignment:", error);
    /* istanbul ignore next */
    cov_es6dr5dvi().s[12]++;
    return ctx.json({
      success: false,
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_es6dr5dvi().b[1][0]++, error.message) :
      /* istanbul ignore next */
      (cov_es6dr5dvi().b[1][1]++, "Failed to create assignment")
    }, 500);
  }
};
/* istanbul ignore next */
cov_es6dr5dvi().s[13]++;
AssignmentController.getAdminAssignmentOverview = async ctx => {
  /* istanbul ignore next */
  cov_es6dr5dvi().f[1]++;
  cov_es6dr5dvi().s[14]++;
  try {
    const campus_id =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[15]++, ctx.get("campus_id"));
    const {
      status,
      class_id,
      subject_id,
      teacher_id,
      from_date,
      to_date,
      page,
      limit
    } =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[16]++, ctx.req.query());
    // Get all assignments for the campus
    const allAssignments =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[17]++, await classService.getAllAssignmentsFromAllClasses(campus_id));
    // Use only class assignments
    let combinedAssignments =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[18]++, [...allAssignments]);
    // Apply filters
    /* istanbul ignore next */
    cov_es6dr5dvi().s[19]++;
    if (class_id) {
      /* istanbul ignore next */
      cov_es6dr5dvi().b[2][0]++;
      cov_es6dr5dvi().s[20]++;
      combinedAssignments = combinedAssignments.filter(assignment => {
        /* istanbul ignore next */
        cov_es6dr5dvi().f[2]++;
        cov_es6dr5dvi().s[21]++;
        return assignment.class_id === class_id;
      });
    } else
    /* istanbul ignore next */
    {
      cov_es6dr5dvi().b[2][1]++;
    }
    cov_es6dr5dvi().s[22]++;
    if (subject_id) {
      /* istanbul ignore next */
      cov_es6dr5dvi().b[3][0]++;
      cov_es6dr5dvi().s[23]++;
      combinedAssignments = combinedAssignments.filter(assignment => {
        /* istanbul ignore next */
        cov_es6dr5dvi().f[3]++;
        cov_es6dr5dvi().s[24]++;
        return assignment.subject_id === subject_id;
      });
    } else
    /* istanbul ignore next */
    {
      cov_es6dr5dvi().b[3][1]++;
    }
    cov_es6dr5dvi().s[25]++;
    if (teacher_id) {
      /* istanbul ignore next */
      cov_es6dr5dvi().b[4][0]++;
      cov_es6dr5dvi().s[26]++;
      combinedAssignments = combinedAssignments.filter(assignment => {
        /* istanbul ignore next */
        cov_es6dr5dvi().f[4]++;
        cov_es6dr5dvi().s[27]++;
        return assignment.user_id === teacher_id;
      });
    } else
    /* istanbul ignore next */
    {
      cov_es6dr5dvi().b[4][1]++;
    }
    cov_es6dr5dvi().s[28]++;
    if (from_date) {
      /* istanbul ignore next */
      cov_es6dr5dvi().b[5][0]++;
      const fromDate =
      /* istanbul ignore next */
      (cov_es6dr5dvi().s[29]++, new Date(from_date));
      /* istanbul ignore next */
      cov_es6dr5dvi().s[30]++;
      combinedAssignments = combinedAssignments.filter(assignment => {
        /* istanbul ignore next */
        cov_es6dr5dvi().f[5]++;
        cov_es6dr5dvi().s[31]++;
        return new Date(assignment.due_date) >= fromDate;
      });
    } else
    /* istanbul ignore next */
    {
      cov_es6dr5dvi().b[5][1]++;
    }
    cov_es6dr5dvi().s[32]++;
    if (to_date) {
      /* istanbul ignore next */
      cov_es6dr5dvi().b[6][0]++;
      const toDate =
      /* istanbul ignore next */
      (cov_es6dr5dvi().s[33]++, new Date(to_date));
      /* istanbul ignore next */
      cov_es6dr5dvi().s[34]++;
      combinedAssignments = combinedAssignments.filter(assignment => {
        /* istanbul ignore next */
        cov_es6dr5dvi().f[6]++;
        cov_es6dr5dvi().s[35]++;
        return new Date(assignment.due_date) <= toDate;
      });
    } else
    /* istanbul ignore next */
    {
      cov_es6dr5dvi().b[6][1]++;
    }
    // Calculate summary statistics
    const currentDate =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[36]++, new Date());
    const activeAssignments =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[37]++, combinedAssignments.filter(assignment => {
      /* istanbul ignore next */
      cov_es6dr5dvi().f[7]++;
      cov_es6dr5dvi().s[38]++;
      return new Date(assignment.due_date) >= currentDate;
    }));
    const overdueAssignments =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[39]++, combinedAssignments.filter(assignment => {
      /* istanbul ignore next */
      cov_es6dr5dvi().f[8]++;
      cov_es6dr5dvi().s[40]++;
      return new Date(assignment.due_date) < currentDate;
    }));
    // Get submission data for statistics
    let totalSubmissions =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[41]++, 0);
    let pendingGrading =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[42]++, 0);
    /* istanbul ignore next */
    cov_es6dr5dvi().s[43]++;
    try {
      /* istanbul ignore next */
      cov_es6dr5dvi().s[44]++;
      // Get submissions for all assignments (this might need optimization for large datasets)
      for (const assignment of combinedAssignments) {
        const submissions =
        /* istanbul ignore next */
        (cov_es6dr5dvi().s[45]++, await classService.getAssignmentSubmissionByAssignmentId(assignment.id));
        /* istanbul ignore next */
        cov_es6dr5dvi().s[46]++;
        totalSubmissions += submissions.length;
        // Count ungraded submissions
        const ungradedSubmissions =
        /* istanbul ignore next */
        (cov_es6dr5dvi().s[47]++, submissions.filter(sub => {
          /* istanbul ignore next */
          cov_es6dr5dvi().f[9]++;
          cov_es6dr5dvi().s[48]++;
          return /* istanbul ignore next */(cov_es6dr5dvi().b[7][0]++, sub.grade === undefined) ||
          /* istanbul ignore next */
          (cov_es6dr5dvi().b[7][1]++, sub.grade === null);
        }));
        /* istanbul ignore next */
        cov_es6dr5dvi().s[49]++;
        pendingGrading += ungradedSubmissions.length;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_es6dr5dvi().s[50]++;
      console.log("Error fetching submission statistics:", error);
    }
    // Apply pagination
    const pageNum =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[51]++,
    /* istanbul ignore next */
    (cov_es6dr5dvi().b[8][0]++, Number.parseInt(page)) ||
    /* istanbul ignore next */
    (cov_es6dr5dvi().b[8][1]++, 1));
    const limitNum =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[52]++,
    /* istanbul ignore next */
    (cov_es6dr5dvi().b[9][0]++, Number.parseInt(limit)) ||
    /* istanbul ignore next */
    (cov_es6dr5dvi().b[9][1]++, 20));
    const offset =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[53]++, (pageNum - 1) * limitNum);
    const paginatedAssignments =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[54]++, combinedAssignments.slice(offset, offset + limitNum));
    // Enrich assignments with additional data
    const enrichedAssignments =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[55]++, await Promise.all(paginatedAssignments.map(async assignment => {
      /* istanbul ignore next */
      cov_es6dr5dvi().f[10]++;
      cov_es6dr5dvi().s[56]++;
      try {
        // Get submission count for this assignment
        const submissions =
        /* istanbul ignore next */
        (cov_es6dr5dvi().s[57]++, await classService.getAssignmentSubmissionByAssignmentId(assignment.id));
        /* istanbul ignore next */
        cov_es6dr5dvi().s[58]++;
        return Object.assign(Object.assign({}, assignment), {
          submission_count: submissions.length,
          graded_count: submissions.filter(sub => {
            /* istanbul ignore next */
            cov_es6dr5dvi().f[11]++;
            cov_es6dr5dvi().s[59]++;
            return /* istanbul ignore next */(cov_es6dr5dvi().b[10][0]++, sub.grade !== undefined) &&
            /* istanbul ignore next */
            (cov_es6dr5dvi().b[10][1]++, sub.grade !== null);
          }).length,
          pending_count: submissions.filter(sub => {
            /* istanbul ignore next */
            cov_es6dr5dvi().f[12]++;
            cov_es6dr5dvi().s[60]++;
            return /* istanbul ignore next */(cov_es6dr5dvi().b[11][0]++, sub.grade === undefined) ||
            /* istanbul ignore next */
            (cov_es6dr5dvi().b[11][1]++, sub.grade === null);
          }).length,
          days_until_due: Math.ceil((new Date(assignment.due_date).getTime() - currentDate.getTime()) / (1000 * 60 * 60 * 24)),
          is_overdue: new Date(assignment.due_date) < currentDate
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_es6dr5dvi().s[61]++;
        console.log(`Error enriching assignment ${assignment.id}:`, error);
        /* istanbul ignore next */
        cov_es6dr5dvi().s[62]++;
        return Object.assign(Object.assign({}, assignment), {
          submission_count: 0,
          graded_count: 0,
          pending_count: 0,
          days_until_due: Math.ceil((new Date(assignment.due_date).getTime() - currentDate.getTime()) / (1000 * 60 * 60 * 24)),
          is_overdue: new Date(assignment.due_date) < currentDate
        });
      }
    })));
    // Calculate completion rate
    const averageCompletionRate =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[63]++, combinedAssignments.length > 0 ?
    /* istanbul ignore next */
    (cov_es6dr5dvi().b[12][0]++, Math.round(totalSubmissions / combinedAssignments.length * 100) / 100) :
    /* istanbul ignore next */
    (cov_es6dr5dvi().b[12][1]++, 0));
    /* istanbul ignore next */
    cov_es6dr5dvi().s[64]++;
    return ctx.json({
      success: true,
      assignments: enrichedAssignments,
      pagination: {
        page: pageNum,
        limit: limitNum,
        total: combinedAssignments.length,
        total_pages: Math.ceil(combinedAssignments.length / limitNum)
      },
      summary_stats: {
        total_assignments: combinedAssignments.length,
        active_assignments: activeAssignments.length,
        overdue_assignments: overdueAssignments.length,
        total_submissions: totalSubmissions,
        pending_grading: pendingGrading,
        average_completion_rate: averageCompletionRate
      },
      filters_applied: {
        status,
        class_id,
        subject_id,
        teacher_id,
        from_date,
        to_date
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_es6dr5dvi().s[65]++;
    console.error("Error fetching admin assignment overview:", error);
    /* istanbul ignore next */
    cov_es6dr5dvi().s[66]++;
    return ctx.json({
      success: false,
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_es6dr5dvi().b[13][0]++, error.message) :
      /* istanbul ignore next */
      (cov_es6dr5dvi().b[13][1]++, "Failed to fetch assignment overview")
    }, 500);
  }
};
/* istanbul ignore next */
cov_es6dr5dvi().s[67]++;
AssignmentController.performBulkAssignmentOperations = async ctx => {
  /* istanbul ignore next */
  cov_es6dr5dvi().f[13]++;
  cov_es6dr5dvi().s[68]++;
  try {
    const data =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[69]++, await ctx.req.json());
    // Placeholder for bulk operations
    /* istanbul ignore next */
    cov_es6dr5dvi().s[70]++;
    return ctx.json({
      success: true,
      message: "Bulk operation completed",
      processed_count: data.assignment_ids.length,
      failed_count: 0
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_es6dr5dvi().s[71]++;
    console.error("Error performing bulk assignment operations:", error);
    /* istanbul ignore next */
    cov_es6dr5dvi().s[72]++;
    return ctx.json({
      success: false,
      error: "Failed to perform bulk operations"
    }, 500);
  }
};
/* istanbul ignore next */
cov_es6dr5dvi().s[73]++;
AssignmentController.getAssignmentAnalytics = async ctx => {
  /* istanbul ignore next */
  cov_es6dr5dvi().f[14]++;
  cov_es6dr5dvi().s[74]++;
  try {
    const campus_id =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[75]++, ctx.get("campus_id"));
    const {
      period,
      class_id,
      subject_id
    } =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[76]++, ctx.req.query());
    // Get all assignments for the campus
    const allAssignments =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[77]++, await classService.getAllAssignmentsFromAllClasses(campus_id));
    // Apply filters
    let filteredAssignments =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[78]++, allAssignments);
    /* istanbul ignore next */
    cov_es6dr5dvi().s[79]++;
    if (class_id) {
      /* istanbul ignore next */
      cov_es6dr5dvi().b[14][0]++;
      cov_es6dr5dvi().s[80]++;
      filteredAssignments = filteredAssignments.filter(assignment => {
        /* istanbul ignore next */
        cov_es6dr5dvi().f[15]++;
        cov_es6dr5dvi().s[81]++;
        return assignment.class_id === class_id;
      });
    } else
    /* istanbul ignore next */
    {
      cov_es6dr5dvi().b[14][1]++;
    }
    cov_es6dr5dvi().s[82]++;
    if (subject_id) {
      /* istanbul ignore next */
      cov_es6dr5dvi().b[15][0]++;
      cov_es6dr5dvi().s[83]++;
      filteredAssignments = filteredAssignments.filter(assignment => {
        /* istanbul ignore next */
        cov_es6dr5dvi().f[16]++;
        cov_es6dr5dvi().s[84]++;
        return assignment.subject_id === subject_id;
      });
    } else
    /* istanbul ignore next */
    {
      cov_es6dr5dvi().b[15][1]++;
    }
    // Apply period filter
    cov_es6dr5dvi().s[85]++;
    if (period) {
      /* istanbul ignore next */
      cov_es6dr5dvi().b[16][0]++;
      const currentDate =
      /* istanbul ignore next */
      (cov_es6dr5dvi().s[86]++, new Date());
      let periodStartDate;
      /* istanbul ignore next */
      cov_es6dr5dvi().s[87]++;
      switch (period) {
        case "week":
          /* istanbul ignore next */
          cov_es6dr5dvi().b[17][0]++;
          {
            /* istanbul ignore next */
            cov_es6dr5dvi().s[88]++;
            periodStartDate = new Date(currentDate.getTime() - 7 * 24 * 60 * 60 * 1000);
            /* istanbul ignore next */
            cov_es6dr5dvi().s[89]++;
            break;
          }
        case "month":
          /* istanbul ignore next */
          cov_es6dr5dvi().b[17][1]++;
          {
            /* istanbul ignore next */
            cov_es6dr5dvi().s[90]++;
            periodStartDate = new Date(currentDate.getTime() - 30 * 24 * 60 * 60 * 1000);
            /* istanbul ignore next */
            cov_es6dr5dvi().s[91]++;
            break;
          }
        case "quarter":
          /* istanbul ignore next */
          cov_es6dr5dvi().b[17][2]++;
          {
            /* istanbul ignore next */
            cov_es6dr5dvi().s[92]++;
            periodStartDate = new Date(currentDate.getTime() - 90 * 24 * 60 * 60 * 1000);
            /* istanbul ignore next */
            cov_es6dr5dvi().s[93]++;
            break;
          }
        case "year":
          /* istanbul ignore next */
          cov_es6dr5dvi().b[17][3]++;
          {
            /* istanbul ignore next */
            cov_es6dr5dvi().s[94]++;
            periodStartDate = new Date(currentDate.getTime() - 365 * 24 * 60 * 60 * 1000);
            /* istanbul ignore next */
            cov_es6dr5dvi().s[95]++;
            break;
          }
        default:
          /* istanbul ignore next */
          cov_es6dr5dvi().b[17][4]++;
          {
            /* istanbul ignore next */
            cov_es6dr5dvi().s[96]++;
            periodStartDate = new Date(currentDate.getTime() - 30 * 24 * 60 * 60 * 1000);
          }
        // Default to month
      }
      /* istanbul ignore next */
      cov_es6dr5dvi().s[97]++;
      filteredAssignments = filteredAssignments.filter(assignment => {
        /* istanbul ignore next */
        cov_es6dr5dvi().f[17]++;
        cov_es6dr5dvi().s[98]++;
        return new Date(assignment.created_at) >= periodStartDate;
      });
    } else
    /* istanbul ignore next */
    {
      cov_es6dr5dvi().b[16][1]++;
    }
    // Calculate analytics
    const currentDate =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[99]++, new Date());
    const activeAssignments =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[100]++, filteredAssignments.filter(assignment => {
      /* istanbul ignore next */
      cov_es6dr5dvi().f[18]++;
      cov_es6dr5dvi().s[101]++;
      return new Date(assignment.due_date) >= currentDate;
    }));
    const overdueAssignments =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[102]++, filteredAssignments.filter(assignment => {
      /* istanbul ignore next */
      cov_es6dr5dvi().f[19]++;
      cov_es6dr5dvi().s[103]++;
      return new Date(assignment.due_date) < currentDate;
    }));
    // Get submission statistics
    let totalSubmissions =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[104]++, 0);
    let pendingGrading =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[105]++, 0);
    /* istanbul ignore next */
    cov_es6dr5dvi().s[106]++;
    try {
      /* istanbul ignore next */
      cov_es6dr5dvi().s[107]++;
      for (const assignment of filteredAssignments) {
        const submissions =
        /* istanbul ignore next */
        (cov_es6dr5dvi().s[108]++, await classService.getAssignmentSubmissionByAssignmentId(assignment.id));
        /* istanbul ignore next */
        cov_es6dr5dvi().s[109]++;
        totalSubmissions += submissions.length;
        const ungradedSubmissions =
        /* istanbul ignore next */
        (cov_es6dr5dvi().s[110]++, submissions.filter(sub => {
          /* istanbul ignore next */
          cov_es6dr5dvi().f[20]++;
          cov_es6dr5dvi().s[111]++;
          return /* istanbul ignore next */(cov_es6dr5dvi().b[18][0]++, sub.grade === undefined) ||
          /* istanbul ignore next */
          (cov_es6dr5dvi().b[18][1]++, sub.grade === null);
        }));
        /* istanbul ignore next */
        cov_es6dr5dvi().s[112]++;
        pendingGrading += ungradedSubmissions.length;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_es6dr5dvi().s[113]++;
      console.log("Error fetching submission statistics for analytics:", error);
    }
    // Calculate completion rate
    const averageCompletionRate =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[114]++, filteredAssignments.length > 0 ?
    /* istanbul ignore next */
    (cov_es6dr5dvi().b[19][0]++, Math.round(totalSubmissions / filteredAssignments.length * 100) / 100) :
    /* istanbul ignore next */
    (cov_es6dr5dvi().b[19][1]++, 0));
    // Generate analytics by subject and time trends
    const subjectAnalytics =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[115]++, await Promise.all([...new Set(filteredAssignments.map(a => {
      /* istanbul ignore next */
      cov_es6dr5dvi().f[21]++;
      cov_es6dr5dvi().s[116]++;
      return a.subject_id;
    }))].map(async subjectId => {
      /* istanbul ignore next */
      cov_es6dr5dvi().f[22]++;
      const subjectAssignments =
      /* istanbul ignore next */
      (cov_es6dr5dvi().s[117]++, filteredAssignments.filter(a => {
        /* istanbul ignore next */
        cov_es6dr5dvi().f[23]++;
        cov_es6dr5dvi().s[118]++;
        return a.subject_id === subjectId;
      }));
      let subjectSubmissions =
      /* istanbul ignore next */
      (cov_es6dr5dvi().s[119]++, 0);
      /* istanbul ignore next */
      cov_es6dr5dvi().s[120]++;
      for (const assignment of subjectAssignments) {
        const submissions =
        /* istanbul ignore next */
        (cov_es6dr5dvi().s[121]++, await classService.getAssignmentSubmissionByAssignmentId(assignment.id));
        /* istanbul ignore next */
        cov_es6dr5dvi().s[122]++;
        subjectSubmissions += submissions.length;
      }
      /* istanbul ignore next */
      cov_es6dr5dvi().s[123]++;
      return {
        subject_id: subjectId,
        total_assignments: subjectAssignments.length,
        total_submissions: subjectSubmissions,
        completion_rate: subjectAssignments.length > 0 ?
        /* istanbul ignore next */
        (cov_es6dr5dvi().b[20][0]++, subjectSubmissions / subjectAssignments.length) :
        /* istanbul ignore next */
        (cov_es6dr5dvi().b[20][1]++, 0)
      };
    })));
    /* istanbul ignore next */
    cov_es6dr5dvi().s[124]++;
    return ctx.json({
      success: true,
      analytics: {
        overview: {
          total_assignments: filteredAssignments.length,
          active_assignments: activeAssignments.length,
          overdue_assignments: overdueAssignments.length,
          total_submissions: totalSubmissions,
          pending_grading: pendingGrading,
          average_completion_rate: averageCompletionRate
        },
        by_subject: subjectAnalytics,
        trends: {
          period_applied:
          /* istanbul ignore next */
          (cov_es6dr5dvi().b[21][0]++, period) ||
          /* istanbul ignore next */
          (cov_es6dr5dvi().b[21][1]++, "month"),
          assignments_created: filteredAssignments.length
        }
      },
      filters_applied: {
        period,
        class_id,
        subject_id
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_es6dr5dvi().s[125]++;
    console.error("Error fetching assignment analytics:", error);
    /* istanbul ignore next */
    cov_es6dr5dvi().s[126]++;
    return ctx.json({
      success: false,
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_es6dr5dvi().b[22][0]++, error.message) :
      /* istanbul ignore next */
      (cov_es6dr5dvi().b[22][1]++, "Failed to fetch assignment analytics")
    }, 500);
  }
};
// ======================= TEACHER ROUTES =======================
/* istanbul ignore next */
cov_es6dr5dvi().s[127]++;
AssignmentController.getTeacherAssignments = async ctx => {
  /* istanbul ignore next */
  cov_es6dr5dvi().f[24]++;
  cov_es6dr5dvi().s[128]++;
  try {
    const user_id =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[129]++, ctx.get("user_id"));
    const {
      status,
      class_id,
      page,
      limit
    } =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[130]++, ctx.req.query());
    const assignments =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[131]++, await classService.getAllAssignmentByUserId(user_id));
    // Apply filters if provided
    let filteredAssignments =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[132]++, assignments);
    /* istanbul ignore next */
    cov_es6dr5dvi().s[133]++;
    if (class_id) {
      /* istanbul ignore next */
      cov_es6dr5dvi().b[23][0]++;
      cov_es6dr5dvi().s[134]++;
      filteredAssignments = filteredAssignments.filter(a => {
        /* istanbul ignore next */
        cov_es6dr5dvi().f[25]++;
        cov_es6dr5dvi().s[135]++;
        return a.class_id === class_id;
      });
    } else
    /* istanbul ignore next */
    {
      cov_es6dr5dvi().b[23][1]++;
    }
    // Apply pagination
    const pageNum =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[136]++,
    /* istanbul ignore next */
    (cov_es6dr5dvi().b[24][0]++, Number.parseInt(page)) ||
    /* istanbul ignore next */
    (cov_es6dr5dvi().b[24][1]++, 1));
    const limitNum =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[137]++,
    /* istanbul ignore next */
    (cov_es6dr5dvi().b[25][0]++, Number.parseInt(limit)) ||
    /* istanbul ignore next */
    (cov_es6dr5dvi().b[25][1]++, 20));
    const offset =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[138]++, (pageNum - 1) * limitNum);
    const paginatedAssignments =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[139]++, filteredAssignments.slice(offset, offset + limitNum));
    /* istanbul ignore next */
    cov_es6dr5dvi().s[140]++;
    return ctx.json({
      assignments: paginatedAssignments.map(assignment => {
        /* istanbul ignore next */
        cov_es6dr5dvi().f[26]++;
        cov_es6dr5dvi().s[141]++;
        return Object.assign(Object.assign({}, assignment), {
          submission_stats: {
            total_students: 0,
            // Would be calculated from class enrollment
            submitted: 0,
            pending: 0,
            graded: 0,
            average_grade: 0
          }
        });
      }),
      pagination: {
        page: pageNum,
        limit: limitNum,
        total: filteredAssignments.length,
        total_pages: Math.ceil(filteredAssignments.length / limitNum)
      },
      dashboard_stats: {
        total_assignments: assignments.length,
        pending_grading: 0,
        // Would be calculated
        recent_submissions: 0,
        // Would be calculated
        average_grade: 0 // Would be calculated
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_es6dr5dvi().s[142]++;
    console.error("Error fetching teacher assignments:", error);
    /* istanbul ignore next */
    cov_es6dr5dvi().s[143]++;
    return ctx.json({
      success: false,
      error: "Failed to fetch teacher assignments"
    }, 500);
  }
};
/* istanbul ignore next */
cov_es6dr5dvi().s[144]++;
AssignmentController.getAssignmentSubmissions = async ctx => {
  /* istanbul ignore next */
  cov_es6dr5dvi().f[27]++;
  cov_es6dr5dvi().s[145]++;
  try {
    const {
      assignment_id
    } =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[146]++, ctx.req.param());
    const {
      status,
      student_id
    } =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[147]++, ctx.req.query());
    const [assignment, submissions] =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[148]++, await Promise.all([classService.getAssignmentById(assignment_id), classService.getAssignmentSubmissionByAssignmentId(assignment_id)]));
    /* istanbul ignore next */
    cov_es6dr5dvi().s[149]++;
    if (!assignment) {
      /* istanbul ignore next */
      cov_es6dr5dvi().b[26][0]++;
      cov_es6dr5dvi().s[150]++;
      return ctx.json({
        success: false,
        error: "Assignment not found"
      }, 404);
    } else
    /* istanbul ignore next */
    {
      cov_es6dr5dvi().b[26][1]++;
    }
    // Filter submissions if student_id is provided
    let filteredSubmissions =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[151]++, submissions);
    /* istanbul ignore next */
    cov_es6dr5dvi().s[152]++;
    if (student_id) {
      /* istanbul ignore next */
      cov_es6dr5dvi().b[27][0]++;
      cov_es6dr5dvi().s[153]++;
      filteredSubmissions = submissions.filter(s => {
        /* istanbul ignore next */
        cov_es6dr5dvi().f[28]++;
        cov_es6dr5dvi().s[154]++;
        return s.user_id === student_id;
      });
    } else
    /* istanbul ignore next */
    {
      cov_es6dr5dvi().b[27][1]++;
    }
    // Calculate stats
    const stats =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[155]++, {
      total_students: 0,
      // Would need to get from class enrollment
      submitted: filteredSubmissions.length,
      pending: 0,
      // Would be calculated
      graded: filteredSubmissions.filter(s => {
        /* istanbul ignore next */
        cov_es6dr5dvi().f[29]++;
        cov_es6dr5dvi().s[156]++;
        return /* istanbul ignore next */(cov_es6dr5dvi().b[28][0]++, s.grade !== null) &&
        /* istanbul ignore next */
        (cov_es6dr5dvi().b[28][1]++, s.grade !== undefined);
      }).length,
      average_grade: filteredSubmissions.length > 0 ?
      /* istanbul ignore next */
      (cov_es6dr5dvi().b[29][0]++, filteredSubmissions.filter(s => {
        /* istanbul ignore next */
        cov_es6dr5dvi().f[30]++;
        cov_es6dr5dvi().s[157]++;
        return /* istanbul ignore next */(cov_es6dr5dvi().b[30][0]++, s.grade !== null) &&
        /* istanbul ignore next */
        (cov_es6dr5dvi().b[30][1]++, s.grade !== undefined);
      }).reduce((sum, s) => {
        /* istanbul ignore next */
        cov_es6dr5dvi().f[31]++;
        cov_es6dr5dvi().s[158]++;
        return sum + (
        /* istanbul ignore next */
        (cov_es6dr5dvi().b[31][0]++, s.grade) ||
        /* istanbul ignore next */
        (cov_es6dr5dvi().b[31][1]++, 0));
      }, 0) / filteredSubmissions.filter(s => {
        /* istanbul ignore next */
        cov_es6dr5dvi().f[32]++;
        cov_es6dr5dvi().s[159]++;
        return /* istanbul ignore next */(cov_es6dr5dvi().b[32][0]++, s.grade !== null) &&
        /* istanbul ignore next */
        (cov_es6dr5dvi().b[32][1]++, s.grade !== undefined);
      }).length) :
      /* istanbul ignore next */
      (cov_es6dr5dvi().b[29][1]++, 0)
    });
    /* istanbul ignore next */
    cov_es6dr5dvi().s[160]++;
    return ctx.json({
      assignment,
      submissions: filteredSubmissions,
      stats
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_es6dr5dvi().s[161]++;
    console.error("Error fetching assignment submissions:", error);
    /* istanbul ignore next */
    cov_es6dr5dvi().s[162]++;
    return ctx.json({
      success: false,
      error: "Failed to fetch assignment submissions"
    }, 500);
  }
};
/* istanbul ignore next */
cov_es6dr5dvi().s[163]++;
AssignmentController.gradeSubmission = async ctx => {
  /* istanbul ignore next */
  cov_es6dr5dvi().f[33]++;
  cov_es6dr5dvi().s[164]++;
  try {
    const {
      submission_id
    } =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[165]++, ctx.req.param());
    const {
      grade,
      feedback
    } =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[166]++, await ctx.req.json());
    const result =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[167]++, await classService.gradeAssignmentSubmission(submission_id, grade, feedback));
    /* istanbul ignore next */
    cov_es6dr5dvi().s[168]++;
    return ctx.json({
      success: true,
      message: "Submission graded successfully",
      data: result
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_es6dr5dvi().s[169]++;
    console.error("Error grading submission:", error);
    /* istanbul ignore next */
    cov_es6dr5dvi().s[170]++;
    return ctx.json({
      success: false,
      error: "Failed to grade submission"
    }, 500);
  }
};
/* istanbul ignore next */
cov_es6dr5dvi().s[171]++;
AssignmentController.getTeacherAssignmentDashboard = async ctx => {
  /* istanbul ignore next */
  cov_es6dr5dvi().f[34]++;
  cov_es6dr5dvi().s[172]++;
  try {
    const user_id =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[173]++, ctx.get("user_id"));
    const assignments =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[174]++, await classService.getAllAssignmentByUserId(user_id));
    /* istanbul ignore next */
    cov_es6dr5dvi().s[175]++;
    return ctx.json({
      assignments: assignments.map(assignment => {
        /* istanbul ignore next */
        cov_es6dr5dvi().f[35]++;
        cov_es6dr5dvi().s[176]++;
        return Object.assign(Object.assign({}, assignment), {
          submission_stats: {
            total_students: 0,
            submitted: 0,
            pending: 0,
            graded: 0,
            average_grade: 0
          }
        });
      }),
      pagination: {
        page: 1,
        limit: 20,
        total: assignments.length,
        total_pages: Math.ceil(assignments.length / 20)
      },
      dashboard_stats: {
        total_assignments: assignments.length,
        pending_grading: 0,
        recent_submissions: 0,
        average_grade: 0
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_es6dr5dvi().s[177]++;
    console.error("Error fetching teacher assignment dashboard:", error);
    /* istanbul ignore next */
    cov_es6dr5dvi().s[178]++;
    return ctx.json({
      success: false,
      error: "Failed to fetch teacher dashboard"
    }, 500);
  }
};
// ======================= STUDENT ROUTES =======================
/* istanbul ignore next */
cov_es6dr5dvi().s[179]++;
AssignmentController.getStudentAssignments = async ctx => {
  /* istanbul ignore next */
  cov_es6dr5dvi().f[36]++;
  cov_es6dr5dvi().s[180]++;
  try {
    const user_id =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[181]++, ctx.get("user_id"));
    const campus_id =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[182]++, ctx.get("campus_id"));
    const {
      status,
      class_id,
      subject_id,
      due_in_days,
      sort_by,
      sort_order,
      page,
      limit
    } =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[183]++, ctx.req.query());
    const filters =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[184]++, {
      status: status,
      subject_id,
      due_in_days: due_in_days ?
      /* istanbul ignore next */
      (cov_es6dr5dvi().b[33][0]++, Number.parseInt(due_in_days)) :
      /* istanbul ignore next */
      (cov_es6dr5dvi().b[33][1]++, undefined),
      assignment_type: undefined,
      sort_by: sort_by,
      sort_order: sort_order,
      page: page ?
      /* istanbul ignore next */
      (cov_es6dr5dvi().b[34][0]++, Number.parseInt(page)) :
      /* istanbul ignore next */
      (cov_es6dr5dvi().b[34][1]++, undefined),
      limit: limit ?
      /* istanbul ignore next */
      (cov_es6dr5dvi().b[35][0]++, Number.parseInt(limit)) :
      /* istanbul ignore next */
      (cov_es6dr5dvi().b[35][1]++, undefined)
    });
    // Temporarily return stub response until enhanced assignment service is fixed
    const result =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[185]++, {
      success: true,
      assignments: [],
      total_count: 0,
      page:
      /* istanbul ignore next */
      (cov_es6dr5dvi().b[36][0]++, filters.page) ||
      /* istanbul ignore next */
      (cov_es6dr5dvi().b[36][1]++, 1),
      limit:
      /* istanbul ignore next */
      (cov_es6dr5dvi().b[37][0]++, filters.limit) ||
      /* istanbul ignore next */
      (cov_es6dr5dvi().b[37][1]++, 20),
      message: "Enhanced assignment service temporarily disabled"
    });
    /* istanbul ignore next */
    cov_es6dr5dvi().s[186]++;
    return ctx.json(result);
  } catch (error) {
    /* istanbul ignore next */
    cov_es6dr5dvi().s[187]++;
    console.error("Error fetching student assignments:", error);
    /* istanbul ignore next */
    cov_es6dr5dvi().s[188]++;
    return ctx.json({
      success: false,
      error: "Failed to fetch student assignments"
    }, 500);
  }
};
/* istanbul ignore next */
cov_es6dr5dvi().s[189]++;
AssignmentController.getStudentAssignmentDetails = async ctx => {
  /* istanbul ignore next */
  cov_es6dr5dvi().f[37]++;
  cov_es6dr5dvi().s[190]++;
  try {
    const user_id =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[191]++, ctx.get("user_id"));
    const {
      assignment_id
    } =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[192]++, ctx.req.param());
    // Get class assignment only
    let assignment =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[193]++, null);
    let submission =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[194]++, null);
    /* istanbul ignore next */
    cov_es6dr5dvi().s[195]++;
    try {
      /* istanbul ignore next */
      cov_es6dr5dvi().s[196]++;
      assignment = await classService.getAssignmentById(assignment_id);
      /* istanbul ignore next */
      cov_es6dr5dvi().s[197]++;
      if (assignment) {
        /* istanbul ignore next */
        cov_es6dr5dvi().b[38][0]++;
        const submissions =
        /* istanbul ignore next */
        (cov_es6dr5dvi().s[198]++, await classService.getAssignmentSubmissionByAssignmentId(assignment_id));
        /* istanbul ignore next */
        cov_es6dr5dvi().s[199]++;
        submission =
        /* istanbul ignore next */
        (cov_es6dr5dvi().b[39][0]++, submissions.find(s => {
          /* istanbul ignore next */
          cov_es6dr5dvi().f[38]++;
          cov_es6dr5dvi().s[200]++;
          return s.user_id === user_id;
        })) ||
        /* istanbul ignore next */
        (cov_es6dr5dvi().b[39][1]++, null);
      } else
      /* istanbul ignore next */
      {
        cov_es6dr5dvi().b[38][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_es6dr5dvi().s[201]++;
      console.error("Error fetching class assignment:", assignment_id, error);
    }
    /* istanbul ignore next */
    cov_es6dr5dvi().s[202]++;
    if (!assignment) {
      /* istanbul ignore next */
      cov_es6dr5dvi().b[40][0]++;
      cov_es6dr5dvi().s[203]++;
      return ctx.json({
        success: false,
        error: "Assignment not found"
      }, 404);
    } else
    /* istanbul ignore next */
    {
      cov_es6dr5dvi().b[40][1]++;
    }
    const currentDate =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[204]++, new Date());
    const dueDate =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[205]++, new Date(assignment.due_date));
    const daysUntilDue =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[206]++, Math.ceil((dueDate.getTime() - currentDate.getTime()) / (1000 * 60 * 60 * 24)));
    let status =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[207]++, "pending");
    /* istanbul ignore next */
    cov_es6dr5dvi().s[208]++;
    if (submission) {
      /* istanbul ignore next */
      cov_es6dr5dvi().b[41][0]++;
      cov_es6dr5dvi().s[209]++;
      status =
      /* istanbul ignore next */
      (cov_es6dr5dvi().b[43][0]++, submission.grade !== null) &&
      /* istanbul ignore next */
      (cov_es6dr5dvi().b[43][1]++, submission.grade !== undefined) ?
      /* istanbul ignore next */
      (cov_es6dr5dvi().b[42][0]++, "graded") :
      /* istanbul ignore next */
      (cov_es6dr5dvi().b[42][1]++, "submitted");
    } else {
      /* istanbul ignore next */
      cov_es6dr5dvi().b[41][1]++;
      cov_es6dr5dvi().s[210]++;
      if (dueDate < currentDate) {
        /* istanbul ignore next */
        cov_es6dr5dvi().b[44][0]++;
        cov_es6dr5dvi().s[211]++;
        status = "overdue";
      } else
      /* istanbul ignore next */
      {
        cov_es6dr5dvi().b[44][1]++;
      }
    }
    // Normalize assignment structure for response (class assignments only)
    const normalizedAssignment =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[212]++, {
      id: assignment.id,
      title: assignment.title,
      description: assignment.description,
      due_date: assignment.due_date,
      is_graded: assignment.is_graded,
      campus_id: assignment.campus_id,
      class_id: assignment.class_id,
      course_id: undefined,
      subject_id:
      /* istanbul ignore next */
      (cov_es6dr5dvi().b[45][0]++, assignment.subject_id) ||
      /* istanbul ignore next */
      (cov_es6dr5dvi().b[45][1]++, "unknown"),
      user_id:
      /* istanbul ignore next */
      (cov_es6dr5dvi().b[46][0]++, assignment.user_id) ||
      /* istanbul ignore next */
      (cov_es6dr5dvi().b[46][1]++, "unknown")
    });
    /* istanbul ignore next */
    cov_es6dr5dvi().s[213]++;
    return ctx.json({
      assignment: normalizedAssignment,
      submission,
      class_info: {
        id: assignment.class_id,
        name: "Class/Course Name",
        // Would need to fetch actual name
        subject_name: "Subject Name",
        // Would need to fetch actual name
        teacher_name: "Teacher Name" // Would need to fetch actual name
      },
      status,
      days_until_due: daysUntilDue,
      can_resubmit: true // Would depend on assignment settings
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_es6dr5dvi().s[214]++;
    console.error("Error fetching student assignment details:", error);
    /* istanbul ignore next */
    cov_es6dr5dvi().s[215]++;
    return ctx.json({
      success: false,
      error: "Failed to fetch assignment details"
    }, 500);
  }
};
/* istanbul ignore next */
cov_es6dr5dvi().s[216]++;
AssignmentController.submitAssignment = async ctx => {
  /* istanbul ignore next */
  cov_es6dr5dvi().f[39]++;
  cov_es6dr5dvi().s[217]++;
  try {
    const user_id =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[218]++, ctx.get("user_id"));
    const {
      assignment_id
    } =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[219]++, ctx.req.param());
    const data =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[220]++, await ctx.req.json());
    // Check if assignment exists
    const assignment =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[221]++, await classService.getAssignmentById(assignment_id));
    /* istanbul ignore next */
    cov_es6dr5dvi().s[222]++;
    if (!assignment) {
      /* istanbul ignore next */
      cov_es6dr5dvi().b[47][0]++;
      cov_es6dr5dvi().s[223]++;
      return ctx.json({
        success: false,
        error: "Assignment not found"
      }, 404);
    } else
    /* istanbul ignore next */
    {
      cov_es6dr5dvi().b[47][1]++;
    }
    // Check if already submitted
    const existingSubmissions =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[224]++, await classService.getAssignmentSubmissionByAssignmentId(assignment_id));
    const existingSubmission =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[225]++, existingSubmissions.find(s => {
      /* istanbul ignore next */
      cov_es6dr5dvi().f[40]++;
      cov_es6dr5dvi().s[226]++;
      return s.user_id === user_id;
    }));
    /* istanbul ignore next */
    cov_es6dr5dvi().s[227]++;
    if (existingSubmission) {
      /* istanbul ignore next */
      cov_es6dr5dvi().b[48][0]++;
      cov_es6dr5dvi().s[228]++;
      return ctx.json({
        success: false,
        error: "Assignment already submitted"
      }, 400);
    } else
    /* istanbul ignore next */
    {
      cov_es6dr5dvi().b[48][1]++;
    }
    // Check if overdue and late submission not allowed
    const currentDate =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[229]++, new Date());
    const dueDate =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[230]++, new Date(assignment.due_date));
    const isLate =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[231]++, currentDate > dueDate);
    /* istanbul ignore next */
    cov_es6dr5dvi().s[232]++;
    if (
    /* istanbul ignore next */
    (cov_es6dr5dvi().b[50][0]++, isLate) &&
    /* istanbul ignore next */
    (cov_es6dr5dvi().b[50][1]++, !assignment.is_graded)) {
      /* istanbul ignore next */
      cov_es6dr5dvi().b[49][0]++;
      cov_es6dr5dvi().s[233]++;
      // Assuming is_graded means late submission allowed
      return ctx.json({
        success: false,
        error: "Assignment is overdue and late submissions are not allowed"
      }, 400);
    } else
    /* istanbul ignore next */
    {
      cov_es6dr5dvi().b[49][1]++;
    }
    const submissionData =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[234]++, {
      campus_id: assignment.campus_id,
      user_id,
      submission_date: new Date(),
      meta_data: Object.assign({
        submission_content: data.submission_content,
        attachment_urls: data.attachment_urls,
        time_spent_minutes: data.time_spent_minutes
      }, data.meta_data)
    });
    const result =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[235]++, await classService.createAssignmentSubmission(assignment_id, submissionData));
    /* istanbul ignore next */
    cov_es6dr5dvi().s[236]++;
    return ctx.json({
      success: true,
      message: "Assignment submitted successfully",
      data: result,
      is_late: isLate
    }, 201);
  } catch (error) {
    /* istanbul ignore next */
    cov_es6dr5dvi().s[237]++;
    console.error("Error submitting assignment:", error);
    /* istanbul ignore next */
    cov_es6dr5dvi().s[238]++;
    return ctx.json({
      success: false,
      error: "Failed to submit assignment"
    }, 500);
  }
};
/* istanbul ignore next */
cov_es6dr5dvi().s[239]++;
AssignmentController.getStudentAssignmentDashboard = async ctx => {
  /* istanbul ignore next */
  cov_es6dr5dvi().f[41]++;
  cov_es6dr5dvi().s[240]++;
  try {
    const user_id =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[241]++, ctx.get("user_id"));
    const campus_id =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[242]++, ctx.get("campus_id"));
    // Temporarily return stub response until enhanced assignment service is fixed
    const dashboard =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[243]++, {
      success: true,
      dashboard: {
        total_assignments: 0,
        completed_count: 0,
        pending_count: 0,
        overdue_count: 0,
        upcoming_deadlines: [],
        recent_submissions: [],
        performance_metrics: {
          average_score: 0,
          completion_rate: 0,
          on_time_submission_rate: 0
        }
      },
      message: "Enhanced assignment service temporarily disabled"
    });
    /* istanbul ignore next */
    cov_es6dr5dvi().s[244]++;
    return ctx.json(dashboard);
  } catch (error) {
    /* istanbul ignore next */
    cov_es6dr5dvi().s[245]++;
    console.error("Error fetching student assignment dashboard:", error);
    /* istanbul ignore next */
    cov_es6dr5dvi().s[246]++;
    return ctx.json({
      success: false,
      error: "Failed to fetch student dashboard"
    }, 500);
  }
};
/* istanbul ignore next */
cov_es6dr5dvi().s[247]++;
AssignmentController.getStudentAssignmentPerformance = async ctx => {
  /* istanbul ignore next */
  cov_es6dr5dvi().f[42]++;
  cov_es6dr5dvi().s[248]++;
  try {
    const user_id =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[249]++, ctx.get("user_id"));
    const campus_id =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[250]++, ctx.get("campus_id"));
    const {
      period,
      subject_id
    } =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[251]++, ctx.req.query());
    // This would be implemented with performance analytics
    /* istanbul ignore next */
    cov_es6dr5dvi().s[252]++;
    return ctx.json({
      performance_trends: [],
      subject_performance: [],
      improvement_suggestions: ["Submit assignments earlier to avoid last-minute rush", "Review feedback from graded assignments", "Allocate more time for complex assignments"]
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_es6dr5dvi().s[253]++;
    console.error("Error fetching student assignment performance:", error);
    /* istanbul ignore next */
    cov_es6dr5dvi().s[254]++;
    return ctx.json({
      success: false,
      error: "Failed to fetch assignment performance"
    }, 500);
  }
};
// ======================= PARENT ROUTES =======================
/* istanbul ignore next */
cov_es6dr5dvi().s[255]++;
AssignmentController.getParentStudentAssignments = async ctx => {
  /* istanbul ignore next */
  cov_es6dr5dvi().f[43]++;
  cov_es6dr5dvi().s[256]++;
  try {
    const {
      student_id
    } =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[257]++, ctx.req.param());
    const campus_id =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[258]++, ctx.get("campus_id"));
    const {
      status,
      period
    } =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[259]++, ctx.req.query());
    // Verify parent has access to this student
    // This would require parent-child relationship validation
    const student =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[260]++, await UserService.getUser(student_id));
    /* istanbul ignore next */
    cov_es6dr5dvi().s[261]++;
    if (!student) {
      /* istanbul ignore next */
      cov_es6dr5dvi().b[51][0]++;
      cov_es6dr5dvi().s[262]++;
      return ctx.json({
        success: false,
        error: "Student not found"
      }, 404);
    } else
    /* istanbul ignore next */
    {
      cov_es6dr5dvi().b[51][1]++;
    }
    // Temporarily return stub response until enhanced assignment service is fixed
    const assignments =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[263]++, []);
    const summary =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[264]++, {
      total_assignments: 0,
      completed_count: 0,
      pending_count: 0,
      overdue_count: 0
    });
    /* istanbul ignore next */
    cov_es6dr5dvi().s[265]++;
    return ctx.json({
      student_info: {
        id: student.id,
        name: `${student.first_name} ${student.last_name}`,
        class: "Class Name",
        // Would need to fetch from enrollment
        current_academic_year: "2024-2025" // Would be dynamic
      },
      assignments: [],
      // Empty until enhanced assignment service is available
      summary: {
        total_assignments: 0,
        submitted_on_time: 0,
        late_submissions: 0,
        pending: 0,
        average_grade: undefined,
        completion_rate: 0
      },
      alerts: [] // Empty until enhanced assignment service is available
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_es6dr5dvi().s[266]++;
    console.error("Error fetching parent student assignments:", error);
    /* istanbul ignore next */
    cov_es6dr5dvi().s[267]++;
    return ctx.json({
      success: false,
      error: "Failed to fetch student assignments"
    }, 500);
  }
};
/* istanbul ignore next */
cov_es6dr5dvi().s[268]++;
AssignmentController.getParentStudentPerformance = async ctx => {
  /* istanbul ignore next */
  cov_es6dr5dvi().f[44]++;
  cov_es6dr5dvi().s[269]++;
  try {
    const {
      student_id
    } =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[270]++, ctx.req.param());
    const {
      period
    } =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[271]++, ctx.req.query());
    // This would be implemented with parent-specific performance analytics
    /* istanbul ignore next */
    cov_es6dr5dvi().s[272]++;
    return ctx.json({
      student_info: {
        id: student_id,
        name: "Student Name",
        class: "Class Name"
      },
      performance_summary: {
        total_assignments: 0,
        submitted_on_time: 0,
        late_submissions: 0,
        pending: 0,
        average_grade: 0,
        grade_trend: "stable"
      },
      recent_assignments: [],
      alerts: []
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_es6dr5dvi().s[273]++;
    console.error("Error fetching parent student performance:", error);
    /* istanbul ignore next */
    cov_es6dr5dvi().s[274]++;
    return ctx.json({
      success: false,
      error: "Failed to fetch student performance"
    }, 500);
  }
};
// ======================= SHARED ROUTES =======================
/* istanbul ignore next */
cov_es6dr5dvi().s[275]++;
AssignmentController.getAssignmentById = async ctx => {
  /* istanbul ignore next */
  cov_es6dr5dvi().f[45]++;
  cov_es6dr5dvi().s[276]++;
  try {
    const {
      assignment_id
    } =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[277]++, ctx.req.param());
    const user_type =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[278]++, ctx.get("user_type"));
    // Only get class assignments
    const assignment =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[279]++, await classService.getAssignmentById(assignment_id));
    /* istanbul ignore next */
    cov_es6dr5dvi().s[280]++;
    if (!assignment) {
      /* istanbul ignore next */
      cov_es6dr5dvi().b[52][0]++;
      cov_es6dr5dvi().s[281]++;
      return ctx.json({
        success: false,
        error: "Assignment not found"
      }, 404);
    } else
    /* istanbul ignore next */
    {
      cov_es6dr5dvi().b[52][1]++;
    }
    // Normalize assignment structure for response (class assignments only)
    const normalizedAssignment =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[282]++, {
      id: assignment.id,
      title: assignment.title,
      description: assignment.description,
      due_date: assignment.due_date,
      is_graded: assignment.is_graded,
      campus_id: assignment.campus_id,
      class_id: assignment.class_id,
      course_id: undefined,
      subject_id:
      /* istanbul ignore next */
      (cov_es6dr5dvi().b[53][0]++, assignment.subject_id) ||
      /* istanbul ignore next */
      (cov_es6dr5dvi().b[53][1]++, "unknown"),
      user_id:
      /* istanbul ignore next */
      (cov_es6dr5dvi().b[54][0]++, assignment.user_id) ||
      /* istanbul ignore next */
      (cov_es6dr5dvi().b[54][1]++, "unknown"),
      meta_data: assignment.meta_data,
      created_at: assignment.created_at,
      updated_at: assignment.updated_at
    });
    // Filter response based on user type
    // Students should not see internal teacher notes, etc.
    /* istanbul ignore next */
    cov_es6dr5dvi().s[283]++;
    return ctx.json(normalizedAssignment);
  } catch (error) {
    /* istanbul ignore next */
    cov_es6dr5dvi().s[284]++;
    console.error("Error fetching assignment by ID:", error);
    /* istanbul ignore next */
    cov_es6dr5dvi().s[285]++;
    return ctx.json({
      success: false,
      error: "Failed to fetch assignment"
    }, 500);
  }
};
/* istanbul ignore next */
cov_es6dr5dvi().s[286]++;
AssignmentController.updateAssignment = async ctx => {
  /* istanbul ignore next */
  cov_es6dr5dvi().f[46]++;
  cov_es6dr5dvi().s[287]++;
  try {
    const {
      assignment_id
    } =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[288]++, ctx.req.param());
    const data =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[289]++, await ctx.req.json());
    // Only update class assignments
    const result =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[290]++, await classService.updateAssignment(assignment_id, data));
    /* istanbul ignore next */
    cov_es6dr5dvi().s[291]++;
    if (!result) {
      /* istanbul ignore next */
      cov_es6dr5dvi().b[55][0]++;
      cov_es6dr5dvi().s[292]++;
      return ctx.json({
        success: false,
        error: "Assignment not found or update failed"
      }, 404);
    } else
    /* istanbul ignore next */
    {
      cov_es6dr5dvi().b[55][1]++;
    }
    cov_es6dr5dvi().s[293]++;
    return ctx.json({
      success: true,
      message: "Assignment updated successfully",
      data: result,
      assignment_type: "class"
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_es6dr5dvi().s[294]++;
    console.error("Error updating assignment:", error);
    /* istanbul ignore next */
    cov_es6dr5dvi().s[295]++;
    return ctx.json({
      success: false,
      error: "Failed to update assignment"
    }, 500);
  }
};
/* istanbul ignore next */
cov_es6dr5dvi().s[296]++;
AssignmentController.deleteAssignment = async ctx => {
  /* istanbul ignore next */
  cov_es6dr5dvi().f[47]++;
  cov_es6dr5dvi().s[297]++;
  try {
    const {
      assignment_id
    } =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[298]++, ctx.req.param());
    // Only delete class assignments
    const success =
    /* istanbul ignore next */
    (cov_es6dr5dvi().s[299]++, await classService.deleteAssignment(assignment_id));
    /* istanbul ignore next */
    cov_es6dr5dvi().s[300]++;
    if (!success) {
      /* istanbul ignore next */
      cov_es6dr5dvi().b[56][0]++;
      cov_es6dr5dvi().s[301]++;
      return ctx.json({
        success: false,
        error: "Assignment not found or delete failed"
      }, 404);
    } else
    /* istanbul ignore next */
    {
      cov_es6dr5dvi().b[56][1]++;
    }
    cov_es6dr5dvi().s[302]++;
    return ctx.json({
      success: true,
      message: "Assignment deleted successfully",
      assignment_type: "class"
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_es6dr5dvi().s[303]++;
    console.error("Error deleting assignment:", error);
    /* istanbul ignore next */
    cov_es6dr5dvi().s[304]++;
    return ctx.json({
      success: false,
      error: "Failed to delete assignment"
    }, 500);
  }
};