70410537a4700c71e39301011a29949a
/* istanbul ignore next */
function cov_2l62aymuk0() {
  var path = "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/models/android_apk.model.ts";
  var hash = "239dfa3d2fc67eece4b3e90ca49cf180d0affdbe";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/models/android_apk.model.ts",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 25
        },
        end: {
          line: 10,
          column: 2
        }
      },
      "1": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 65
        }
      },
      "2": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 13,
          column: 57
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 16,
          column: 2
        }
      },
      "4": {
        start: {
          line: 17,
          column: 26
        },
        end: {
          line: 17,
          column: 73
        }
      },
      "5": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 26,
          column: 2
        }
      },
      "6": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 25,
          column: 5
        }
      },
      "7": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 51
        }
      },
      "8": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 20
        }
      },
      "9": {
        start: {
          line: 27,
          column: 0
        },
        end: {
          line: 34,
          column: 2
        }
      },
      "10": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 33,
          column: 5
        }
      },
      "11": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 47
        }
      },
      "12": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 20
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 19,
            column: 31
          },
          end: {
            line: 19,
            column: 32
          }
        },
        loc: {
          start: {
            line: 19,
            column: 60
          },
          end: {
            line: 26,
            column: 1
          }
        },
        line: 19
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 27,
            column: 27
          },
          end: {
            line: 27,
            column: 28
          }
        },
        loc: {
          start: {
            line: 27,
            column: 52
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 27
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "239dfa3d2fc67eece4b3e90ca49cf180d0affdbe"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2l62aymuk0 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2l62aymuk0();
// Android APK store model
import { Schema } from "ottoman";
import { ottoman } from "../libs/db";
const AndroidApkSchema =
/* istanbul ignore next */
(cov_2l62aymuk0().s[0]++, new Schema({
  packageName: {
    type: String,
    required: true
  },
  version: {
    type: String,
    required: true
  },
  filePath: {
    type: String,
    required: true
  },
  fileSize: {
    type: Number,
    required: false
  },
  uploadDate: {
    type: Date,
    default: Date.now
  }
}));
// Add indexes for better query performance
/* istanbul ignore next */
cov_2l62aymuk0().s[1]++;
AndroidApkSchema.index.findByPackageName = {
  by: "packageName"
};
/* istanbul ignore next */
cov_2l62aymuk0().s[2]++;
AndroidApkSchema.index.findByVersion = {
  by: "version"
};
/* istanbul ignore next */
cov_2l62aymuk0().s[3]++;
AndroidApkSchema.index.findByPackageNameAndVersion = {
  by: ["packageName", "version"]
};
export const AndroidApk =
/* istanbul ignore next */
(cov_2l62aymuk0().s[4]++, ottoman.model("android_apks", AndroidApkSchema));
// Add static methods to the model
/* istanbul ignore next */
cov_2l62aymuk0().s[5]++;
AndroidApk.findByPackageName = async function (packageName) {
  /* istanbul ignore next */
  cov_2l62aymuk0().f[0]++;
  cov_2l62aymuk0().s[6]++;
  try {
    /* istanbul ignore next */
    cov_2l62aymuk0().s[7]++;
    return await this.findOne({
      packageName
    });
  } catch (_a) {
    /* istanbul ignore next */
    cov_2l62aymuk0().s[8]++;
    return null;
  }
};
/* istanbul ignore next */
cov_2l62aymuk0().s[9]++;
AndroidApk.findByVersion = async function (version) {
  /* istanbul ignore next */
  cov_2l62aymuk0().f[1]++;
  cov_2l62aymuk0().s[10]++;
  try {
    /* istanbul ignore next */
    cov_2l62aymuk0().s[11]++;
    return await this.findOne({
      version
    });
  } catch (_a) {
    /* istanbul ignore next */
    cov_2l62aymuk0().s[12]++;
    return null;
  }
};