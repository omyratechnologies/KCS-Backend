3db54a64e9b4d42f869de305f518f5ae
/* istanbul ignore next */
function cov_1hrt8vq44z() {
  var path = "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/utils/email-test.ts";
  var hash = "7eaa22f6d32ac60991f7b1ced9e6cacb2cac4536";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/utils/email-test.ts",
    statementMap: {
      "0": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 25,
          column: 5
        }
      },
      "1": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "2": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 20,
          column: 11
        }
      },
      "3": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 58
        }
      },
      "4": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 56
        }
      },
      "5": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 45,
          column: 5
        }
      },
      "6": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 54
        }
      },
      "7": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 40,
          column: 11
        }
      },
      "8": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 66
        }
      },
      "9": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 58
        }
      },
      "10": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 49,
          column: 48
        }
      },
      "11": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 51,
          column: 29
        }
      },
      "12": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 52,
          column: 20
        }
      },
      "13": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 54,
          column: 27
        }
      },
      "14": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 55,
          column: 20
        }
      },
      "15": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 56,
          column: 45
        }
      }
    },
    fnMap: {
      "0": {
        name: "testWelcomeEmail",
        decl: {
          start: {
            line: 10,
            column: 15
          },
          end: {
            line: 10,
            column: 31
          }
        },
        loc: {
          start: {
            line: 10,
            column: 34
          },
          end: {
            line: 26,
            column: 1
          }
        },
        line: 10
      },
      "1": {
        name: "testNodemailer",
        decl: {
          start: {
            line: 28,
            column: 15
          },
          end: {
            line: 28,
            column: 29
          }
        },
        loc: {
          start: {
            line: 28,
            column: 32
          },
          end: {
            line: 46,
            column: 1
          }
        },
        line: 28
      },
      "2": {
        name: "runEmailTests",
        decl: {
          start: {
            line: 48,
            column: 15
          },
          end: {
            line: 48,
            column: 28
          }
        },
        loc: {
          start: {
            line: 48,
            column: 31
          },
          end: {
            line: 57,
            column: 1
          }
        },
        line: 48
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7eaa22f6d32ac60991f7b1ced9e6cacb2cac4536"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1hrt8vq44z = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1hrt8vq44z();
/**
 * Email Test Script
 *
 * This script demonstrates how to test the email functionality.
 * Run this in your development environment to verify email setup.
 */
import { sendWelcomeEmail } from "@/libs/mailer";
import { sendEmailWithNodemailer } from "@/libs/mailer/nodemailer.config";
// Test welcome email
async function testWelcomeEmail() {
  /* istanbul ignore next */
  cov_1hrt8vq44z().f[0]++;
  cov_1hrt8vq44z().s[0]++;
  try {
    /* istanbul ignore next */
    cov_1hrt8vq44z().s[1]++;
    console.log("Testing welcome email...");
    /* istanbul ignore next */
    cov_1hrt8vq44z().s[2]++;
    await sendWelcomeEmail("test@example.com", {
      first_name: "John",
      last_name: "Doe",
      email: "test@example.com",
      user_type: "Student",
      user_id: "TEST123456",
      campus_name: "Test Campus"
    });
    /* istanbul ignore next */
    cov_1hrt8vq44z().s[3]++;
    console.log("‚úÖ Welcome email sent successfully!");
  } catch (error) {
    /* istanbul ignore next */
    cov_1hrt8vq44z().s[4]++;
    console.error("‚ùå Welcome email failed:", error);
  }
}
// Test nodemailer directly
async function testNodemailer() {
  /* istanbul ignore next */
  cov_1hrt8vq44z().f[1]++;
  cov_1hrt8vq44z().s[5]++;
  try {
    /* istanbul ignore next */
    cov_1hrt8vq44z().s[6]++;
    console.log("Testing nodemailer directly...");
    /* istanbul ignore next */
    cov_1hrt8vq44z().s[7]++;
    await sendEmailWithNodemailer({
      to: "test@example.com",
      subject: "Test Email from KCS",
      text: "This is a test email from the KCS platform.",
      html: `
                <h2>Test Email</h2>
                <p>This is a test email from the KCS platform.</p>
                <p>If you receive this, your email configuration is working correctly!</p>
            `
    });
    /* istanbul ignore next */
    cov_1hrt8vq44z().s[8]++;
    console.log("‚úÖ Nodemailer test email sent successfully!");
  } catch (error) {
    /* istanbul ignore next */
    cov_1hrt8vq44z().s[9]++;
    console.error("‚ùå Nodemailer test failed:", error);
  }
}
// Run tests
async function runEmailTests() {
  /* istanbul ignore next */
  cov_1hrt8vq44z().f[2]++;
  cov_1hrt8vq44z().s[10]++;
  console.log("üöÄ Starting email tests...\n");
  // Test 1: Welcome Email
  /* istanbul ignore next */
  cov_1hrt8vq44z().s[11]++;
  await testWelcomeEmail();
  /* istanbul ignore next */
  cov_1hrt8vq44z().s[12]++;
  console.log("");
  // Test 2: Direct Nodemailer
  /* istanbul ignore next */
  cov_1hrt8vq44z().s[13]++;
  await testNodemailer();
  /* istanbul ignore next */
  cov_1hrt8vq44z().s[14]++;
  console.log("");
  /* istanbul ignore next */
  cov_1hrt8vq44z().s[15]++;
  console.log("üìß Email tests completed!");
}
// Export for manual testing
export { runEmailTests, testNodemailer, testWelcomeEmail };
// Uncomment to run when this file is executed directly
// runEmailTests().catch(console.error);