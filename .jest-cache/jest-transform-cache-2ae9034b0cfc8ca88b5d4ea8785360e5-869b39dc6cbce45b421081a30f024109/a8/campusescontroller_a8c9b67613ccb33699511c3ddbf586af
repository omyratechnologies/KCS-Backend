80af5c60b4fa2c16bcc7af03ab05f37a
/* istanbul ignore next */
function cov_1safczbh86() {
  var path = "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/controllers/campuses.controller.ts";
  var hash = "00fecb04fe32c44b68b3e22cf197a48ec9174a41";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/controllers/campuses.controller.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 24
        }
      },
      "1": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 25,
          column: 2
        }
      },
      "2": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 24,
          column: 5
        }
      },
      "3": {
        start: {
          line: 9,
          column: 53
        },
        end: {
          line: 9,
          column: 71
        }
      },
      "4": {
        start: {
          line: 10,
          column: 25
        },
        end: {
          line: 15,
          column: 10
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 32
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 23,
          column: 9
        }
      },
      "7": {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 22,
          column: 20
        }
      },
      "8": {
        start: {
          line: 27,
          column: 0
        },
        end: {
          line: 39,
          column: 2
        }
      },
      "9": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "10": {
        start: {
          line: 29,
          column: 25
        },
        end: {
          line: 29,
          column: 58
        }
      },
      "11": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 32
        }
      },
      "12": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 37,
          column: 9
        }
      },
      "13": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 36,
          column: 20
        }
      },
      "14": {
        start: {
          line: 41,
          column: 0
        },
        end: {
          line: 54,
          column: 2
        }
      },
      "15": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "16": {
        start: {
          line: 43,
          column: 23
        },
        end: {
          line: 43,
          column: 36
        }
      },
      "17": {
        start: {
          line: 44,
          column: 25
        },
        end: {
          line: 44,
          column: 58
        }
      },
      "18": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 32
        }
      },
      "19": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 52,
          column: 9
        }
      },
      "20": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 51,
          column: 20
        }
      },
      "21": {
        start: {
          line: 56,
          column: 0
        },
        end: {
          line: 74,
          column: 2
        }
      },
      "22": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 73,
          column: 5
        }
      },
      "23": {
        start: {
          line: 58,
          column: 23
        },
        end: {
          line: 58,
          column: 36
        }
      },
      "24": {
        start: {
          line: 59,
          column: 21
        },
        end: {
          line: 59,
          column: 39
        }
      },
      "25": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 62,
          column: 11
        }
      },
      "26": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 65,
          column: 11
        }
      },
      "27": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 72,
          column: 9
        }
      },
      "28": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 71,
          column: 20
        }
      },
      "29": {
        start: {
          line: 76,
          column: 0
        },
        end: {
          line: 91,
          column: 2
        }
      },
      "30": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 90,
          column: 5
        }
      },
      "31": {
        start: {
          line: 78,
          column: 23
        },
        end: {
          line: 78,
          column: 36
        }
      },
      "32": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 45
        }
      },
      "33": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 82,
          column: 11
        }
      },
      "34": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 89,
          column: 9
        }
      },
      "35": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 88,
          column: 20
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 34
          },
          end: {
            line: 7,
            column: 35
          }
        },
        loc: {
          start: {
            line: 7,
            column: 47
          },
          end: {
            line: 25,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 27,
            column: 33
          },
          end: {
            line: 27,
            column: 34
          }
        },
        loc: {
          start: {
            line: 27,
            column: 46
          },
          end: {
            line: 39,
            column: 1
          }
        },
        line: 27
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 41,
            column: 31
          },
          end: {
            line: 41,
            column: 32
          }
        },
        loc: {
          start: {
            line: 41,
            column: 44
          },
          end: {
            line: 54,
            column: 1
          }
        },
        line: 41
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 56,
            column: 34
          },
          end: {
            line: 56,
            column: 35
          }
        },
        loc: {
          start: {
            line: 56,
            column: 47
          },
          end: {
            line: 74,
            column: 1
          }
        },
        line: 56
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 76,
            column: 34
          },
          end: {
            line: 76,
            column: 35
          }
        },
        loc: {
          start: {
            line: 76,
            column: 47
          },
          end: {
            line: 91,
            column: 1
          }
        },
        line: 76
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "1": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "2": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 52,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 52,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "3": {
        loc: {
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "4": {
        loc: {
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 89,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 89,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "00fecb04fe32c44b68b3e22cf197a48ec9174a41"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1safczbh86 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1safczbh86();
var _a;
import { CampusService } from "@/services/campuses.service";
export class CampusesController {}
/* istanbul ignore next */
cov_1safczbh86().s[0]++;
_a = CampusesController;
// Create
/* istanbul ignore next */
cov_1safczbh86().s[1]++;
CampusesController.createCampus = async c => {
  /* istanbul ignore next */
  cov_1safczbh86().f[0]++;
  cov_1safczbh86().s[2]++;
  try {
    const {
      name,
      address,
      domain,
      meta_data
    } =
    /* istanbul ignore next */
    (cov_1safczbh86().s[3]++, await c.req.json());
    const campuses =
    /* istanbul ignore next */
    (cov_1safczbh86().s[4]++, await CampusService.createCampus({
      name,
      address,
      domain,
      meta_data
    }));
    /* istanbul ignore next */
    cov_1safczbh86().s[5]++;
    return c.json(campuses);
  } catch (error) {
    /* istanbul ignore next */
    cov_1safczbh86().s[6]++;
    if (error instanceof Error) {
      /* istanbul ignore next */
      cov_1safczbh86().b[0][0]++;
      cov_1safczbh86().s[7]++;
      return c.json({
        message: error.message
      }, 400);
    } else
    /* istanbul ignore next */
    {
      cov_1safczbh86().b[0][1]++;
    }
  }
};
// Get All
/* istanbul ignore next */
cov_1safczbh86().s[8]++;
CampusesController.getCampuses = async c => {
  /* istanbul ignore next */
  cov_1safczbh86().f[1]++;
  cov_1safczbh86().s[9]++;
  try {
    const campuses =
    /* istanbul ignore next */
    (cov_1safczbh86().s[10]++, await CampusService.getCampuses());
    /* istanbul ignore next */
    cov_1safczbh86().s[11]++;
    return c.json(campuses);
  } catch (error) {
    /* istanbul ignore next */
    cov_1safczbh86().s[12]++;
    if (error instanceof Error) {
      /* istanbul ignore next */
      cov_1safczbh86().b[1][0]++;
      cov_1safczbh86().s[13]++;
      return c.json({
        message: error.message
      }, 400);
    } else
    /* istanbul ignore next */
    {
      cov_1safczbh86().b[1][1]++;
    }
  }
};
// Get One
/* istanbul ignore next */
cov_1safczbh86().s[14]++;
CampusesController.getCampus = async c => {
  /* istanbul ignore next */
  cov_1safczbh86().f[2]++;
  cov_1safczbh86().s[15]++;
  try {
    const {
      id
    } =
    /* istanbul ignore next */
    (cov_1safczbh86().s[16]++, c.req.param());
    const campuses =
    /* istanbul ignore next */
    (cov_1safczbh86().s[17]++, await CampusService.getCampus(id));
    /* istanbul ignore next */
    cov_1safczbh86().s[18]++;
    return c.json(campuses);
  } catch (error) {
    /* istanbul ignore next */
    cov_1safczbh86().s[19]++;
    if (error instanceof Error) {
      /* istanbul ignore next */
      cov_1safczbh86().b[2][0]++;
      cov_1safczbh86().s[20]++;
      return c.json({
        message: error.message
      }, 400);
    } else
    /* istanbul ignore next */
    {
      cov_1safczbh86().b[2][1]++;
    }
  }
};
// Update
/* istanbul ignore next */
cov_1safczbh86().s[21]++;
CampusesController.updateCampus = async c => {
  /* istanbul ignore next */
  cov_1safczbh86().f[3]++;
  cov_1safczbh86().s[22]++;
  try {
    const {
      id
    } =
    /* istanbul ignore next */
    (cov_1safczbh86().s[23]++, c.req.param());
    const data =
    /* istanbul ignore next */
    (cov_1safczbh86().s[24]++, await c.req.json());
    /* istanbul ignore next */
    cov_1safczbh86().s[25]++;
    await CampusService.updateCampus(id, {
      data
    });
    /* istanbul ignore next */
    cov_1safczbh86().s[26]++;
    return c.json({
      message: "Campuses updated successfully"
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1safczbh86().s[27]++;
    if (error instanceof Error) {
      /* istanbul ignore next */
      cov_1safczbh86().b[3][0]++;
      cov_1safczbh86().s[28]++;
      return c.json({
        message: error.message
      }, 400);
    } else
    /* istanbul ignore next */
    {
      cov_1safczbh86().b[3][1]++;
    }
  }
};
// Delete
/* istanbul ignore next */
cov_1safczbh86().s[29]++;
CampusesController.deleteCampus = async c => {
  /* istanbul ignore next */
  cov_1safczbh86().f[4]++;
  cov_1safczbh86().s[30]++;
  try {
    const {
      id
    } =
    /* istanbul ignore next */
    (cov_1safczbh86().s[31]++, c.req.param());
    /* istanbul ignore next */
    cov_1safczbh86().s[32]++;
    await CampusService.deleteCampus(id);
    /* istanbul ignore next */
    cov_1safczbh86().s[33]++;
    return c.json({
      message: "Campuses deleted successfully"
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1safczbh86().s[34]++;
    if (error instanceof Error) {
      /* istanbul ignore next */
      cov_1safczbh86().b[4][0]++;
      cov_1safczbh86().s[35]++;
      return c.json({
        message: error.message
      }, 400);
    } else
    /* istanbul ignore next */
    {
      cov_1safczbh86().b[4][1]++;
    }
  }
};