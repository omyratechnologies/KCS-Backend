fc8a0b68b8a537d38e9c78eba648c63f
/* istanbul ignore next */
function cov_29k2we7k39() {
  var path = "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/services/subject.service.ts";
  var hash = "734a1403290815f393de39ca2f3e0bb6ac101770";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/services/subject.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 21
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "1": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 9,
          column: 200
        }
      },
      "2": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 12,
          column: 9
        }
      },
      "3": {
        start: {
          line: 11,
          column: 12
        },
        end: {
          line: 11,
          column: 51
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 23
        }
      },
      "5": {
        start: {
          line: 17,
          column: 25
        },
        end: {
          line: 23,
          column: 10
        }
      },
      "6": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 26,
          column: 9
        }
      },
      "7": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 25,
          column: 49
        }
      },
      "8": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 29
        }
      },
      "9": {
        start: {
          line: 31,
          column: 24
        },
        end: {
          line: 31,
          column: 50
        }
      },
      "10": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 34,
          column: 9
        }
      },
      "11": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 33,
          column: 49
        }
      },
      "12": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 23
        }
      },
      "13": {
        start: {
          line: 39,
          column: 24
        },
        end: {
          line: 39,
          column: 127
        }
      },
      "14": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 42,
          column: 9
        }
      },
      "15": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 51
        }
      },
      "16": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 23
        }
      },
      "17": {
        start: {
          line: 47,
          column: 24
        },
        end: {
          line: 53,
          column: 10
        }
      },
      "18": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "19": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 68
        }
      },
      "20": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 23
        }
      },
      "21": {
        start: {
          line: 61,
          column: 31
        },
        end: {
          line: 67,
          column: 10
        }
      },
      "22": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "23": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 55
        }
      },
      "24": {
        start: {
          line: 71,
          column: 31
        },
        end: {
          line: 73,
          column: 10
        }
      },
      "25": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 75
        }
      },
      "26": {
        start: {
          line: 74,
          column: 23
        },
        end: {
          line: 74,
          column: 56
        }
      },
      "27": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 77,
          column: 9
        }
      },
      "28": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 55
        }
      },
      "29": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 22
        }
      },
      "30": {
        start: {
          line: 82,
          column: 31
        },
        end: {
          line: 88,
          column: 10
        }
      },
      "31": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 91,
          column: 9
        }
      },
      "32": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 55
        }
      },
      "33": {
        start: {
          line: 92,
          column: 31
        },
        end: {
          line: 94,
          column: 10
        }
      },
      "34": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 70
        }
      },
      "35": {
        start: {
          line: 95,
          column: 23
        },
        end: {
          line: 95,
          column: 56
        }
      },
      "36": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 98,
          column: 9
        }
      },
      "37": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 97,
          column: 55
        }
      },
      "38": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 99,
          column: 22
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 8,
            column: 5
          }
        },
        loc: {
          start: {
            line: 8,
            column: 54
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 42
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 36
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 30
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        loc: {
          start: {
            line: 38,
            column: 48
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 38
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        loc: {
          start: {
            line: 46,
            column: 35
          },
          end: {
            line: 58,
            column: 5
          }
        },
        line: 46
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        },
        loc: {
          start: {
            line: 60,
            column: 57
          },
          end: {
            line: 79,
            column: 5
          }
        },
        line: 60
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 71,
            column: 55
          },
          end: {
            line: 71,
            column: 56
          }
        },
        loc: {
          start: {
            line: 71,
            column: 74
          },
          end: {
            line: 73,
            column: 9
          }
        },
        line: 71
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        },
        loc: {
          start: {
            line: 81,
            column: 57
          },
          end: {
            line: 100,
            column: 5
          }
        },
        line: 81
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 92,
            column: 55
          },
          end: {
            line: 92,
            column: 56
          }
        },
        loc: {
          start: {
            line: 92,
            column: 74
          },
          end: {
            line: 94,
            column: 9
          }
        },
        line: 92
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 10,
            column: 8
          },
          end: {
            line: 12,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 8
          },
          end: {
            line: 12,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "1": {
        loc: {
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "2": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "3": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "4": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "5": {
        loc: {
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "6": {
        loc: {
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "7": {
        loc: {
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 89
      },
      "8": {
        loc: {
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "734a1403290815f393de39ca2f3e0bb6ac101770"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_29k2we7k39 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_29k2we7k39();
import { ClassSubject } from "@/models/class_subject.model";
import { Subject } from "@/models/subject.model";
import { ClassService } from "./class.service";
import { TeacherService } from "./teacher.service";
const classService =
/* istanbul ignore next */
(cov_29k2we7k39().s[0]++, new ClassService());
export class SubjectService {
  // Create a new subject
  static async createSubject(campusId, subjectData) {
    /* istanbul ignore next */
    cov_29k2we7k39().f[0]++;
    const subject =
    /* istanbul ignore next */
    (cov_29k2we7k39().s[1]++, await Subject.create(Object.assign(Object.assign({
      campus_id: campusId
    }, subjectData), {
      is_active: true,
      is_deleted: false,
      created_at: new Date(),
      updated_at: new Date()
    })));
    /* istanbul ignore next */
    cov_29k2we7k39().s[2]++;
    if (!subject) {
      /* istanbul ignore next */
      cov_29k2we7k39().b[0][0]++;
      cov_29k2we7k39().s[3]++;
      throw new Error("Subject not created");
    } else
    /* istanbul ignore next */
    {
      cov_29k2we7k39().b[0][1]++;
    }
    cov_29k2we7k39().s[4]++;
    return subject;
  }
  // Get all subjects for a campus
  static async getAllSubjects(campusId) {
    /* istanbul ignore next */
    cov_29k2we7k39().f[1]++;
    const subjects =
    /* istanbul ignore next */
    (cov_29k2we7k39().s[5]++, await Subject.find({
      campus_id: campusId
    }, {
      sort: {
        updated_at: "DESC"
      }
    }));
    /* istanbul ignore next */
    cov_29k2we7k39().s[6]++;
    if (subjects.rows.length === 0) {
      /* istanbul ignore next */
      cov_29k2we7k39().b[1][0]++;
      cov_29k2we7k39().s[7]++;
      throw new Error("No subjects found");
    } else
    /* istanbul ignore next */
    {
      cov_29k2we7k39().b[1][1]++;
    }
    cov_29k2we7k39().s[8]++;
    return subjects.rows;
  }
  // Get a subject by ID
  static async getSubjectById(id) {
    /* istanbul ignore next */
    cov_29k2we7k39().f[2]++;
    const subject =
    /* istanbul ignore next */
    (cov_29k2we7k39().s[9]++, await Subject.findById(id));
    /* istanbul ignore next */
    cov_29k2we7k39().s[10]++;
    if (!subject) {
      /* istanbul ignore next */
      cov_29k2we7k39().b[2][0]++;
      cov_29k2we7k39().s[11]++;
      throw new Error("Subject not found");
    } else
    /* istanbul ignore next */
    {
      cov_29k2we7k39().b[2][1]++;
    }
    cov_29k2we7k39().s[12]++;
    return subject;
  }
  // Update a subject
  static async updateSubject(id, subjectData) {
    /* istanbul ignore next */
    cov_29k2we7k39().f[3]++;
    const subject =
    /* istanbul ignore next */
    (cov_29k2we7k39().s[13]++, await Subject.updateById(id, Object.assign(Object.assign({}, subjectData), {
      updated_at: new Date()
    })));
    /* istanbul ignore next */
    cov_29k2we7k39().s[14]++;
    if (!subject) {
      /* istanbul ignore next */
      cov_29k2we7k39().b[3][0]++;
      cov_29k2we7k39().s[15]++;
      throw new Error("Subject not updated");
    } else
    /* istanbul ignore next */
    {
      cov_29k2we7k39().b[3][1]++;
    }
    cov_29k2we7k39().s[16]++;
    return subject;
  }
  // Delete a subject
  static async deleteSubject(id) {
    /* istanbul ignore next */
    cov_29k2we7k39().f[4]++;
    const subject =
    /* istanbul ignore next */
    (cov_29k2we7k39().s[17]++, await Subject.findOneAndUpdate({
      id: id,
      is_deleted: false
    }, {
      is_deleted: true,
      updated_at: new Date()
    }));
    /* istanbul ignore next */
    cov_29k2we7k39().s[18]++;
    if (!subject) {
      /* istanbul ignore next */
      cov_29k2we7k39().b[4][0]++;
      cov_29k2we7k39().s[19]++;
      throw new Error("Subject not found or already deleted");
    } else
    /* istanbul ignore next */
    {
      cov_29k2we7k39().b[4][1]++;
    }
    cov_29k2we7k39().s[20]++;
    return subject;
  }
  // Get all teachers for a subject
  static async getAllTeacherForASubjectById(subjectId) {
    /* istanbul ignore next */
    cov_29k2we7k39().f[5]++;
    const class_subjects =
    /* istanbul ignore next */
    (cov_29k2we7k39().s[21]++, await ClassSubject.find({
      subject_id: subjectId
    }, {
      sort: {
        updated_at: "DESC"
      }
    }));
    /* istanbul ignore next */
    cov_29k2we7k39().s[22]++;
    if (class_subjects.rows.length === 0) {
      /* istanbul ignore next */
      cov_29k2we7k39().b[5][0]++;
      cov_29k2we7k39().s[23]++;
      throw new Error("No class subjects found");
    } else
    /* istanbul ignore next */
    {
      cov_29k2we7k39().b[5][1]++;
    }
    const resultPromises =
    /* istanbul ignore next */
    (cov_29k2we7k39().s[24]++, class_subjects.rows.map(class_subject => {
      /* istanbul ignore next */
      cov_29k2we7k39().f[6]++;
      cov_29k2we7k39().s[25]++;
      return TeacherService.getTeacherById(class_subject.teacher_id);
    }));
    const result =
    /* istanbul ignore next */
    (cov_29k2we7k39().s[26]++, await Promise.all(resultPromises));
    /* istanbul ignore next */
    cov_29k2we7k39().s[27]++;
    if (!result) {
      /* istanbul ignore next */
      cov_29k2we7k39().b[6][0]++;
      cov_29k2we7k39().s[28]++;
      throw new Error("No class subjects found");
    } else
    /* istanbul ignore next */
    {
      cov_29k2we7k39().b[6][1]++;
    }
    cov_29k2we7k39().s[29]++;
    return result;
  }
  // Get all classes for a subject
  static async getAllClassesForASubjectById(subjectId) {
    /* istanbul ignore next */
    cov_29k2we7k39().f[7]++;
    const class_subjects =
    /* istanbul ignore next */
    (cov_29k2we7k39().s[30]++, await ClassSubject.find({
      subject_id: subjectId
    }, {
      sort: {
        updated_at: "DESC"
      }
    }));
    /* istanbul ignore next */
    cov_29k2we7k39().s[31]++;
    if (class_subjects.rows.length === 0) {
      /* istanbul ignore next */
      cov_29k2we7k39().b[7][0]++;
      cov_29k2we7k39().s[32]++;
      throw new Error("No class subjects found");
    } else
    /* istanbul ignore next */
    {
      cov_29k2we7k39().b[7][1]++;
    }
    const resultPromises =
    /* istanbul ignore next */
    (cov_29k2we7k39().s[33]++, class_subjects.rows.map(class_subject => {
      /* istanbul ignore next */
      cov_29k2we7k39().f[8]++;
      cov_29k2we7k39().s[34]++;
      return classService.getClassSubjectById(class_subject.id);
    }));
    const result =
    /* istanbul ignore next */
    (cov_29k2we7k39().s[35]++, await Promise.all(resultPromises));
    /* istanbul ignore next */
    cov_29k2we7k39().s[36]++;
    if (!result) {
      /* istanbul ignore next */
      cov_29k2we7k39().b[8][0]++;
      cov_29k2we7k39().s[37]++;
      throw new Error("No class subjects found");
    } else
    /* istanbul ignore next */
    {
      cov_29k2we7k39().b[8][1]++;
    }
    cov_29k2we7k39().s[38]++;
    return result;
  }
}