9d0c6d55c279fd405af1032f8f1479b8
/* istanbul ignore next */
function cov_v3i5nvin0() {
  var path = "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/utils/convert.ts";
  var hash = "4124dd9bcd828e5b500185cb66e22ad304b8f391";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/utils/convert.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 23
        },
        end: {
          line: 6,
          column: 33
        }
      },
      "1": {
        start: {
          line: 6,
          column: 31
        },
        end: {
          line: 6,
          column: 33
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 23
          },
          end: {
            line: 6,
            column: 24
          }
        },
        loc: {
          start: {
            line: 6,
            column: 31
          },
          end: {
            line: 6,
            column: 33
          }
        },
        line: 6
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0
    },
    f: {
      "0": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4124dd9bcd828e5b500185cb66e22ad304b8f391"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_v3i5nvin0 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_v3i5nvin0();
cov_v3i5nvin0().s[0]++;
/**
 * Convert ID to ID string
 * @param id ID
 * @returns Parsed ID
 */
export const parseId = id => {
  /* istanbul ignore next */
  cov_v3i5nvin0().f[0]++;
  cov_v3i5nvin0().s[1]++;
  return id;
};