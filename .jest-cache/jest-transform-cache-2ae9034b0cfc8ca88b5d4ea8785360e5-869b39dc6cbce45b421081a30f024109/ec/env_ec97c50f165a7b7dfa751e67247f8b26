a6de1d6b19469f3dac4787666f4909cb
/* istanbul ignore next */
function cov_3u2lg6ufj() {
  var path = "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/utils/env.ts";
  var hash = "23cfd2504ea6d6d8c6850546d8ebb23690932c9d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/utils/env.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 19
        },
        end: {
          line: 36,
          column: 2
        }
      },
      "1": {
        start: {
          line: 40,
          column: 22
        },
        end: {
          line: 40,
          column: 44
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0,
      "1": 0
    },
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "23cfd2504ea6d6d8c6850546d8ebb23690932c9d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_3u2lg6ufj = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_3u2lg6ufj();
import { z } from "zod";
export const env =
/* istanbul ignore next */
(cov_3u2lg6ufj().s[0]++, z.object({
  NODE_ENV: z.enum(["development", "production"]).default("development"),
  PORT: z.string(),
  // Database configuration
  OTTOMAN_BUCKET_NAME: z.string(),
  OTTOMAN_CONNECTION_STRING: z.string(),
  OTTOMAN_USERNAME: z.string(),
  OTTOMAN_PASSWORD: z.string(),
  // JWT configuration
  JWT_SECRET: z.string(),
  // AWS Configuration
  AWS_ACCESS_KEY_ID: z.string(),
  AWS_ACCESS_SECRET_KEY: z.string(),
  AWS_REGION: z.string(),
  // AWS SES Configuration
  AWS_SES_EMAIL_FROM: z.string(),
  AWS_SES_EMAIL_FROM_NAME: z.string(),
  // Nodemailer Configuration
  EMAIL_PROVIDER: z.enum(["gmail", "outlook", "smtp"]).optional(),
  EMAIL_USER: z.string().optional(),
  EMAIL_PASS: z.string().optional(),
  EMAIL_FROM: z.string().optional(),
  SMTP_HOST: z.string().optional(),
  SMTP_PORT: z.string().optional(),
  SMTP_SECURE: z.string().optional(),
  // R2 Bucket Configuration
  R2_BUCKET: z.string(),
  R2_ENDPOINT: z.string(),
  R2_REGION: z.string(),
  R2_ACCESS_KEY_ID: z.string(),
  R2_SECRET_ACCESS_KEY: z.string(),
  R2_BUCKET_URL: z.string(),
  // Redis Configuration
  REDIS_URI: z.string()
}));
/**
 * Get parsed the environment variables
 */
export const config =
/* istanbul ignore next */
(cov_3u2lg6ufj().s[1]++, env.parse(process.env));