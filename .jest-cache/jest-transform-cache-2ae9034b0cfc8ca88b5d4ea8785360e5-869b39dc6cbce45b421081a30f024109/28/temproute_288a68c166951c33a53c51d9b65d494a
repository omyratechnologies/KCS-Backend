b4d46d2b43d15a2f30a9d494c1461ab0
/* istanbul ignore next */
function cov_2n4nqzm4n4() {
  var path = "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/routes/temp.route.ts";
  var hash = "2663f3146f07cf82bb66b0b476e8fce5ffe2eac5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/routes/temp.route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 12
        },
        end: {
          line: 3,
          column: 22
        }
      },
      "1": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "2": {
        start: {
          line: 5,
          column: 35
        },
        end: {
          line: 5,
          column: 53
        }
      },
      "3": {
        start: {
          line: 6,
          column: 17
        },
        end: {
          line: 17,
          column: 6
        }
      },
      "4": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 4,
            column: 26
          },
          end: {
            line: 4,
            column: 27
          }
        },
        loc: {
          start: {
            line: 4,
            column: 39
          },
          end: {
            line: 19,
            column: 1
          }
        },
        line: 4
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    f: {
      "0": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2663f3146f07cf82bb66b0b476e8fce5ffe2eac5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2n4nqzm4n4 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2n4nqzm4n4();
import { Hono } from "hono";
import { UserService } from "@/services/users.service";
const app =
/* istanbul ignore next */
(cov_2n4nqzm4n4().s[0]++, new Hono());
/* istanbul ignore next */
cov_2n4nqzm4n4().s[1]++;
app.post("/create-admin", async c => {
  /* istanbul ignore next */
  cov_2n4nqzm4n4().f[0]++;
  const {
    username,
    password
  } =
  /* istanbul ignore next */
  (cov_2n4nqzm4n4().s[2]++, await c.req.json());
  const user =
  /* istanbul ignore next */
  (cov_2n4nqzm4n4().s[3]++, await UserService.createUsers({
    user_id: username,
    email: `${username}@${username}.com`,
    password,
    first_name: " ",
    last_name: " ",
    phone: "0000000000",
    address: " ",
    meta_data: "{}",
    user_type: "Super Admin",
    campus_id: ""
  }));
  /* istanbul ignore next */
  cov_2n4nqzm4n4().s[4]++;
  return c.json(user);
});
export default app;