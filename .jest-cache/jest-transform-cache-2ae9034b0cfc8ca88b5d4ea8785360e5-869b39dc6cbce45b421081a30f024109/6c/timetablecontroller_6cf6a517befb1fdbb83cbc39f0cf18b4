4d85d9ede51cc123914dec9a573518b6
/* istanbul ignore next */
function cov_2j4zm250ni() {
  var path = "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/controllers/timetable.controller.ts";
  var hash = "812c7c4c16406644886d5b426c6dfcaf0863b082";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/controllers/timetable.controller.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 25
        }
      },
      "1": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 22,
          column: 2
        }
      },
      "2": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 21,
          column: 5
        }
      },
      "3": {
        start: {
          line: 9,
          column: 26
        },
        end: {
          line: 9,
          column: 46
        }
      },
      "4": {
        start: {
          line: 10,
          column: 44
        },
        end: {
          line: 10,
          column: 64
        }
      },
      "5": {
        start: {
          line: 11,
          column: 26
        },
        end: {
          line: 11,
          column: 104
        }
      },
      "6": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 35
        }
      },
      "7": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 20,
          column: 9
        }
      },
      "8": {
        start: {
          line: 16,
          column: 12
        },
        end: {
          line: 19,
          column: 15
        }
      },
      "9": {
        start: {
          line: 24,
          column: 0
        },
        end: {
          line: 39,
          column: 2
        }
      },
      "10": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "11": {
        start: {
          line: 26,
          column: 26
        },
        end: {
          line: 26,
          column: 46
        }
      },
      "12": {
        start: {
          line: 27,
          column: 29
        },
        end: {
          line: 27,
          column: 44
        }
      },
      "13": {
        start: {
          line: 28,
          column: 26
        },
        end: {
          line: 28,
          column: 98
        }
      },
      "14": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 35
        }
      },
      "15": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 37,
          column: 9
        }
      },
      "16": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 36,
          column: 15
        }
      },
      "17": {
        start: {
          line: 41,
          column: 0
        },
        end: {
          line: 56,
          column: 2
        }
      },
      "18": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 55,
          column: 5
        }
      },
      "19": {
        start: {
          line: 43,
          column: 26
        },
        end: {
          line: 43,
          column: 46
        }
      },
      "20": {
        start: {
          line: 44,
          column: 31
        },
        end: {
          line: 44,
          column: 46
        }
      },
      "21": {
        start: {
          line: 45,
          column: 26
        },
        end: {
          line: 45,
          column: 102
        }
      },
      "22": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 35
        }
      },
      "23": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 54,
          column: 9
        }
      },
      "24": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 53,
          column: 15
        }
      },
      "25": {
        start: {
          line: 58,
          column: 0
        },
        end: {
          line: 73,
          column: 2
        }
      },
      "26": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 72,
          column: 5
        }
      },
      "27": {
        start: {
          line: 60,
          column: 23
        },
        end: {
          line: 60,
          column: 38
        }
      },
      "28": {
        start: {
          line: 61,
          column: 21
        },
        end: {
          line: 61,
          column: 41
        }
      },
      "29": {
        start: {
          line: 62,
          column: 26
        },
        end: {
          line: 62,
          column: 78
        }
      },
      "30": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 35
        }
      },
      "31": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 71,
          column: 9
        }
      },
      "32": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 70,
          column: 15
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 42
          },
          end: {
            line: 7,
            column: 43
          }
        },
        loc: {
          start: {
            line: 7,
            column: 57
          },
          end: {
            line: 22,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 24,
            column: 51
          },
          end: {
            line: 24,
            column: 52
          }
        },
        loc: {
          start: {
            line: 24,
            column: 66
          },
          end: {
            line: 39,
            column: 1
          }
        },
        line: 24
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 41,
            column: 53
          },
          end: {
            line: 41,
            column: 54
          }
        },
        loc: {
          start: {
            line: 41,
            column: 68
          },
          end: {
            line: 56,
            column: 1
          }
        },
        line: 41
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 58,
            column: 42
          },
          end: {
            line: 58,
            column: 43
          }
        },
        loc: {
          start: {
            line: 58,
            column: 57
          },
          end: {
            line: 73,
            column: 1
          }
        },
        line: 58
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 8
          },
          end: {
            line: 20,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 15,
            column: 8
          },
          end: {
            line: 20,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "2": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "3": {
        loc: {
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "812c7c4c16406644886d5b426c6dfcaf0863b082"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2j4zm250ni = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2j4zm250ni();
var _a;
import { TimetableService } from "@/services/timetable.service";
export class TimetableController {}
/* istanbul ignore next */
cov_2j4zm250ni().s[0]++;
_a = TimetableController;
// Create
/* istanbul ignore next */
cov_2j4zm250ni().s[1]++;
TimetableController.createTimetableBulk = async ctx => {
  /* istanbul ignore next */
  cov_2j4zm250ni().f[0]++;
  cov_2j4zm250ni().s[2]++;
  try {
    const campus_id =
    /* istanbul ignore next */
    (cov_2j4zm250ni().s[3]++, ctx.get("campus_id"));
    const {
      class_id,
      timetableData
    } =
    /* istanbul ignore next */
    (cov_2j4zm250ni().s[4]++, await ctx.req.json());
    const timetable =
    /* istanbul ignore next */
    (cov_2j4zm250ni().s[5]++, await TimetableService.createTimetableBulk(campus_id, class_id, timetableData));
    /* istanbul ignore next */
    cov_2j4zm250ni().s[6]++;
    return ctx.json(timetable);
  } catch (error) {
    /* istanbul ignore next */
    cov_2j4zm250ni().s[7]++;
    if (error instanceof Error) {
      /* istanbul ignore next */
      cov_2j4zm250ni().b[0][0]++;
      cov_2j4zm250ni().s[8]++;
      return ctx.json({
        success: false,
        message: error.message
      });
    } else
    /* istanbul ignore next */
    {
      cov_2j4zm250ni().b[0][1]++;
    }
  }
};
// Read by Campus ID and Class ID
/* istanbul ignore next */
cov_2j4zm250ni().s[9]++;
TimetableController.getTimetableByCampusAndClass = async ctx => {
  /* istanbul ignore next */
  cov_2j4zm250ni().f[1]++;
  cov_2j4zm250ni().s[10]++;
  try {
    const campus_id =
    /* istanbul ignore next */
    (cov_2j4zm250ni().s[11]++, ctx.get("campus_id"));
    const {
      class_id
    } =
    /* istanbul ignore next */
    (cov_2j4zm250ni().s[12]++, ctx.req.param());
    const timetable =
    /* istanbul ignore next */
    (cov_2j4zm250ni().s[13]++, await TimetableService.getTimetableByCampusAndClass(campus_id, class_id));
    /* istanbul ignore next */
    cov_2j4zm250ni().s[14]++;
    return ctx.json(timetable);
  } catch (error) {
    /* istanbul ignore next */
    cov_2j4zm250ni().s[15]++;
    if (error instanceof Error) {
      /* istanbul ignore next */
      cov_2j4zm250ni().b[1][0]++;
      cov_2j4zm250ni().s[16]++;
      return ctx.json({
        success: false,
        message: error.message
      });
    } else
    /* istanbul ignore next */
    {
      cov_2j4zm250ni().b[1][1]++;
    }
  }
};
// Read by Campus ID and Teacher ID
/* istanbul ignore next */
cov_2j4zm250ni().s[17]++;
TimetableController.getTimetableByCampusAndTeacher = async ctx => {
  /* istanbul ignore next */
  cov_2j4zm250ni().f[2]++;
  cov_2j4zm250ni().s[18]++;
  try {
    const campus_id =
    /* istanbul ignore next */
    (cov_2j4zm250ni().s[19]++, ctx.get("campus_id"));
    const {
      teacher_id
    } =
    /* istanbul ignore next */
    (cov_2j4zm250ni().s[20]++, ctx.req.param());
    const timetable =
    /* istanbul ignore next */
    (cov_2j4zm250ni().s[21]++, await TimetableService.getTimetableByCampusAndTeacher(campus_id, teacher_id));
    /* istanbul ignore next */
    cov_2j4zm250ni().s[22]++;
    return ctx.json(timetable);
  } catch (error) {
    /* istanbul ignore next */
    cov_2j4zm250ni().s[23]++;
    if (error instanceof Error) {
      /* istanbul ignore next */
      cov_2j4zm250ni().b[2][0]++;
      cov_2j4zm250ni().s[24]++;
      return ctx.json({
        success: false,
        message: error.message
      });
    } else
    /* istanbul ignore next */
    {
      cov_2j4zm250ni().b[2][1]++;
    }
  }
};
// Update by ID
/* istanbul ignore next */
cov_2j4zm250ni().s[25]++;
TimetableController.updateTimetableById = async ctx => {
  /* istanbul ignore next */
  cov_2j4zm250ni().f[3]++;
  cov_2j4zm250ni().s[26]++;
  try {
    const {
      id
    } =
    /* istanbul ignore next */
    (cov_2j4zm250ni().s[27]++, ctx.req.param());
    const data =
    /* istanbul ignore next */
    (cov_2j4zm250ni().s[28]++, await ctx.req.json());
    const timetable =
    /* istanbul ignore next */
    (cov_2j4zm250ni().s[29]++, await TimetableService.updateTimetableById(id, data));
    /* istanbul ignore next */
    cov_2j4zm250ni().s[30]++;
    return ctx.json(timetable);
  } catch (error) {
    /* istanbul ignore next */
    cov_2j4zm250ni().s[31]++;
    if (error instanceof Error) {
      /* istanbul ignore next */
      cov_2j4zm250ni().b[3][0]++;
      cov_2j4zm250ni().s[32]++;
      return ctx.json({
        success: false,
        message: error.message
      });
    } else
    /* istanbul ignore next */
    {
      cov_2j4zm250ni().b[3][1]++;
    }
  }
};