f80f1f43a5bfa01b1d163c18a5991aa1
/* istanbul ignore next */
function cov_21nstp2s6y() {
  var path = "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/middlewares/payment_monitoring.middleware.ts";
  var hash = "ce44fa9e5828e5a5b708cdf533d23776e42da350";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/middlewares/payment_monitoring.middleware.ts",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 25
        },
        end: {
          line: 38,
          column: 1
        }
      },
      "1": {
        start: {
          line: 5,
          column: 19
        },
        end: {
          line: 5,
          column: 42
        }
      },
      "2": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 37,
          column: 5
        }
      },
      "3": {
        start: {
          line: 8,
          column: 12
        },
        end: {
          line: 8,
          column: 26
        }
      },
      "4": {
        start: {
          line: 11,
          column: 12
        },
        end: {
          line: 11,
          column: 30
        }
      },
      "5": {
        start: {
          line: 14,
          column: 12
        },
        end: {
          line: 14,
          column: 28
        }
      },
      "6": {
        start: {
          line: 17,
          column: 12
        },
        end: {
          line: 17,
          column: 26
        }
      },
      "7": {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 20,
          column: 28
        }
      },
      "8": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 25
        }
      },
      "9": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 25
        }
      },
      "10": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 25
        }
      },
      "11": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 26
        }
      },
      "12": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 28
        }
      },
      "13": {
        start: {
          line: 39,
          column: 43
        },
        end: {
          line: 148,
          column: 1
        }
      },
      "14": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 147,
          column: 6
        }
      },
      "15": {
        start: {
          line: 41,
          column: 31
        },
        end: {
          line: 51,
          column: 9
        }
      },
      "16": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 51
        }
      },
      "17": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 61,
          column: 11
        }
      },
      "18": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 146,
          column: 9
        }
      },
      "19": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 25
        }
      },
      "20": {
        start: {
          line: 65,
          column: 34
        },
        end: {
          line: 65,
          column: 72
        }
      },
      "21": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 79,
          column: 15
        }
      },
      "22": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 84,
          column: 15
        }
      },
      "23": {
        start: {
          line: 88,
          column: 34
        },
        end: {
          line: 88,
          column: 72
        }
      },
      "24": {
        start: {
          line: 89,
          column: 68
        },
        end: {
          line: 95,
          column: 14
        }
      },
      "25": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 116,
          column: 13
        }
      },
      "26": {
        start: {
          line: 98,
          column: 16
        },
        end: {
          line: 115,
          column: 19
        }
      },
      "27": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 133,
          column: 15
        }
      },
      "28": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 141,
          column: 15
        }
      },
      "29": {
        start: {
          line: 143,
          column: 34
        },
        end: {
          line: 144,
          column: 13
        }
      },
      "30": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 55
        }
      },
      "31": {
        start: {
          line: 153,
          column: 34
        },
        end: {
          line: 176,
          column: 1
        }
      },
      "32": {
        start: {
          line: 154,
          column: 48
        },
        end: {
          line: 154,
          column: 95
        }
      },
      "33": {
        start: {
          line: 156,
          column: 4
        },
        end: {
          line: 171,
          column: 5
        }
      },
      "34": {
        start: {
          line: 156,
          column: 49
        },
        end: {
          line: 156,
          column: 85
        }
      },
      "35": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 170,
          column: 11
        }
      },
      "36": {
        start: {
          line: 172,
          column: 4
        },
        end: {
          line: 175,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 4,
            column: 25
          },
          end: {
            line: 4,
            column: 26
          }
        },
        loc: {
          start: {
            line: 4,
            column: 40
          },
          end: {
            line: 38,
            column: 1
          }
        },
        line: 4
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 39,
            column: 43
          },
          end: {
            line: 39,
            column: 44
          }
        },
        loc: {
          start: {
            line: 39,
            column: 49
          },
          end: {
            line: 148,
            column: 1
          }
        },
        line: 39
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 40,
            column: 11
          },
          end: {
            line: 40,
            column: 12
          }
        },
        loc: {
          start: {
            line: 40,
            column: 32
          },
          end: {
            line: 147,
            column: 5
          }
        },
        line: 40
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 153,
            column: 34
          },
          end: {
            line: 153,
            column: 35
          }
        },
        loc: {
          start: {
            line: 153,
            column: 54
          },
          end: {
            line: 176,
            column: 1
          }
        },
        line: 153
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 156,
            column: 37
          },
          end: {
            line: 156,
            column: 38
          }
        },
        loc: {
          start: {
            line: 156,
            column: 49
          },
          end: {
            line: 156,
            column: 85
          }
        },
        line: 156
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 6,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 7,
            column: 8
          },
          end: {
            line: 9,
            column: 9
          }
        }, {
          start: {
            line: 10,
            column: 8
          },
          end: {
            line: 12,
            column: 9
          }
        }, {
          start: {
            line: 13,
            column: 8
          },
          end: {
            line: 15,
            column: 9
          }
        }, {
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 18,
            column: 9
          }
        }, {
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 21,
            column: 9
          }
        }, {
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 24,
            column: 9
          }
        }, {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 27,
            column: 9
          }
        }, {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 30,
            column: 9
          }
        }, {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        }, {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        }],
        line: 6
      },
      "1": {
        loc: {
          start: {
            line: 47,
            column: 24
          },
          end: {
            line: 47,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 24
          },
          end: {
            line: 47,
            column: 57
          }
        }, {
          start: {
            line: 47,
            column: 61
          },
          end: {
            line: 47,
            column: 88
          }
        }, {
          start: {
            line: 47,
            column: 92
          },
          end: {
            line: 47,
            column: 101
          }
        }],
        line: 47
      },
      "2": {
        loc: {
          start: {
            line: 48,
            column: 24
          },
          end: {
            line: 48,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 24
          },
          end: {
            line: 48,
            column: 52
          }
        }, {
          start: {
            line: 48,
            column: 56
          },
          end: {
            line: 48,
            column: 65
          }
        }],
        line: 48
      },
      "3": {
        loc: {
          start: {
            line: 67,
            column: 70
          },
          end: {
            line: 67,
            column: 123
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 70
          },
          end: {
            line: 67,
            column: 110
          }
        }, {
          start: {
            line: 67,
            column: 114
          },
          end: {
            line: 67,
            column: 123
          }
        }],
        line: 67
      },
      "4": {
        loc: {
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 116,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 116,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "5": {
        loc: {
          start: {
            line: 114,
            column: 33
          },
          end: {
            line: 114,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 114,
            column: 58
          },
          end: {
            line: 114,
            column: 69
          }
        }, {
          start: {
            line: 114,
            column: 72
          },
          end: {
            line: 114,
            column: 81
          }
        }],
        line: 114
      },
      "6": {
        loc: {
          start: {
            line: 119,
            column: 70
          },
          end: {
            line: 119,
            column: 123
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 119,
            column: 70
          },
          end: {
            line: 119,
            column: 110
          }
        }, {
          start: {
            line: 119,
            column: 114
          },
          end: {
            line: 119,
            column: 123
          }
        }],
        line: 119
      },
      "7": {
        loc: {
          start: {
            line: 156,
            column: 4
          },
          end: {
            line: 171,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 156,
            column: 4
          },
          end: {
            line: 171,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 156
      },
      "8": {
        loc: {
          start: {
            line: 167,
            column: 22
          },
          end: {
            line: 167,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 167,
            column: 61
          },
          end: {
            line: 167,
            column: 71
          }
        }, {
          start: {
            line: 167,
            column: 74
          },
          end: {
            line: 167,
            column: 80
          }
        }],
        line: 167
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      "1": [0, 0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ce44fa9e5828e5a5b708cdf533d23776e42da350"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_21nstp2s6y = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_21nstp2s6y();
import crypto from "node:crypto";
import PaymentErrorHandler from "@/services/payment_error_handler.service";
import PaymentSecurityMonitor from "@/services/payment_security_monitor.service";
/* istanbul ignore next */
cov_21nstp2s6y().s[0]++;
const getErrorSeverity = errorCode => {
  /* istanbul ignore next */
  cov_21nstp2s6y().f[0]++;
  const prefix =
  /* istanbul ignore next */
  (cov_21nstp2s6y().s[1]++, errorCode.split("_")[0]);
  /* istanbul ignore next */
  cov_21nstp2s6y().s[2]++;
  switch (prefix) {
    case "AUTH":
      /* istanbul ignore next */
      cov_21nstp2s6y().b[0][0]++;
      {
        /* istanbul ignore next */
        cov_21nstp2s6y().s[3]++;
        return "high";
      }
    case "CRED":
      /* istanbul ignore next */
      cov_21nstp2s6y().b[0][1]++;
      {
        /* istanbul ignore next */
        cov_21nstp2s6y().s[4]++;
        return "critical";
      }
    case "RATE":
      /* istanbul ignore next */
      cov_21nstp2s6y().b[0][2]++;
      {
        /* istanbul ignore next */
        cov_21nstp2s6y().s[5]++;
        return "medium";
      }
    case "SYS":
      /* istanbul ignore next */
      cov_21nstp2s6y().b[0][3]++;
      {
        /* istanbul ignore next */
        cov_21nstp2s6y().s[6]++;
        return "high";
      }
    case "GATEWAY":
      /* istanbul ignore next */
      cov_21nstp2s6y().b[0][4]++;
      {
        /* istanbul ignore next */
        cov_21nstp2s6y().s[7]++;
        return "medium";
      }
    case "TRANS":
      /* istanbul ignore next */
      cov_21nstp2s6y().b[0][5]++;
      {
        /* istanbul ignore next */
        cov_21nstp2s6y().s[8]++;
        return "low";
      }
    case "VAL":
      /* istanbul ignore next */
      cov_21nstp2s6y().b[0][6]++;
      {
        /* istanbul ignore next */
        cov_21nstp2s6y().s[9]++;
        return "low";
      }
    case "BIZ":
      /* istanbul ignore next */
      cov_21nstp2s6y().b[0][7]++;
      {
        /* istanbul ignore next */
        cov_21nstp2s6y().s[10]++;
        return "low";
      }
    case "DATA":
      /* istanbul ignore next */
      cov_21nstp2s6y().b[0][8]++;
      {
        /* istanbul ignore next */
        cov_21nstp2s6y().s[11]++;
        return "high";
      }
    default:
      /* istanbul ignore next */
      cov_21nstp2s6y().b[0][9]++;
      {
        /* istanbul ignore next */
        cov_21nstp2s6y().s[12]++;
        return "medium";
      }
  }
};
/* istanbul ignore next */
cov_21nstp2s6y().s[13]++;
export const paymentMonitoringMiddleware = () => {
  /* istanbul ignore next */
  cov_21nstp2s6y().f[1]++;
  cov_21nstp2s6y().s[14]++;
  return async (ctx, next) => {
    /* istanbul ignore next */
    cov_21nstp2s6y().f[2]++;
    const requestContext =
    /* istanbul ignore next */
    (cov_21nstp2s6y().s[15]++, {
      request_id: crypto.randomUUID(),
      start_time: Date.now(),
      user_id: ctx.get("user_id"),
      user_type: ctx.get("user_type"),
      campus_id: ctx.get("campus_id"),
      ip_address:
      /* istanbul ignore next */
      (cov_21nstp2s6y().b[1][0]++, ctx.req.header("x-forwarded-for")) ||
      /* istanbul ignore next */
      (cov_21nstp2s6y().b[1][1]++, ctx.req.header("x-real-ip")) ||
      /* istanbul ignore next */
      (cov_21nstp2s6y().b[1][2]++, "unknown"),
      user_agent:
      /* istanbul ignore next */
      (cov_21nstp2s6y().b[2][0]++, ctx.req.header("user-agent")) ||
      /* istanbul ignore next */
      (cov_21nstp2s6y().b[2][1]++, "unknown"),
      endpoint: ctx.req.path,
      method: ctx.req.method
    });
    // Add request context to the Hono context
    /* istanbul ignore next */
    cov_21nstp2s6y().s[16]++;
    ctx.set("request_context", requestContext);
    // Log the incoming request
    /* istanbul ignore next */
    cov_21nstp2s6y().s[17]++;
    console.info(`[PAYMENT_REQUEST] ${requestContext.method} ${requestContext.endpoint}`, {
      request_id: requestContext.request_id,
      user_id: requestContext.user_id,
      user_type: requestContext.user_type,
      campus_id: requestContext.campus_id,
      ip_address: requestContext.ip_address
    });
    /* istanbul ignore next */
    cov_21nstp2s6y().s[18]++;
    try {
      /* istanbul ignore next */
      cov_21nstp2s6y().s[19]++;
      await next();
      // Log successful request completion
      const executionTime =
      /* istanbul ignore next */
      (cov_21nstp2s6y().s[20]++, Date.now() - requestContext.start_time);
      /* istanbul ignore next */
      cov_21nstp2s6y().s[21]++;
      PaymentSecurityMonitor.logAuditEvent({
        event_type: `${requestContext.method.toLowerCase()}_${
        /* istanbul ignore next */
        (cov_21nstp2s6y().b[3][0]++, requestContext.endpoint.split("/").pop()) ||
        /* istanbul ignore next */
        (cov_21nstp2s6y().b[3][1]++, "unknown")}`,
        user_id: requestContext.user_id,
        campus_id: requestContext.campus_id,
        details: {
          endpoint: requestContext.endpoint,
          method: requestContext.method,
          request_id: requestContext.request_id
        },
        ip_address: requestContext.ip_address,
        user_agent: requestContext.user_agent,
        success: true,
        execution_time_ms: executionTime
      });
      /* istanbul ignore next */
      cov_21nstp2s6y().s[22]++;
      console.info(`[PAYMENT_RESPONSE] ${requestContext.method} ${requestContext.endpoint} - SUCCESS`, {
        request_id: requestContext.request_id,
        execution_time_ms: executionTime,
        status: ctx.res.status
      });
    } catch (error) {
      // Enhanced error handling
      const executionTime =
      /* istanbul ignore next */
      (cov_21nstp2s6y().s[23]++, Date.now() - requestContext.start_time);
      const {
        error: paymentError,
        httpStatus,
        shouldLog
      } =
      /* istanbul ignore next */
      (cov_21nstp2s6y().s[24]++, PaymentErrorHandler.handleError(error, {
        request_id: requestContext.request_id,
        endpoint: requestContext.endpoint,
        method: requestContext.method,
        user_id: requestContext.user_id,
        campus_id: requestContext.campus_id
      }));
      // Log error if needed
      /* istanbul ignore next */
      cov_21nstp2s6y().s[25]++;
      if (shouldLog) {
        /* istanbul ignore next */
        cov_21nstp2s6y().b[4][0]++;
        cov_21nstp2s6y().s[26]++;
        PaymentSecurityMonitor.logSecurityEvent({
          event_type: "suspicious_activity",
          user_id: requestContext.user_id,
          user_type: requestContext.user_type,
          campus_id: requestContext.campus_id,
          ip_address: requestContext.ip_address,
          user_agent: requestContext.user_agent,
          details: {
            endpoint: requestContext.endpoint,
            method: requestContext.method,
            error_code: paymentError.code,
            request_id: requestContext.request_id
          },
          severity: getErrorSeverity(paymentError.code),
          success: false,
          error_message: paymentError.message,
          stack_trace: error instanceof Error ?
          /* istanbul ignore next */
          (cov_21nstp2s6y().b[5][0]++, error.stack) :
          /* istanbul ignore next */
          (cov_21nstp2s6y().b[5][1]++, undefined)
        });
      } else
      /* istanbul ignore next */
      {
        cov_21nstp2s6y().b[4][1]++;
      }
      // Log audit event
      cov_21nstp2s6y().s[27]++;
      PaymentSecurityMonitor.logAuditEvent({
        event_type: `${requestContext.method.toLowerCase()}_${
        /* istanbul ignore next */
        (cov_21nstp2s6y().b[6][0]++, requestContext.endpoint.split("/").pop()) ||
        /* istanbul ignore next */
        (cov_21nstp2s6y().b[6][1]++, "unknown")}`,
        user_id: requestContext.user_id,
        campus_id: requestContext.campus_id,
        details: {
          endpoint: requestContext.endpoint,
          method: requestContext.method,
          request_id: requestContext.request_id
        },
        ip_address: requestContext.ip_address,
        user_agent: requestContext.user_agent,
        success: false,
        error_code: paymentError.code,
        error_message: paymentError.message,
        execution_time_ms: executionTime
      });
      /* istanbul ignore next */
      cov_21nstp2s6y().s[28]++;
      console.error(`[PAYMENT_ERROR] ${requestContext.method} ${requestContext.endpoint}`, {
        request_id: requestContext.request_id,
        error_code: paymentError.code,
        error_message: paymentError.message,
        execution_time_ms: executionTime,
        user_id: requestContext.user_id,
        campus_id: requestContext.campus_id
      });
      // Return standardized error response
      const errorResponse =
      /* istanbul ignore next */
      (cov_21nstp2s6y().s[29]++, PaymentErrorHandler.formatErrorResponse(paymentError, process.env.NODE_ENV === "development" // Include details only in development
      ));
      /* istanbul ignore next */
      cov_21nstp2s6y().s[30]++;
      return ctx.json(errorResponse, httpStatus);
    }
  };
};
/**
 * Enhanced error handler for payment controllers
 * Provides consistent error handling and monitoring
 */
/* istanbul ignore next */
cov_21nstp2s6y().s[31]++;
export const handlePaymentError = (error, context) => {
  /* istanbul ignore next */
  cov_21nstp2s6y().f[3]++;
  const {
    error: paymentError,
    httpStatus
  } =
  /* istanbul ignore next */
  (cov_21nstp2s6y().s[32]++, PaymentErrorHandler.handleError(error, context));
  // Log security event for critical errors
  /* istanbul ignore next */
  cov_21nstp2s6y().s[33]++;
  if (["CRED", "AUTH", "SYS"].some(prefix => {
    /* istanbul ignore next */
    cov_21nstp2s6y().f[4]++;
    cov_21nstp2s6y().s[34]++;
    return paymentError.code.startsWith(prefix);
  })) {
    /* istanbul ignore next */
    cov_21nstp2s6y().b[7][0]++;
    cov_21nstp2s6y().s[35]++;
    PaymentSecurityMonitor.logSecurityEvent({
      event_type: "suspicious_activity",
      user_id: context.user_id,
      campus_id: context.campus_id,
      details: {
        controller: context.controller,
        method: context.method,
        error_code: paymentError.code,
        request_id: context.request_id
      },
      severity: paymentError.code.startsWith("CRED") ?
      /* istanbul ignore next */
      (cov_21nstp2s6y().b[8][0]++, "critical") :
      /* istanbul ignore next */
      (cov_21nstp2s6y().b[8][1]++, "high"),
      success: false,
      error_message: paymentError.message
    });
  } else
  /* istanbul ignore next */
  {
    cov_21nstp2s6y().b[7][1]++;
  }
  cov_21nstp2s6y().s[36]++;
  return {
    error: PaymentErrorHandler.formatErrorResponse(paymentError, process.env.NODE_ENV === "development"),
    httpStatus
  };
};
export default paymentMonitoringMiddleware;