5e1d266d1c87ec204363defa583f7104
/* istanbul ignore next */
function cov_1udwdpx6cv() {
  var path = "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/libs/logger/index.ts";
  var hash = "213fc604e9749a505f80df7507957f399926964e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/libs/logger/index.ts",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 8,
          column: 32
        }
      },
      "1": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 5,
          column: 30
        }
      },
      "2": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 32
        }
      },
      "3": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 7,
          column: 40
        }
      },
      "4": {
        start: {
          line: 10,
          column: 15
        },
        end: {
          line: 32,
          column: 2
        }
      },
      "5": {
        start: {
          line: 19,
          column: 12
        },
        end: {
          line: 19,
          column: 36
        }
      },
      "6": {
        start: {
          line: 33,
          column: 13
        },
        end: {
          line: 33,
          column: 38
        }
      },
      "7": {
        start: {
          line: 33,
          column: 22
        },
        end: {
          line: 33,
          column: 38
        }
      },
      "8": {
        start: {
          line: 34,
          column: 18
        },
        end: {
          line: 34,
          column: 44
        }
      },
      "9": {
        start: {
          line: 34,
          column: 27
        },
        end: {
          line: 34,
          column: 44
        }
      },
      "10": {
        start: {
          line: 36,
          column: 25
        },
        end: {
          line: 36,
          column: 51
        }
      },
      "11": {
        start: {
          line: 36,
          column: 34
        },
        end: {
          line: 36,
          column: 51
        }
      },
      "12": {
        start: {
          line: 38,
          column: 17
        },
        end: {
          line: 49,
          column: 1
        }
      },
      "13": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 41,
          column: 5
        }
      },
      "14": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 41
        }
      },
      "15": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "16": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 25
        }
      },
      "17": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "18": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 30
        }
      },
      "19": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 48,
          column: 33
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 4,
            column: 1
          },
          end: {
            line: 4,
            column: 2
          }
        },
        loc: {
          start: {
            line: 4,
            column: 21
          },
          end: {
            line: 8,
            column: 1
          }
        },
        line: 4
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 18,
            column: 15
          },
          end: {
            line: 18,
            column: 16
          }
        },
        loc: {
          start: {
            line: 18,
            column: 26
          },
          end: {
            line: 20,
            column: 9
          }
        },
        line: 18
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 33,
            column: 13
          },
          end: {
            line: 33,
            column: 14
          }
        },
        loc: {
          start: {
            line: 33,
            column: 22
          },
          end: {
            line: 33,
            column: 38
          }
        },
        line: 33
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 34,
            column: 18
          },
          end: {
            line: 34,
            column: 19
          }
        },
        loc: {
          start: {
            line: 34,
            column: 27
          },
          end: {
            line: 34,
            column: 44
          }
        },
        line: 34
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 36,
            column: 25
          },
          end: {
            line: 36,
            column: 26
          }
        },
        loc: {
          start: {
            line: 36,
            column: 34
          },
          end: {
            line: 36,
            column: 51
          }
        },
        line: 36
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 38,
            column: 17
          },
          end: {
            line: 38,
            column: 18
          }
        },
        loc: {
          start: {
            line: 38,
            column: 49
          },
          end: {
            line: 49,
            column: 1
          }
        },
        line: 38
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 8,
            column: 3
          },
          end: {
            line: 8,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 3
          },
          end: {
            line: 8,
            column: 11
          }
        }, {
          start: {
            line: 8,
            column: 16
          },
          end: {
            line: 8,
            column: 29
          }
        }],
        line: 8
      },
      "1": {
        loc: {
          start: {
            line: 11,
            column: 11
          },
          end: {
            line: 11,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 11,
            column: 46
          },
          end: {
            line: 11,
            column: 52
          }
        }, {
          start: {
            line: 11,
            column: 55
          },
          end: {
            line: 11,
            column: 62
          }
        }],
        line: 11
      },
      "2": {
        loc: {
          start: {
            line: 22,
            column: 15
          },
          end: {
            line: 31,
            column: 9
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 23,
            column: 10
          },
          end: {
            line: 23,
            column: 19
          }
        }, {
          start: {
            line: 24,
            column: 10
          },
          end: {
            line: 31,
            column: 9
          }
        }],
        line: 22
      },
      "3": {
        loc: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "4": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 39,
            column: 100
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 39,
            column: 20
          }
        }, {
          start: {
            line: 39,
            column: 24
          },
          end: {
            line: 39,
            column: 73
          }
        }, {
          start: {
            line: 39,
            column: 77
          },
          end: {
            line: 39,
            column: 100
          }
        }],
        line: 39
      },
      "5": {
        loc: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "6": {
        loc: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "213fc604e9749a505f80df7507957f399926964e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1udwdpx6cv = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1udwdpx6cv();
import { pino } from "pino";
import { config } from "@/utils/env";
export var LogTypes;
/* istanbul ignore next */
cov_1udwdpx6cv().s[0]++;
(function (LogTypes) {
  /* istanbul ignore next */
  cov_1udwdpx6cv().f[0]++;
  cov_1udwdpx6cv().s[1]++;
  LogTypes["LOGS"] = "logs";
  /* istanbul ignore next */
  cov_1udwdpx6cv().s[2]++;
  LogTypes["ERROR"] = "error";
  /* istanbul ignore next */
  cov_1udwdpx6cv().s[3]++;
  LogTypes["CUSTOMOBJ"] = "customObj";
})(
/* istanbul ignore next */
(cov_1udwdpx6cv().b[0][0]++, LogTypes) ||
/* istanbul ignore next */
(cov_1udwdpx6cv().b[0][1]++, LogTypes = {}));
// Create a single logger instance with optimized configuration
const logger =
/* istanbul ignore next */
(cov_1udwdpx6cv().s[4]++, pino({
  level: config.NODE_ENV === "production" ?
  /* istanbul ignore next */
  (cov_1udwdpx6cv().b[1][0]++, "info") :
  /* istanbul ignore next */
  (cov_1udwdpx6cv().b[1][1]++, "debug"),
  base: {
    pid: false,
    hostname: false
  },
  timestamp: pino.stdTimeFunctions.isoTime,
  formatters: {
    level: label => {
      /* istanbul ignore next */
      cov_1udwdpx6cv().f[1]++;
      cov_1udwdpx6cv().s[5]++;
      return {
        level: label
      };
    }
  },
  transport: config.NODE_ENV === "production" ?
  /* istanbul ignore next */
  (cov_1udwdpx6cv().b[2][0]++, undefined) :
  /* istanbul ignore next */
  (cov_1udwdpx6cv().b[2][1]++, {
    target: "pino-pretty",
    options: {
      colorize: true,
      ignore: "pid,hostname",
      translateTime: "SYS:standard"
    }
  })
}));
/* istanbul ignore next */
cov_1udwdpx6cv().s[6]++;
const Logs = msg => {
  /* istanbul ignore next */
  cov_1udwdpx6cv().f[2]++;
  cov_1udwdpx6cv().s[7]++;
  return logger.info(msg);
};
/* istanbul ignore next */
cov_1udwdpx6cv().s[8]++;
const ErrorLogs = msg => {
  /* istanbul ignore next */
  cov_1udwdpx6cv().f[3]++;
  cov_1udwdpx6cv().s[9]++;
  return logger.error(msg);
};
// eslint-disable-next-line @typescript-eslint/no-explicit-any
/* istanbul ignore next */
cov_1udwdpx6cv().s[10]++;
const customLogHandler = obj => {
  /* istanbul ignore next */
  cov_1udwdpx6cv().f[4]++;
  cov_1udwdpx6cv().s[11]++;
  return logger.child(obj);
};
// eslint-disable-next-line @typescript-eslint/no-explicit-any
/* istanbul ignore next */
cov_1udwdpx6cv().s[12]++;
const infoLogs = (msg, logType, generated_by) => {
  /* istanbul ignore next */
  cov_1udwdpx6cv().f[5]++;
  cov_1udwdpx6cv().s[13]++;
  if (
  /* istanbul ignore next */
  (cov_1udwdpx6cv().b[4][0]++, generated_by) &&
  /* istanbul ignore next */
  (cov_1udwdpx6cv().b[4][1]++, [LogTypes.LOGS, LogTypes.ERROR].includes(logType)) &&
  /* istanbul ignore next */
  (cov_1udwdpx6cv().b[4][2]++, typeof msg === "string")) {
    /* istanbul ignore next */
    cov_1udwdpx6cv().b[3][0]++;
    cov_1udwdpx6cv().s[14]++;
    msg = `[${generated_by}] ` + msg;
  } else
  /* istanbul ignore next */
  {
    cov_1udwdpx6cv().b[3][1]++;
  }
  cov_1udwdpx6cv().s[15]++;
  if (logType === LogTypes.LOGS) {
    /* istanbul ignore next */
    cov_1udwdpx6cv().b[5][0]++;
    cov_1udwdpx6cv().s[16]++;
    return Logs(msg);
  } else
  /* istanbul ignore next */
  {
    cov_1udwdpx6cv().b[5][1]++;
  }
  cov_1udwdpx6cv().s[17]++;
  if (logType === LogTypes.ERROR) {
    /* istanbul ignore next */
    cov_1udwdpx6cv().b[6][0]++;
    cov_1udwdpx6cv().s[18]++;
    return ErrorLogs(msg);
  } else
  /* istanbul ignore next */
  {
    cov_1udwdpx6cv().b[6][1]++;
  }
  cov_1udwdpx6cv().s[19]++;
  return customLogHandler(msg);
};
export default infoLogs;
export { logger };