f5b6166c28193d68fefa7c93e174277f
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// Jest setup file
const globals_1 = require("@jest/globals");
// Mock console methods for cleaner test output
global.console = Object.assign(Object.assign({}, console), { log: globals_1.jest.fn(), debug: globals_1.jest.fn(), info: globals_1.jest.fn(), warn: globals_1.jest.fn(), error: globals_1.jest.fn() });
// Mock environment variables
process.env.NODE_ENV = "test";
process.env.JWT_SECRET = "test-secret-key-for-jwt-tokens";
process.env.DATABASE_URL = "test-database-url";
process.env.REDIS_URL = "redis://localhost:6379";
// Global test utilities
global.testTimeout = (ms = 5000) => new Promise((resolve) => setTimeout(resolve, ms));
// Mock Date for consistent testing
const mockDate = new Date("2025-08-05T10:00:00Z");
global.Date = class extends Date {
    constructor(date) {
        if (date) {
            super(date);
        }
        else {
            super(mockDate);
        }
    }
    static now() {
        return mockDate.getTime();
    }
};
// Global cleanup
afterEach(() => {
    globals_1.jest.clearAllMocks();
    globals_1.jest.clearAllTimers();
});
// Global teardown
afterAll(async () => {
    // Clear any remaining timers
    globals_1.jest.clearAllTimers();
    globals_1.jest.useRealTimers();
    // Force garbage collection if available
    if (global.gc) {
        global.gc();
    }
    // Wait a bit to ensure all async operations complete
    await new Promise((resolve) => setTimeout(resolve, 100));
});
