7134b2f539a4106f9fdde51ef4545bf3
/* istanbul ignore next */
function cov_14a42r69f8() {
  var path = "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/services/secure_payment_credential.service.ts";
  var hash = "7a2f9dfdac1e35a9df1c6161584859587c65316a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/services/secure_payment_credential.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 47,
          column: 9
        }
      },
      "1": {
        start: {
          line: 10,
          column: 41
        },
        end: {
          line: 10,
          column: 100
        }
      },
      "2": {
        start: {
          line: 12,
          column: 34
        },
        end: {
          line: 12,
          column: 36
        }
      },
      "3": {
        start: {
          line: 13,
          column: 12
        },
        end: {
          line: 23,
          column: 13
        }
      },
      "4": {
        start: {
          line: 14,
          column: 30
        },
        end: {
          line: 14,
          column: 50
        }
      },
      "5": {
        start: {
          line: 15,
          column: 16
        },
        end: {
          line: 22,
          column: 17
        }
      },
      "6": {
        start: {
          line: 16,
          column: 20
        },
        end: {
          line: 21,
          column: 22
        }
      },
      "7": {
        start: {
          line: 25,
          column: 40
        },
        end: {
          line: 28,
          column: 14
        }
      },
      "8": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 42,
          column: 13
        }
      },
      "9": {
        start: {
          line: 32,
          column: 16
        },
        end: {
          line: 38,
          column: 19
        }
      },
      "10": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 41,
          column: 92
        }
      },
      "11": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 43,
          column: 31
        }
      },
      "12": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 46,
          column: 76
        }
      },
      "13": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 75,
          column: 9
        }
      },
      "14": {
        start: {
          line: 54,
          column: 32
        },
        end: {
          line: 57,
          column: 14
        }
      },
      "15": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 60,
          column: 13
        }
      },
      "16": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 59,
          column: 28
        }
      },
      "17": {
        start: {
          line: 61,
          column: 28
        },
        end: {
          line: 61,
          column: 47
        }
      },
      "18": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 65,
          column: 13
        }
      },
      "19": {
        start: {
          line: 64,
          column: 16
        },
        end: {
          line: 64,
          column: 109
        }
      },
      "20": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 70,
          column: 13
        }
      },
      "21": {
        start: {
          line: 68,
          column: 16
        },
        end: {
          line: 68,
          column: 135
        }
      },
      "22": {
        start: {
          line: 69,
          column: 16
        },
        end: {
          line: 69,
          column: 59
        }
      },
      "23": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 24
        }
      },
      "24": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 79
        }
      },
      "25": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 87,
          column: 9
        }
      },
      "26": {
        start: {
          line: 82,
          column: 32
        },
        end: {
          line: 82,
          column: 74
        }
      },
      "27": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 108
        }
      },
      "28": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 78
        }
      },
      "29": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 103,
          column: 9
        }
      },
      "30": {
        start: {
          line: 95,
          column: 40
        },
        end: {
          line: 95,
          column: 90
        }
      },
      "31": {
        start: {
          line: 97,
          column: 39
        },
        end: {
          line: 97,
          column: 123
        }
      },
      "32": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 84
        }
      },
      "33": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 81
        }
      },
      "34": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 117,
          column: 9
        }
      },
      "35": {
        start: {
          line: 110,
          column: 40
        },
        end: {
          line: 110,
          column: 90
        }
      },
      "36": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 48
        }
      },
      "37": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 85
        }
      },
      "38": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 81
        }
      },
      "39": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 135,
          column: 9
        }
      },
      "40": {
        start: {
          line: 124,
          column: 32
        },
        end: {
          line: 127,
          column: 14
        }
      },
      "41": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 130,
          column: 13
        }
      },
      "42": {
        start: {
          line: 129,
          column: 16
        },
        end: {
          line: 129,
          column: 26
        }
      },
      "43": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 131,
          column: 60
        }
      },
      "44": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 134,
          column: 70
        }
      },
      "45": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 160,
          column: 9
        }
      },
      "46": {
        start: {
          line: 142,
          column: 32
        },
        end: {
          line: 145,
          column: 14
        }
      },
      "47": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 148,
          column: 13
        }
      },
      "48": {
        start: {
          line: 147,
          column: 16
        },
        end: {
          line: 147,
          column: 58
        }
      },
      "49": {
        start: {
          line: 149,
          column: 28
        },
        end: {
          line: 149,
          column: 47
        }
      },
      "50": {
        start: {
          line: 150,
          column: 34
        },
        end: {
          line: 150,
          column: 62
        }
      },
      "51": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 152,
          column: 102
        }
      },
      "52": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 156,
          column: 15
        }
      },
      "53": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 159,
          column: 73
        }
      },
      "54": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 216,
          column: 9
        }
      },
      "55": {
        start: {
          line: 167,
          column: 32
        },
        end: {
          line: 170,
          column: 14
        }
      },
      "56": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 177,
          column: 13
        }
      },
      "57": {
        start: {
          line: 172,
          column: 16
        },
        end: {
          line: 176,
          column: 18
        }
      },
      "58": {
        start: {
          line: 178,
          column: 28
        },
        end: {
          line: 178,
          column: 47
        }
      },
      "59": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 186,
          column: 13
        }
      },
      "60": {
        start: {
          line: 181,
          column: 16
        },
        end: {
          line: 185,
          column: 18
        }
      },
      "61": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 194,
          column: 13
        }
      },
      "62": {
        start: {
          line: 189,
          column: 16
        },
        end: {
          line: 193,
          column: 18
        }
      },
      "63": {
        start: {
          line: 196,
          column: 38
        },
        end: {
          line: 196,
          column: 73
        }
      },
      "64": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 197,
          column: 76
        }
      },
      "65": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 202,
          column: 15
        }
      },
      "66": {
        start: {
          line: 203,
          column: 37
        },
        end: {
          line: 203,
          column: 67
        }
      },
      "67": {
        start: {
          line: 204,
          column: 12
        },
        end: {
          line: 208,
          column: 14
        }
      },
      "68": {
        start: {
          line: 211,
          column: 12
        },
        end: {
          line: 215,
          column: 14
        }
      },
      "69": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 255,
          column: 9
        }
      },
      "70": {
        start: {
          line: 223,
          column: 32
        },
        end: {
          line: 226,
          column: 14
        }
      },
      "71": {
        start: {
          line: 227,
          column: 12
        },
        end: {
          line: 229,
          column: 13
        }
      },
      "72": {
        start: {
          line: 228,
          column: 16
        },
        end: {
          line: 228,
          column: 77
        }
      },
      "73": {
        start: {
          line: 230,
          column: 28
        },
        end: {
          line: 230,
          column: 47
        }
      },
      "74": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 236,
          column: 13
        }
      },
      "75": {
        start: {
          line: 232,
          column: 16
        },
        end: {
          line: 235,
          column: 18
        }
      },
      "76": {
        start: {
          line: 238,
          column: 44
        },
        end: {
          line: 238,
          column: 145
        }
      },
      "77": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 244,
          column: 15
        }
      },
      "78": {
        start: {
          line: 245,
          column: 12
        },
        end: {
          line: 248,
          column: 14
        }
      },
      "79": {
        start: {
          line: 251,
          column: 12
        },
        end: {
          line: 254,
          column: 14
        }
      },
      "80": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 307,
          column: 9
        }
      },
      "81": {
        start: {
          line: 262,
          column: 27
        },
        end: {
          line: 262,
          column: 29
        }
      },
      "82": {
        start: {
          line: 263,
          column: 36
        },
        end: {
          line: 263,
          column: 38
        }
      },
      "83": {
        start: {
          line: 265,
          column: 34
        },
        end: {
          line: 265,
          column: 85
        }
      },
      "84": {
        start: {
          line: 266,
          column: 12
        },
        end: {
          line: 268,
          column: 13
        }
      },
      "85": {
        start: {
          line: 267,
          column: 16
        },
        end: {
          line: 267,
          column: 78
        }
      },
      "86": {
        start: {
          line: 270,
          column: 32
        },
        end: {
          line: 273,
          column: 14
        }
      },
      "87": {
        start: {
          line: 274,
          column: 12
        },
        end: {
          line: 277,
          column: 13
        }
      },
      "88": {
        start: {
          line: 275,
          column: 16
        },
        end: {
          line: 275,
          column: 54
        }
      },
      "89": {
        start: {
          line: 276,
          column: 16
        },
        end: {
          line: 276,
          column: 65
        }
      },
      "90": {
        start: {
          line: 278,
          column: 28
        },
        end: {
          line: 278,
          column: 47
        }
      },
      "91": {
        start: {
          line: 280,
          column: 12
        },
        end: {
          line: 283,
          column: 13
        }
      },
      "92": {
        start: {
          line: 281,
          column: 16
        },
        end: {
          line: 281,
          column: 75
        }
      },
      "93": {
        start: {
          line: 282,
          column: 16
        },
        end: {
          line: 282,
          column: 80
        }
      },
      "94": {
        start: {
          line: 285,
          column: 12
        },
        end: {
          line: 287,
          column: 13
        }
      },
      "95": {
        start: {
          line: 286,
          column: 16
        },
        end: {
          line: 286,
          column: 87
        }
      },
      "96": {
        start: {
          line: 289,
          column: 12
        },
        end: {
          line: 294,
          column: 13
        }
      },
      "97": {
        start: {
          line: 290,
          column: 40
        },
        end: {
          line: 290,
          column: 130
        }
      },
      "98": {
        start: {
          line: 291,
          column: 16
        },
        end: {
          line: 293,
          column: 17
        }
      },
      "99": {
        start: {
          line: 292,
          column: 20
        },
        end: {
          line: 292,
          column: 105
        }
      },
      "100": {
        start: {
          line: 295,
          column: 12
        },
        end: {
          line: 299,
          column: 14
        }
      },
      "101": {
        start: {
          line: 302,
          column: 12
        },
        end: {
          line: 306,
          column: 14
        }
      },
      "102": {
        start: {
          line: 313,
          column: 8
        },
        end: {
          line: 326,
          column: 9
        }
      },
      "103": {
        start: {
          line: 315,
          column: 16
        },
        end: {
          line: 315,
          column: 72
        }
      },
      "104": {
        start: {
          line: 318,
          column: 16
        },
        end: {
          line: 318,
          column: 81
        }
      },
      "105": {
        start: {
          line: 321,
          column: 16
        },
        end: {
          line: 321,
          column: 72
        }
      },
      "106": {
        start: {
          line: 324,
          column: 16
        },
        end: {
          line: 324,
          column: 29
        }
      },
      "107": {
        start: {
          line: 332,
          column: 8
        },
        end: {
          line: 341,
          column: 9
        }
      },
      "108": {
        start: {
          line: 333,
          column: 32
        },
        end: {
          line: 333,
          column: 74
        }
      },
      "109": {
        start: {
          line: 334,
          column: 12
        },
        end: {
          line: 336,
          column: 13
        }
      },
      "110": {
        start: {
          line: 335,
          column: 16
        },
        end: {
          line: 335,
          column: 28
        }
      },
      "111": {
        start: {
          line: 337,
          column: 12
        },
        end: {
          line: 337,
          column: 76
        }
      },
      "112": {
        start: {
          line: 340,
          column: 12
        },
        end: {
          line: 340,
          column: 74
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        loc: {
          start: {
            line: 7,
            column: 64
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        },
        loc: {
          start: {
            line: 52,
            column: 49
          },
          end: {
            line: 76,
            column: 5
          }
        },
        line: 52
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 80,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        },
        loc: {
          start: {
            line: 80,
            column: 59
          },
          end: {
            line: 88,
            column: 5
          }
        },
        line: 80
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 92,
            column: 4
          },
          end: {
            line: 92,
            column: 5
          }
        },
        loc: {
          start: {
            line: 92,
            column: 78
          },
          end: {
            line: 104,
            column: 5
          }
        },
        line: 92
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 108,
            column: 4
          },
          end: {
            line: 108,
            column: 5
          }
        },
        loc: {
          start: {
            line: 108,
            column: 62
          },
          end: {
            line: 118,
            column: 5
          }
        },
        line: 108
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 122,
            column: 4
          },
          end: {
            line: 122,
            column: 5
          }
        },
        loc: {
          start: {
            line: 122,
            column: 45
          },
          end: {
            line: 136,
            column: 5
          }
        },
        line: 122
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 140,
            column: 4
          },
          end: {
            line: 140,
            column: 5
          }
        },
        loc: {
          start: {
            line: 140,
            column: 65
          },
          end: {
            line: 161,
            column: 5
          }
        },
        line: 140
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 165,
            column: 4
          },
          end: {
            line: 165,
            column: 5
          }
        },
        loc: {
          start: {
            line: 165,
            column: 53
          },
          end: {
            line: 217,
            column: 5
          }
        },
        line: 165
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 221,
            column: 4
          },
          end: {
            line: 221,
            column: 5
          }
        },
        loc: {
          start: {
            line: 221,
            column: 63
          },
          end: {
            line: 256,
            column: 5
          }
        },
        line: 221
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 260,
            column: 4
          },
          end: {
            line: 260,
            column: 5
          }
        },
        loc: {
          start: {
            line: 260,
            column: 55
          },
          end: {
            line: 308,
            column: 5
          }
        },
        line: 260
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 312,
            column: 4
          },
          end: {
            line: 312,
            column: 5
          }
        },
        loc: {
          start: {
            line: 312,
            column: 53
          },
          end: {
            line: 327,
            column: 5
          }
        },
        line: 312
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 331,
            column: 4
          },
          end: {
            line: 331,
            column: 5
          }
        },
        loc: {
          start: {
            line: 331,
            column: 49
          },
          end: {
            line: 342,
            column: 5
          }
        },
        line: 331
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 16
          },
          end: {
            line: 22,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 15,
            column: 16
          },
          end: {
            line: 22,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 33
          },
          end: {
            line: 17,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 33
          },
          end: {
            line: 17,
            column: 46
          }
        }, {
          start: {
            line: 17,
            column: 50
          },
          end: {
            line: 17,
            column: 55
          }
        }],
        line: 17
      },
      "2": {
        loc: {
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 42,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 42,
            column: 13
          }
        }, {
          start: {
            line: 40,
            column: 17
          },
          end: {
            line: 42,
            column: 13
          }
        }],
        line: 30
      },
      "3": {
        loc: {
          start: {
            line: 30,
            column: 16
          },
          end: {
            line: 30,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 16
          },
          end: {
            line: 30,
            column: 40
          }
        }, {
          start: {
            line: 30,
            column: 44
          },
          end: {
            line: 30,
            column: 79
          }
        }],
        line: 30
      },
      "4": {
        loc: {
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 60,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 60,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "5": {
        loc: {
          start: {
            line: 58,
            column: 16
          },
          end: {
            line: 58,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 16
          },
          end: {
            line: 58,
            column: 33
          }
        }, {
          start: {
            line: 58,
            column: 37
          },
          end: {
            line: 58,
            column: 66
          }
        }],
        line: 58
      },
      "6": {
        loc: {
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 65,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 65,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "7": {
        loc: {
          start: {
            line: 67,
            column: 12
          },
          end: {
            line: 70,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 12
          },
          end: {
            line: 70,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "8": {
        loc: {
          start: {
            line: 83,
            column: 19
          },
          end: {
            line: 83,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 83,
            column: 20
          },
          end: {
            line: 83,
            column: 98
          }
        }, {
          start: {
            line: 83,
            column: 103
          },
          end: {
            line: 83,
            column: 107
          }
        }],
        line: 83
      },
      "9": {
        loc: {
          start: {
            line: 83,
            column: 20
          },
          end: {
            line: 83,
            column: 98
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 83,
            column: 69
          },
          end: {
            line: 83,
            column: 75
          }
        }, {
          start: {
            line: 83,
            column: 78
          },
          end: {
            line: 83,
            column: 98
          }
        }],
        line: 83
      },
      "10": {
        loc: {
          start: {
            line: 83,
            column: 20
          },
          end: {
            line: 83,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 83,
            column: 20
          },
          end: {
            line: 83,
            column: 40
          }
        }, {
          start: {
            line: 83,
            column: 44
          },
          end: {
            line: 83,
            column: 66
          }
        }],
        line: 83
      },
      "11": {
        loc: {
          start: {
            line: 95,
            column: 40
          },
          end: {
            line: 95,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 41
          },
          end: {
            line: 95,
            column: 83
          }
        }, {
          start: {
            line: 95,
            column: 88
          },
          end: {
            line: 95,
            column: 90
          }
        }],
        line: 95
      },
      "12": {
        loc: {
          start: {
            line: 110,
            column: 40
          },
          end: {
            line: 110,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 41
          },
          end: {
            line: 110,
            column: 83
          }
        }, {
          start: {
            line: 110,
            column: 88
          },
          end: {
            line: 110,
            column: 90
          }
        }],
        line: 110
      },
      "13": {
        loc: {
          start: {
            line: 128,
            column: 12
          },
          end: {
            line: 130,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 12
          },
          end: {
            line: 130,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 128
      },
      "14": {
        loc: {
          start: {
            line: 128,
            column: 16
          },
          end: {
            line: 128,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 128,
            column: 16
          },
          end: {
            line: 128,
            column: 33
          }
        }, {
          start: {
            line: 128,
            column: 37
          },
          end: {
            line: 128,
            column: 66
          }
        }],
        line: 128
      },
      "15": {
        loc: {
          start: {
            line: 131,
            column: 19
          },
          end: {
            line: 131,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 131,
            column: 19
          },
          end: {
            line: 131,
            column: 53
          }
        }, {
          start: {
            line: 131,
            column: 57
          },
          end: {
            line: 131,
            column: 59
          }
        }],
        line: 131
      },
      "16": {
        loc: {
          start: {
            line: 146,
            column: 12
          },
          end: {
            line: 148,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 12
          },
          end: {
            line: 148,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      },
      "17": {
        loc: {
          start: {
            line: 146,
            column: 16
          },
          end: {
            line: 146,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 146,
            column: 16
          },
          end: {
            line: 146,
            column: 33
          }
        }, {
          start: {
            line: 146,
            column: 37
          },
          end: {
            line: 146,
            column: 66
          }
        }],
        line: 146
      },
      "18": {
        loc: {
          start: {
            line: 150,
            column: 34
          },
          end: {
            line: 150,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 150,
            column: 34
          },
          end: {
            line: 150,
            column: 56
          }
        }, {
          start: {
            line: 150,
            column: 60
          },
          end: {
            line: 150,
            column: 62
          }
        }],
        line: 150
      },
      "19": {
        loc: {
          start: {
            line: 171,
            column: 12
          },
          end: {
            line: 177,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 171,
            column: 12
          },
          end: {
            line: 177,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 171
      },
      "20": {
        loc: {
          start: {
            line: 171,
            column: 16
          },
          end: {
            line: 171,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 171,
            column: 16
          },
          end: {
            line: 171,
            column: 33
          }
        }, {
          start: {
            line: 171,
            column: 37
          },
          end: {
            line: 171,
            column: 66
          }
        }],
        line: 171
      },
      "21": {
        loc: {
          start: {
            line: 180,
            column: 12
          },
          end: {
            line: 186,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 180,
            column: 12
          },
          end: {
            line: 186,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 180
      },
      "22": {
        loc: {
          start: {
            line: 188,
            column: 12
          },
          end: {
            line: 194,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 188,
            column: 12
          },
          end: {
            line: 194,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 188
      },
      "23": {
        loc: {
          start: {
            line: 227,
            column: 12
          },
          end: {
            line: 229,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 227,
            column: 12
          },
          end: {
            line: 229,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 227
      },
      "24": {
        loc: {
          start: {
            line: 227,
            column: 16
          },
          end: {
            line: 227,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 227,
            column: 16
          },
          end: {
            line: 227,
            column: 33
          }
        }, {
          start: {
            line: 227,
            column: 37
          },
          end: {
            line: 227,
            column: 66
          }
        }],
        line: 227
      },
      "25": {
        loc: {
          start: {
            line: 231,
            column: 12
          },
          end: {
            line: 236,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 231,
            column: 12
          },
          end: {
            line: 236,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 231
      },
      "26": {
        loc: {
          start: {
            line: 266,
            column: 12
          },
          end: {
            line: 268,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 266,
            column: 12
          },
          end: {
            line: 268,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 266
      },
      "27": {
        loc: {
          start: {
            line: 274,
            column: 12
          },
          end: {
            line: 277,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 274,
            column: 12
          },
          end: {
            line: 277,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 274
      },
      "28": {
        loc: {
          start: {
            line: 274,
            column: 16
          },
          end: {
            line: 274,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 274,
            column: 16
          },
          end: {
            line: 274,
            column: 33
          }
        }, {
          start: {
            line: 274,
            column: 37
          },
          end: {
            line: 274,
            column: 66
          }
        }],
        line: 274
      },
      "29": {
        loc: {
          start: {
            line: 280,
            column: 12
          },
          end: {
            line: 283,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 280,
            column: 12
          },
          end: {
            line: 283,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 280
      },
      "30": {
        loc: {
          start: {
            line: 280,
            column: 16
          },
          end: {
            line: 280,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 280,
            column: 16
          },
          end: {
            line: 280,
            column: 54
          }
        }, {
          start: {
            line: 280,
            column: 58
          },
          end: {
            line: 280,
            column: 93
          }
        }],
        line: 280
      },
      "31": {
        loc: {
          start: {
            line: 285,
            column: 12
          },
          end: {
            line: 287,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 285,
            column: 12
          },
          end: {
            line: 287,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 285
      },
      "32": {
        loc: {
          start: {
            line: 285,
            column: 16
          },
          end: {
            line: 285,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 285,
            column: 16
          },
          end: {
            line: 285,
            column: 42
          }
        }, {
          start: {
            line: 285,
            column: 46
          },
          end: {
            line: 285,
            column: 81
          }
        }],
        line: 285
      },
      "33": {
        loc: {
          start: {
            line: 289,
            column: 12
          },
          end: {
            line: 294,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 289,
            column: 12
          },
          end: {
            line: 294,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 289
      },
      "34": {
        loc: {
          start: {
            line: 291,
            column: 16
          },
          end: {
            line: 293,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 291,
            column: 16
          },
          end: {
            line: 293,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 291
      },
      "35": {
        loc: {
          start: {
            line: 313,
            column: 8
          },
          end: {
            line: 326,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 314,
            column: 12
          },
          end: {
            line: 316,
            column: 13
          }
        }, {
          start: {
            line: 317,
            column: 12
          },
          end: {
            line: 319,
            column: 13
          }
        }, {
          start: {
            line: 320,
            column: 12
          },
          end: {
            line: 322,
            column: 13
          }
        }, {
          start: {
            line: 323,
            column: 12
          },
          end: {
            line: 325,
            column: 13
          }
        }],
        line: 313
      },
      "36": {
        loc: {
          start: {
            line: 315,
            column: 26
          },
          end: {
            line: 315,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 315,
            column: 26
          },
          end: {
            line: 315,
            column: 44
          }
        }, {
          start: {
            line: 315,
            column: 48
          },
          end: {
            line: 315,
            column: 70
          }
        }],
        line: 315
      },
      "37": {
        loc: {
          start: {
            line: 318,
            column: 26
          },
          end: {
            line: 318,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 318,
            column: 26
          },
          end: {
            line: 318,
            column: 50
          }
        }, {
          start: {
            line: 318,
            column: 54
          },
          end: {
            line: 318,
            column: 79
          }
        }],
        line: 318
      },
      "38": {
        loc: {
          start: {
            line: 321,
            column: 26
          },
          end: {
            line: 321,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 321,
            column: 26
          },
          end: {
            line: 321,
            column: 44
          }
        }, {
          start: {
            line: 321,
            column: 48
          },
          end: {
            line: 321,
            column: 70
          }
        }],
        line: 321
      },
      "39": {
        loc: {
          start: {
            line: 334,
            column: 12
          },
          end: {
            line: 336,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 334,
            column: 12
          },
          end: {
            line: 336,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 334
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0, 0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7a2f9dfdac1e35a9df1c6161584859587c65316a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_14a42r69f8 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_14a42r69f8();
import { SchoolBankDetails } from "@/models/school_bank_details.model";
import { CredentialEncryptionService } from "./credential_encryption.service";
export class SecurePaymentCredentialService {
  /**
   * Store encrypted payment gateway credentials
   */
  static async storeSecureCredentials(campus_id, credentials) {
    /* istanbul ignore next */
    cov_14a42r69f8().f[0]++;
    cov_14a42r69f8().s[0]++;
    try {
      // Encrypt credentials
      const encryptedCredentials =
      /* istanbul ignore next */
      (cov_14a42r69f8().s[1]++, CredentialEncryptionService.encryptCredentials(credentials));
      // Prepare gateway status (non-sensitive metadata)
      const gatewayStatus =
      /* istanbul ignore next */
      (cov_14a42r69f8().s[2]++, {});
      /* istanbul ignore next */
      cov_14a42r69f8().s[3]++;
      for (const gateway of Object.keys(credentials)) {
        const creds =
        /* istanbul ignore next */
        (cov_14a42r69f8().s[4]++, credentials[gateway]);
        /* istanbul ignore next */
        cov_14a42r69f8().s[5]++;
        if (creds) {
          /* istanbul ignore next */
          cov_14a42r69f8().b[0][0]++;
          cov_14a42r69f8().s[6]++;
          gatewayStatus[gateway] = {
            enabled:
            /* istanbul ignore next */
            (cov_14a42r69f8().b[1][0]++, creds.enabled) ||
            /* istanbul ignore next */
            (cov_14a42r69f8().b[1][1]++, false),
            configured: this.isGatewayConfigured(gateway, creds),
            last_tested: null,
            test_status: "untested"
          };
        } else
        /* istanbul ignore next */
        {
          cov_14a42r69f8().b[0][1]++;
        }
      }
      // Find existing bank details
      const existingBankDetails =
      /* istanbul ignore next */
      (cov_14a42r69f8().s[7]++, await SchoolBankDetails.find({
        campus_id,
        is_active: true
      }));
      let bankDetails;
      /* istanbul ignore next */
      cov_14a42r69f8().s[8]++;
      if (
      /* istanbul ignore next */
      (cov_14a42r69f8().b[3][0]++, existingBankDetails.rows) &&
      /* istanbul ignore next */
      (cov_14a42r69f8().b[3][1]++, existingBankDetails.rows.length > 0)) {
        /* istanbul ignore next */
        cov_14a42r69f8().b[2][0]++;
        cov_14a42r69f8().s[9]++;
        // Update existing record
        bankDetails = await SchoolBankDetails.updateById(existingBankDetails.rows[0].id, {
          encrypted_payment_credentials: encryptedCredentials,
          gateway_status: gatewayStatus,
          credential_updated_at: new Date(),
          encryption_version: "v1",
          updated_at: new Date()
        });
      } else {
        /* istanbul ignore next */
        cov_14a42r69f8().b[2][1]++;
        cov_14a42r69f8().s[10]++;
        throw new Error("Bank details not found. Please setup bank details first.");
      }
      /* istanbul ignore next */
      cov_14a42r69f8().s[11]++;
      return bankDetails;
    } catch (error) {
      /* istanbul ignore next */
      cov_14a42r69f8().s[12]++;
      throw new Error(`Failed to store secure credentials: ${error}`);
    }
  }
  /**
   * Retrieve and decrypt payment gateway credentials
   */
  static async getSecureCredentials(campus_id) {
    /* istanbul ignore next */
    cov_14a42r69f8().f[1]++;
    cov_14a42r69f8().s[13]++;
    try {
      const bankDetails =
      /* istanbul ignore next */
      (cov_14a42r69f8().s[14]++, await SchoolBankDetails.find({
        campus_id,
        is_active: true
      }));
      /* istanbul ignore next */
      cov_14a42r69f8().s[15]++;
      if (
      /* istanbul ignore next */
      (cov_14a42r69f8().b[5][0]++, !bankDetails.rows) ||
      /* istanbul ignore next */
      (cov_14a42r69f8().b[5][1]++, bankDetails.rows.length === 0)) {
        /* istanbul ignore next */
        cov_14a42r69f8().b[4][0]++;
        cov_14a42r69f8().s[16]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_14a42r69f8().b[4][1]++;
      }
      const details =
      /* istanbul ignore next */
      (cov_14a42r69f8().s[17]++, bankDetails.rows[0]);
      // Check if encrypted credentials exist
      /* istanbul ignore next */
      cov_14a42r69f8().s[18]++;
      if (details.encrypted_payment_credentials) {
        /* istanbul ignore next */
        cov_14a42r69f8().b[6][0]++;
        cov_14a42r69f8().s[19]++;
        return CredentialEncryptionService.decryptCredentials(details.encrypted_payment_credentials);
      } else
      /* istanbul ignore next */
      {
        cov_14a42r69f8().b[6][1]++;
      }
      // Fallback to legacy unencrypted credentials (for backward compatibility)
      cov_14a42r69f8().s[20]++;
      if (details.payment_gateway_credentials) {
        /* istanbul ignore next */
        cov_14a42r69f8().b[7][0]++;
        cov_14a42r69f8().s[21]++;
        console.warn(`Legacy unencrypted credentials found for campus ${campus_id}. Consider migrating to encrypted storage.`);
        /* istanbul ignore next */
        cov_14a42r69f8().s[22]++;
        return details.payment_gateway_credentials;
      } else
      /* istanbul ignore next */
      {
        cov_14a42r69f8().b[7][1]++;
      }
      cov_14a42r69f8().s[23]++;
      return null;
    } catch (error) {
      /* istanbul ignore next */
      cov_14a42r69f8().s[24]++;
      throw new Error(`Failed to retrieve secure credentials: ${error}`);
    }
  }
  /**
   * Get specific gateway credentials
   */
  static async getGatewayCredentials(campus_id, gateway) {
    /* istanbul ignore next */
    cov_14a42r69f8().f[2]++;
    cov_14a42r69f8().s[25]++;
    try {
      const credentials =
      /* istanbul ignore next */
      (cov_14a42r69f8().s[26]++, await this.getSecureCredentials(campus_id));
      /* istanbul ignore next */
      cov_14a42r69f8().s[27]++;
      return /* istanbul ignore next */(cov_14a42r69f8().b[8][0]++,
      /* istanbul ignore next */
      (cov_14a42r69f8().b[10][0]++, credentials === null) ||
      /* istanbul ignore next */
      (cov_14a42r69f8().b[10][1]++, credentials === void 0) ?
      /* istanbul ignore next */
      (cov_14a42r69f8().b[9][0]++, void 0) :
      /* istanbul ignore next */
      (cov_14a42r69f8().b[9][1]++, credentials[gateway])) ||
      /* istanbul ignore next */
      (cov_14a42r69f8().b[8][1]++, null);
    } catch (error) {
      /* istanbul ignore next */
      cov_14a42r69f8().s[28]++;
      throw new Error(`Failed to get ${gateway} credentials: ${error}`);
    }
  }
  /**
   * Update specific gateway credentials
   */
  static async updateGatewayCredentials(campus_id, gateway, newCredentials) {
    /* istanbul ignore next */
    cov_14a42r69f8().f[3]++;
    cov_14a42r69f8().s[29]++;
    try {
      // Get existing credentials
      const existingCredentials =
      /* istanbul ignore next */
      (cov_14a42r69f8().s[30]++,
      /* istanbul ignore next */
      (cov_14a42r69f8().b[11][0]++, await this.getSecureCredentials(campus_id)) ||
      /* istanbul ignore next */
      (cov_14a42r69f8().b[11][1]++, {}));
      // Update specific gateway
      const updatedCredentials =
      /* istanbul ignore next */
      (cov_14a42r69f8().s[31]++, Object.assign(Object.assign({}, existingCredentials), {
        [gateway]: newCredentials
      }));
      // Store updated credentials
      /* istanbul ignore next */
      cov_14a42r69f8().s[32]++;
      return await this.storeSecureCredentials(campus_id, updatedCredentials);
    } catch (error) {
      /* istanbul ignore next */
      cov_14a42r69f8().s[33]++;
      throw new Error(`Failed to update ${gateway} credentials: ${error}`);
    }
  }
  /**
   * Remove specific gateway credentials
   */
  static async removeGatewayCredentials(campus_id, gateway) {
    /* istanbul ignore next */
    cov_14a42r69f8().f[4]++;
    cov_14a42r69f8().s[34]++;
    try {
      const existingCredentials =
      /* istanbul ignore next */
      (cov_14a42r69f8().s[35]++,
      /* istanbul ignore next */
      (cov_14a42r69f8().b[12][0]++, await this.getSecureCredentials(campus_id)) ||
      /* istanbul ignore next */
      (cov_14a42r69f8().b[12][1]++, {}));
      // Remove specific gateway
      /* istanbul ignore next */
      cov_14a42r69f8().s[36]++;
      delete existingCredentials[gateway];
      /* istanbul ignore next */
      cov_14a42r69f8().s[37]++;
      return await this.storeSecureCredentials(campus_id, existingCredentials);
    } catch (error) {
      /* istanbul ignore next */
      cov_14a42r69f8().s[38]++;
      throw new Error(`Failed to remove ${gateway} credentials: ${error}`);
    }
  }
  /**
   * Get gateway status (non-sensitive information)
   */
  static async getGatewayStatus(campus_id) {
    /* istanbul ignore next */
    cov_14a42r69f8().f[5]++;
    cov_14a42r69f8().s[39]++;
    try {
      const bankDetails =
      /* istanbul ignore next */
      (cov_14a42r69f8().s[40]++, await SchoolBankDetails.find({
        campus_id,
        is_active: true
      }));
      /* istanbul ignore next */
      cov_14a42r69f8().s[41]++;
      if (
      /* istanbul ignore next */
      (cov_14a42r69f8().b[14][0]++, !bankDetails.rows) ||
      /* istanbul ignore next */
      (cov_14a42r69f8().b[14][1]++, bankDetails.rows.length === 0)) {
        /* istanbul ignore next */
        cov_14a42r69f8().b[13][0]++;
        cov_14a42r69f8().s[42]++;
        return {};
      } else
      /* istanbul ignore next */
      {
        cov_14a42r69f8().b[13][1]++;
      }
      cov_14a42r69f8().s[43]++;
      return /* istanbul ignore next */(cov_14a42r69f8().b[15][0]++, bankDetails.rows[0].gateway_status) ||
      /* istanbul ignore next */
      (cov_14a42r69f8().b[15][1]++, {});
    } catch (error) {
      /* istanbul ignore next */
      cov_14a42r69f8().s[44]++;
      throw new Error(`Failed to get gateway status: ${error}`);
    }
  }
  /**
   * Update gateway status
   */
  static async updateGatewayStatus(campus_id, gateway, status) {
    /* istanbul ignore next */
    cov_14a42r69f8().f[6]++;
    cov_14a42r69f8().s[45]++;
    try {
      const bankDetails =
      /* istanbul ignore next */
      (cov_14a42r69f8().s[46]++, await SchoolBankDetails.find({
        campus_id,
        is_active: true
      }));
      /* istanbul ignore next */
      cov_14a42r69f8().s[47]++;
      if (
      /* istanbul ignore next */
      (cov_14a42r69f8().b[17][0]++, !bankDetails.rows) ||
      /* istanbul ignore next */
      (cov_14a42r69f8().b[17][1]++, bankDetails.rows.length === 0)) {
        /* istanbul ignore next */
        cov_14a42r69f8().b[16][0]++;
        cov_14a42r69f8().s[48]++;
        throw new Error("Bank details not found");
      } else
      /* istanbul ignore next */
      {
        cov_14a42r69f8().b[16][1]++;
      }
      const details =
      /* istanbul ignore next */
      (cov_14a42r69f8().s[49]++, bankDetails.rows[0]);
      const gatewayStatus =
      /* istanbul ignore next */
      (cov_14a42r69f8().s[50]++,
      /* istanbul ignore next */
      (cov_14a42r69f8().b[18][0]++, details.gateway_status) ||
      /* istanbul ignore next */
      (cov_14a42r69f8().b[18][1]++, {}));
      // Update specific gateway status
      /* istanbul ignore next */
      cov_14a42r69f8().s[51]++;
      gatewayStatus[gateway] = Object.assign(Object.assign({}, gatewayStatus[gateway]), status);
      /* istanbul ignore next */
      cov_14a42r69f8().s[52]++;
      return await SchoolBankDetails.updateById(details.id, {
        gateway_status: gatewayStatus,
        updated_at: new Date()
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_14a42r69f8().s[53]++;
      throw new Error(`Failed to update gateway status: ${error}`);
    }
  }
  /**
   * Migrate legacy unencrypted credentials to encrypted storage
   */
  static async migrateLegacyCredentials(campus_id) {
    /* istanbul ignore next */
    cov_14a42r69f8().f[7]++;
    cov_14a42r69f8().s[54]++;
    try {
      const bankDetails =
      /* istanbul ignore next */
      (cov_14a42r69f8().s[55]++, await SchoolBankDetails.find({
        campus_id,
        is_active: true
      }));
      /* istanbul ignore next */
      cov_14a42r69f8().s[56]++;
      if (
      /* istanbul ignore next */
      (cov_14a42r69f8().b[20][0]++, !bankDetails.rows) ||
      /* istanbul ignore next */
      (cov_14a42r69f8().b[20][1]++, bankDetails.rows.length === 0)) {
        /* istanbul ignore next */
        cov_14a42r69f8().b[19][0]++;
        cov_14a42r69f8().s[57]++;
        return {
          success: false,
          message: "Bank details not found",
          migrated_gateways: []
        };
      } else
      /* istanbul ignore next */
      {
        cov_14a42r69f8().b[19][1]++;
      }
      const details =
      /* istanbul ignore next */
      (cov_14a42r69f8().s[58]++, bankDetails.rows[0]);
      // Check if already encrypted
      /* istanbul ignore next */
      cov_14a42r69f8().s[59]++;
      if (details.encrypted_payment_credentials) {
        /* istanbul ignore next */
        cov_14a42r69f8().b[21][0]++;
        cov_14a42r69f8().s[60]++;
        return {
          success: true,
          message: "Credentials already encrypted",
          migrated_gateways: []
        };
      } else
      /* istanbul ignore next */
      {
        cov_14a42r69f8().b[21][1]++;
      }
      // Check if legacy credentials exist
      cov_14a42r69f8().s[61]++;
      if (!details.payment_gateway_credentials) {
        /* istanbul ignore next */
        cov_14a42r69f8().b[22][0]++;
        cov_14a42r69f8().s[62]++;
        return {
          success: false,
          message: "No credentials found to migrate",
          migrated_gateways: []
        };
      } else
      /* istanbul ignore next */
      {
        cov_14a42r69f8().b[22][1]++;
      }
      // Migrate to encrypted storage
      const legacyCredentials =
      /* istanbul ignore next */
      (cov_14a42r69f8().s[63]++, details.payment_gateway_credentials);
      /* istanbul ignore next */
      cov_14a42r69f8().s[64]++;
      await this.storeSecureCredentials(campus_id, legacyCredentials);
      // Clear legacy credentials
      /* istanbul ignore next */
      cov_14a42r69f8().s[65]++;
      await SchoolBankDetails.updateById(details.id, {
        payment_gateway_credentials: {},
        updated_at: new Date()
      });
      const migratedGateways =
      /* istanbul ignore next */
      (cov_14a42r69f8().s[66]++, Object.keys(legacyCredentials));
      /* istanbul ignore next */
      cov_14a42r69f8().s[67]++;
      return {
        success: true,
        message: "Credentials successfully migrated to encrypted storage",
        migrated_gateways: migratedGateways
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_14a42r69f8().s[68]++;
      return {
        success: false,
        message: `Migration failed: ${error}`,
        migrated_gateways: []
      };
    }
  }
  /**
   * Rotate encryption for existing credentials
   */
  static async rotateEncryption(campus_id, oldEncryptionKey) {
    /* istanbul ignore next */
    cov_14a42r69f8().f[8]++;
    cov_14a42r69f8().s[69]++;
    try {
      const bankDetails =
      /* istanbul ignore next */
      (cov_14a42r69f8().s[70]++, await SchoolBankDetails.find({
        campus_id,
        is_active: true
      }));
      /* istanbul ignore next */
      cov_14a42r69f8().s[71]++;
      if (
      /* istanbul ignore next */
      (cov_14a42r69f8().b[24][0]++, !bankDetails.rows) ||
      /* istanbul ignore next */
      (cov_14a42r69f8().b[24][1]++, bankDetails.rows.length === 0)) {
        /* istanbul ignore next */
        cov_14a42r69f8().b[23][0]++;
        cov_14a42r69f8().s[72]++;
        return {
          success: false,
          message: "Bank details not found"
        };
      } else
      /* istanbul ignore next */
      {
        cov_14a42r69f8().b[23][1]++;
      }
      const details =
      /* istanbul ignore next */
      (cov_14a42r69f8().s[73]++, bankDetails.rows[0]);
      /* istanbul ignore next */
      cov_14a42r69f8().s[74]++;
      if (!details.encrypted_payment_credentials) {
        /* istanbul ignore next */
        cov_14a42r69f8().b[25][0]++;
        cov_14a42r69f8().s[75]++;
        return {
          success: false,
          message: "No encrypted credentials found"
        };
      } else
      /* istanbul ignore next */
      {
        cov_14a42r69f8().b[25][1]++;
      }
      // Rotate encryption
      const newEncryptedCredentials =
      /* istanbul ignore next */
      (cov_14a42r69f8().s[76]++, CredentialEncryptionService.rotateEncryption(details.encrypted_payment_credentials, oldEncryptionKey));
      // Update with new encryption
      /* istanbul ignore next */
      cov_14a42r69f8().s[77]++;
      await SchoolBankDetails.updateById(details.id, {
        encrypted_payment_credentials: newEncryptedCredentials,
        encryption_version: "v2",
        updated_at: new Date()
      });
      /* istanbul ignore next */
      cov_14a42r69f8().s[78]++;
      return {
        success: true,
        message: "Encryption rotated successfully"
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_14a42r69f8().s[79]++;
      return {
        success: false,
        message: `Encryption rotation failed: ${error}`
      };
    }
  }
  /**
   * Validate encryption key and credentials
   */
  static async validateCredentialSecurity(campus_id) {
    /* istanbul ignore next */
    cov_14a42r69f8().f[9]++;
    cov_14a42r69f8().s[80]++;
    try {
      const issues =
      /* istanbul ignore next */
      (cov_14a42r69f8().s[81]++, []);
      const recommendations =
      /* istanbul ignore next */
      (cov_14a42r69f8().s[82]++, []);
      // Validate encryption key
      const keyValidation =
      /* istanbul ignore next */
      (cov_14a42r69f8().s[83]++, CredentialEncryptionService.validateEncryptionKey());
      /* istanbul ignore next */
      cov_14a42r69f8().s[84]++;
      if (!keyValidation.valid) {
        /* istanbul ignore next */
        cov_14a42r69f8().b[26][0]++;
        cov_14a42r69f8().s[85]++;
        issues.push(`Encryption key issue: ${keyValidation.message}`);
      } else
      /* istanbul ignore next */
      {
        cov_14a42r69f8().b[26][1]++;
      }
      // Check credential storage
      const bankDetails =
      /* istanbul ignore next */
      (cov_14a42r69f8().s[86]++, await SchoolBankDetails.find({
        campus_id,
        is_active: true
      }));
      /* istanbul ignore next */
      cov_14a42r69f8().s[87]++;
      if (
      /* istanbul ignore next */
      (cov_14a42r69f8().b[28][0]++, !bankDetails.rows) ||
      /* istanbul ignore next */
      (cov_14a42r69f8().b[28][1]++, bankDetails.rows.length === 0)) {
        /* istanbul ignore next */
        cov_14a42r69f8().b[27][0]++;
        cov_14a42r69f8().s[88]++;
        issues.push("Bank details not found");
        /* istanbul ignore next */
        cov_14a42r69f8().s[89]++;
        return {
          valid: false,
          issues,
          recommendations
        };
      } else
      /* istanbul ignore next */
      {
        cov_14a42r69f8().b[27][1]++;
      }
      const details =
      /* istanbul ignore next */
      (cov_14a42r69f8().s[90]++, bankDetails.rows[0]);
      // Check if using encrypted storage
      /* istanbul ignore next */
      cov_14a42r69f8().s[91]++;
      if (
      /* istanbul ignore next */
      (cov_14a42r69f8().b[30][0]++, !details.encrypted_payment_credentials) &&
      /* istanbul ignore next */
      (cov_14a42r69f8().b[30][1]++, details.payment_gateway_credentials)) {
        /* istanbul ignore next */
        cov_14a42r69f8().b[29][0]++;
        cov_14a42r69f8().s[92]++;
        issues.push("Using legacy unencrypted credential storage");
        /* istanbul ignore next */
        cov_14a42r69f8().s[93]++;
        recommendations.push("Migrate to encrypted credential storage");
      } else
      /* istanbul ignore next */
      {
        cov_14a42r69f8().b[29][1]++;
      }
      // Check encryption version
      cov_14a42r69f8().s[94]++;
      if (
      /* istanbul ignore next */
      (cov_14a42r69f8().b[32][0]++, details.encryption_version) &&
      /* istanbul ignore next */
      (cov_14a42r69f8().b[32][1]++, details.encryption_version !== "v2")) {
        /* istanbul ignore next */
        cov_14a42r69f8().b[31][0]++;
        cov_14a42r69f8().s[95]++;
        recommendations.push("Consider updating to latest encryption version");
      } else
      /* istanbul ignore next */
      {
        cov_14a42r69f8().b[31][1]++;
      }
      // Check last updated
      cov_14a42r69f8().s[96]++;
      if (details.credential_updated_at) {
        /* istanbul ignore next */
        cov_14a42r69f8().b[33][0]++;
        const daysSinceUpdate =
        /* istanbul ignore next */
        (cov_14a42r69f8().s[97]++, Math.floor((Date.now() - details.credential_updated_at.getTime()) / (1000 * 60 * 60 * 24)));
        /* istanbul ignore next */
        cov_14a42r69f8().s[98]++;
        if (daysSinceUpdate > 90) {
          /* istanbul ignore next */
          cov_14a42r69f8().b[34][0]++;
          cov_14a42r69f8().s[99]++;
          recommendations.push("Consider rotating payment gateway credentials (>90 days old)");
        } else
        /* istanbul ignore next */
        {
          cov_14a42r69f8().b[34][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_14a42r69f8().b[33][1]++;
      }
      cov_14a42r69f8().s[100]++;
      return {
        valid: issues.length === 0,
        issues,
        recommendations
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_14a42r69f8().s[101]++;
      return {
        valid: false,
        issues: [`Validation failed: ${error}`],
        recommendations: []
      };
    }
  }
  /**
   * Check if gateway is properly configured
   */
  static isGatewayConfigured(gateway, credentials) {
    /* istanbul ignore next */
    cov_14a42r69f8().f[10]++;
    cov_14a42r69f8().s[102]++;
    switch (gateway) {
      case "razorpay":
        /* istanbul ignore next */
        cov_14a42r69f8().b[35][0]++;
        {
          /* istanbul ignore next */
          cov_14a42r69f8().s[103]++;
          return !!(
          /* istanbul ignore next */
          (cov_14a42r69f8().b[36][0]++, credentials.key_id) &&
          /* istanbul ignore next */
          (cov_14a42r69f8().b[36][1]++, credentials.key_secret));
        }
      case "payu":
        /* istanbul ignore next */
        cov_14a42r69f8().b[35][1]++;
        {
          /* istanbul ignore next */
          cov_14a42r69f8().s[104]++;
          return !!(
          /* istanbul ignore next */
          (cov_14a42r69f8().b[37][0]++, credentials.merchant_key) &&
          /* istanbul ignore next */
          (cov_14a42r69f8().b[37][1]++, credentials.merchant_salt));
        }
      case "cashfree":
        /* istanbul ignore next */
        cov_14a42r69f8().b[35][2]++;
        {
          /* istanbul ignore next */
          cov_14a42r69f8().s[105]++;
          return !!(
          /* istanbul ignore next */
          (cov_14a42r69f8().b[38][0]++, credentials.app_id) &&
          /* istanbul ignore next */
          (cov_14a42r69f8().b[38][1]++, credentials.secret_key));
        }
      default:
        /* istanbul ignore next */
        cov_14a42r69f8().b[35][3]++;
        {
          /* istanbul ignore next */
          cov_14a42r69f8().s[106]++;
          return false;
        }
    }
  }
  /**
   * Get masked credentials for display/logging
   */
  static async getMaskedCredentials(campus_id) {
    /* istanbul ignore next */
    cov_14a42r69f8().f[11]++;
    cov_14a42r69f8().s[107]++;
    try {
      const credentials =
      /* istanbul ignore next */
      (cov_14a42r69f8().s[108]++, await this.getSecureCredentials(campus_id));
      /* istanbul ignore next */
      cov_14a42r69f8().s[109]++;
      if (!credentials) {
        /* istanbul ignore next */
        cov_14a42r69f8().b[39][0]++;
        cov_14a42r69f8().s[110]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_14a42r69f8().b[39][1]++;
      }
      cov_14a42r69f8().s[111]++;
      return CredentialEncryptionService.maskCredentials(credentials);
    } catch (error) {
      /* istanbul ignore next */
      cov_14a42r69f8().s[112]++;
      throw new Error(`Failed to get masked credentials: ${error}`);
    }
  }
}