534faa9ce2d4cc66c81bd3d70e9e0345
/* istanbul ignore next */
function cov_zi3rhcwzi() {
  var path = "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/utils/errors.ts";
  var hash = "42003b8acae873ab496cb574f380519041bbc6cd";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/utils/errors.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 8
        },
        end: {
          line: 6,
          column: 23
        }
      },
      "1": {
        start: {
          line: 7,
          column: 8
        },
        end: {
          line: 7,
          column: 37
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 43
        }
      },
      "3": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 42
        }
      },
      "4": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 56
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 28
        }
      },
      "6": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 28
        }
      },
      "7": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 28
        }
      },
      "8": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 28
        }
      },
      "9": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 28
        }
      },
      "10": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 28
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 5,
            column: 5
          }
        },
        loc: {
          start: {
            line: 5,
            column: 65
          },
          end: {
            line: 13,
            column: 5
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 25
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 48
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        loc: {
          start: {
            line: 26,
            column: 53
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 26
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        loc: {
          start: {
            line: 31,
            column: 49
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 31
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        loc: {
          start: {
            line: 36,
            column: 46
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 36
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        loc: {
          start: {
            line: 41,
            column: 55
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 41
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 5,
            column: 25
          },
          end: {
            line: 5,
            column: 41
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 5,
            column: 38
          },
          end: {
            line: 5,
            column: 41
          }
        }],
        line: 5
      },
      "1": {
        loc: {
          start: {
            line: 5,
            column: 43
          },
          end: {
            line: 5,
            column: 63
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 5,
            column: 59
          },
          end: {
            line: 5,
            column: 63
          }
        }],
        line: 5
      },
      "2": {
        loc: {
          start: {
            line: 21,
            column: 16
          },
          end: {
            line: 21,
            column: 46
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 21,
            column: 26
          },
          end: {
            line: 21,
            column: 46
          }
        }],
        line: 21
      },
      "3": {
        loc: {
          start: {
            line: 26,
            column: 16
          },
          end: {
            line: 26,
            column: 51
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 26,
            column: 26
          },
          end: {
            line: 26,
            column: 51
          }
        }],
        line: 26
      },
      "4": {
        loc: {
          start: {
            line: 31,
            column: 16
          },
          end: {
            line: 31,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 31,
            column: 26
          },
          end: {
            line: 31,
            column: 47
          }
        }],
        line: 31
      },
      "5": {
        loc: {
          start: {
            line: 36,
            column: 16
          },
          end: {
            line: 36,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 36,
            column: 26
          },
          end: {
            line: 36,
            column: 44
          }
        }],
        line: 36
      },
      "6": {
        loc: {
          start: {
            line: 41,
            column: 16
          },
          end: {
            line: 41,
            column: 53
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 41,
            column: 26
          },
          end: {
            line: 41,
            column: 53
          }
        }],
        line: 41
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0],
      "4": [0],
      "5": [0],
      "6": [0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "42003b8acae873ab496cb574f380519041bbc6cd"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_zi3rhcwzi = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_zi3rhcwzi();
/**
 * Custom error classes for better error handling across the application
 */
export class AppError extends Error {
  constructor(message, statusCode =
  /* istanbul ignore next */
  (cov_zi3rhcwzi().b[0][0]++, 500), isOperational =
  /* istanbul ignore next */
  (cov_zi3rhcwzi().b[1][0]++, true)) {
    /* istanbul ignore next */
    cov_zi3rhcwzi().f[0]++;
    cov_zi3rhcwzi().s[0]++;
    super(message);
    /* istanbul ignore next */
    cov_zi3rhcwzi().s[1]++;
    this.statusCode = statusCode;
    /* istanbul ignore next */
    cov_zi3rhcwzi().s[2]++;
    this.isOperational = isOperational;
    // Ensure the name of this error is the same as the class name
    /* istanbul ignore next */
    cov_zi3rhcwzi().s[3]++;
    this.name = this.constructor.name;
    // This clips the constructor invocation from the stack trace
    /* istanbul ignore next */
    cov_zi3rhcwzi().s[4]++;
    Error.captureStackTrace(this, this.constructor);
  }
}
export class ValidationError extends AppError {
  constructor(message) {
    /* istanbul ignore next */
    cov_zi3rhcwzi().f[1]++;
    cov_zi3rhcwzi().s[5]++;
    super(message, 400);
  }
}
export class NotFoundError extends AppError {
  constructor(message =
  /* istanbul ignore next */
  (cov_zi3rhcwzi().b[2][0]++, "Resource not found")) {
    /* istanbul ignore next */
    cov_zi3rhcwzi().f[2]++;
    cov_zi3rhcwzi().s[6]++;
    super(message, 404);
  }
}
export class ConflictError extends AppError {
  constructor(message =
  /* istanbul ignore next */
  (cov_zi3rhcwzi().b[3][0]++, "Resource already exists")) {
    /* istanbul ignore next */
    cov_zi3rhcwzi().f[3]++;
    cov_zi3rhcwzi().s[7]++;
    super(message, 409);
  }
}
export class UnauthorizedError extends AppError {
  constructor(message =
  /* istanbul ignore next */
  (cov_zi3rhcwzi().b[4][0]++, "Unauthorized access")) {
    /* istanbul ignore next */
    cov_zi3rhcwzi().f[4]++;
    cov_zi3rhcwzi().s[8]++;
    super(message, 401);
  }
}
export class ForbiddenError extends AppError {
  constructor(message =
  /* istanbul ignore next */
  (cov_zi3rhcwzi().b[5][0]++, "Forbidden access")) {
    /* istanbul ignore next */
    cov_zi3rhcwzi().f[5]++;
    cov_zi3rhcwzi().s[9]++;
    super(message, 403);
  }
}
export class DatabaseError extends AppError {
  constructor(message =
  /* istanbul ignore next */
  (cov_zi3rhcwzi().b[6][0]++, "Database operation failed")) {
    /* istanbul ignore next */
    cov_zi3rhcwzi().f[6]++;
    cov_zi3rhcwzi().s[10]++;
    super(message, 500);
  }
}