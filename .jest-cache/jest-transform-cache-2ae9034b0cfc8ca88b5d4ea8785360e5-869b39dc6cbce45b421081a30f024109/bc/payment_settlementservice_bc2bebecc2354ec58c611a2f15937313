6eb02506509eac65b85314c12eaf815f
/* istanbul ignore next */
function cov_1cuhajd55v() {
  var path = "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/services/payment_settlement.service.ts";
  var hash = "c79d4117e205aa243a37bf47d213d6bd25cd6ab3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/services/payment_settlement.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 18,
          column: 26
        },
        end: {
          line: 18,
          column: 36
        }
      },
      "1": {
        start: {
          line: 19,
          column: 31
        },
        end: {
          line: 19,
          column: 60
        }
      },
      "2": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 48,
          column: 11
        }
      },
      "3": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 163,
          column: 9
        }
      },
      "4": {
        start: {
          line: 51,
          column: 34
        },
        end: {
          line: 51,
          column: 97
        }
      },
      "5": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 57,
          column: 13
        }
      },
      "6": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 56,
          column: 19
        }
      },
      "7": {
        start: {
          line: 59,
          column: 37
        },
        end: {
          line: 59,
          column: 190
        }
      },
      "8": {
        start: {
          line: 61,
          column: 41
        },
        end: {
          line: 61,
          column: 150
        }
      },
      "9": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 64,
          column: 13
        }
      },
      "10": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 63,
          column: 81
        }
      },
      "11": {
        start: {
          line: 66,
          column: 43
        },
        end: {
          line: 66,
          column: 130
        }
      },
      "12": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 70,
          column: 13
        }
      },
      "13": {
        start: {
          line: 69,
          column: 16
        },
        end: {
          line: 69,
          column: 128
        }
      },
      "14": {
        start: {
          line: 72,
          column: 38
        },
        end: {
          line: 72,
          column: 80
        }
      },
      "15": {
        start: {
          line: 74,
          column: 31
        },
        end: {
          line: 83,
          column: 14
        }
      },
      "16": {
        start: {
          line: 85,
          column: 38
        },
        end: {
          line: 85,
          column: 100
        }
      },
      "17": {
        start: {
          line: 87,
          column: 38
        },
        end: {
          line: 93,
          column: 14
        }
      },
      "18": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 70
        }
      },
      "19": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 126,
          column: 15
        }
      },
      "20": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 127,
          column: 37
        }
      },
      "21": {
        start: {
          line: 130,
          column: 34
        },
        end: {
          line: 130,
          column: 56
        }
      },
      "22": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 161,
          column: 15
        }
      },
      "23": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 162,
          column: 24
        }
      },
      "24": {
        start: {
          line: 169,
          column: 26
        },
        end: {
          line: 169,
          column: 36
        }
      },
      "25": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 278,
          column: 9
        }
      },
      "26": {
        start: {
          line: 172,
          column: 37
        },
        end: {
          line: 172,
          column: 113
        }
      },
      "27": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 200,
          column: 13
        }
      },
      "28": {
        start: {
          line: 174,
          column: 16
        },
        end: {
          line: 198,
          column: 19
        }
      },
      "29": {
        start: {
          line: 199,
          column: 16
        },
        end: {
          line: 199,
          column: 61
        }
      },
      "30": {
        start: {
          line: 202,
          column: 31
        },
        end: {
          line: 202,
          column: 114
        }
      },
      "31": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 205,
          column: 13
        }
      },
      "32": {
        start: {
          line: 204,
          column: 16
        },
        end: {
          line: 204,
          column: 73
        }
      },
      "33": {
        start: {
          line: 207,
          column: 38
        },
        end: {
          line: 207,
          column: 119
        }
      },
      "34": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 211,
          column: 13
        }
      },
      "35": {
        start: {
          line: 210,
          column: 16
        },
        end: {
          line: 210,
          column: 73
        }
      },
      "36": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 241,
          column: 15
        }
      },
      "37": {
        start: {
          line: 242,
          column: 12
        },
        end: {
          line: 242,
          column: 68
        }
      },
      "38": {
        start: {
          line: 245,
          column: 34
        },
        end: {
          line: 245,
          column: 56
        }
      },
      "39": {
        start: {
          line: 247,
          column: 12
        },
        end: {
          line: 276,
          column: 15
        }
      },
      "40": {
        start: {
          line: 277,
          column: 12
        },
        end: {
          line: 277,
          column: 38
        }
      },
      "41": {
        start: {
          line: 285,
          column: 26
        },
        end: {
          line: 285,
          column: 36
        }
      },
      "42": {
        start: {
          line: 286,
          column: 8
        },
        end: {
          line: 395,
          column: 9
        }
      },
      "43": {
        start: {
          line: 288,
          column: 12
        },
        end: {
          line: 288,
          column: 85
        }
      },
      "44": {
        start: {
          line: 290,
          column: 31
        },
        end: {
          line: 290,
          column: 109
        }
      },
      "45": {
        start: {
          line: 291,
          column: 12
        },
        end: {
          line: 293,
          column: 13
        }
      },
      "46": {
        start: {
          line: 292,
          column: 16
        },
        end: {
          line: 292,
          column: 90
        }
      },
      "47": {
        start: {
          line: 295,
          column: 35
        },
        end: {
          line: 295,
          column: 98
        }
      },
      "48": {
        start: {
          line: 297,
          column: 12
        },
        end: {
          line: 317,
          column: 13
        }
      },
      "49": {
        start: {
          line: 299,
          column: 16
        },
        end: {
          line: 299,
          column: 634
        }
      },
      "50": {
        start: {
          line: 303,
          column: 16
        },
        end: {
          line: 316,
          column: 74
        }
      },
      "51": {
        start: {
          line: 319,
          column: 12
        },
        end: {
          line: 321,
          column: 13
        }
      },
      "52": {
        start: {
          line: 320,
          column: 16
        },
        end: {
          line: 320,
          column: 77
        }
      },
      "53": {
        start: {
          line: 323,
          column: 12
        },
        end: {
          line: 358,
          column: 15
        }
      },
      "54": {
        start: {
          line: 359,
          column: 12
        },
        end: {
          line: 359,
          column: 33
        }
      },
      "55": {
        start: {
          line: 362,
          column: 34
        },
        end: {
          line: 362,
          column: 56
        }
      },
      "56": {
        start: {
          line: 364,
          column: 12
        },
        end: {
          line: 393,
          column: 15
        }
      },
      "57": {
        start: {
          line: 394,
          column: 12
        },
        end: {
          line: 394,
          column: 24
        }
      },
      "58": {
        start: {
          line: 402,
          column: 26
        },
        end: {
          line: 402,
          column: 36
        }
      },
      "59": {
        start: {
          line: 403,
          column: 24
        },
        end: {
          line: 403,
          column: 43
        }
      },
      "60": {
        start: {
          line: 404,
          column: 8
        },
        end: {
          line: 469,
          column: 9
        }
      },
      "61": {
        start: {
          line: 406,
          column: 35
        },
        end: {
          line: 406,
          column: 84
        }
      },
      "62": {
        start: {
          line: 407,
          column: 42
        },
        end: {
          line: 407,
          column: 95
        }
      },
      "63": {
        start: {
          line: 409,
          column: 45
        },
        end: {
          line: 409,
          column: 119
        }
      },
      "64": {
        start: {
          line: 411,
          column: 41
        },
        end: {
          line: 411,
          column: 90
        }
      },
      "65": {
        start: {
          line: 413,
          column: 37
        },
        end: {
          line: 413,
          column: 80
        }
      },
      "66": {
        start: {
          line: 415,
          column: 34
        },
        end: {
          line: 420,
          column: 14
        }
      },
      "67": {
        start: {
          line: 422,
          column: 36
        },
        end: {
          line: 427,
          column: 14
        }
      },
      "68": {
        start: {
          line: 429,
          column: 12
        },
        end: {
          line: 455,
          column: 15
        }
      },
      "69": {
        start: {
          line: 456,
          column: 12
        },
        end: {
          line: 462,
          column: 14
        }
      },
      "70": {
        start: {
          line: 465,
          column: 12
        },
        end: {
          line: 468,
          column: 15
        }
      },
      "71": {
        start: {
          line: 473,
          column: 20
        },
        end: {
          line: 473,
          column: 45
        }
      },
      "72": {
        start: {
          line: 474,
          column: 22
        },
        end: {
          line: 474,
          column: 47
        }
      },
      "73": {
        start: {
          line: 475,
          column: 8
        },
        end: {
          line: 500,
          column: 9
        }
      },
      "74": {
        start: {
          line: 477,
          column: 16
        },
        end: {
          line: 477,
          column: 51
        }
      },
      "75": {
        start: {
          line: 478,
          column: 16
        },
        end: {
          line: 478,
          column: 22
        }
      },
      "76": {
        start: {
          line: 481,
          column: 16
        },
        end: {
          line: 481,
          column: 51
        }
      },
      "77": {
        start: {
          line: 482,
          column: 16
        },
        end: {
          line: 482,
          column: 22
        }
      },
      "78": {
        start: {
          line: 485,
          column: 16
        },
        end: {
          line: 485,
          column: 53
        }
      },
      "79": {
        start: {
          line: 486,
          column: 16
        },
        end: {
          line: 486,
          column: 22
        }
      },
      "80": {
        start: {
          line: 489,
          column: 16
        },
        end: {
          line: 494,
          column: 17
        }
      },
      "81": {
        start: {
          line: 490,
          column: 20
        },
        end: {
          line: 490,
          column: 78
        }
      },
      "82": {
        start: {
          line: 493,
          column: 20
        },
        end: {
          line: 493,
          column: 55
        }
      },
      "83": {
        start: {
          line: 495,
          column: 16
        },
        end: {
          line: 495,
          column: 22
        }
      },
      "84": {
        start: {
          line: 498,
          column: 16
        },
        end: {
          line: 498,
          column: 51
        }
      },
      "85": {
        start: {
          line: 501,
          column: 8
        },
        end: {
          line: 501,
          column: 30
        }
      },
      "86": {
        start: {
          line: 504,
          column: 29
        },
        end: {
          line: 513,
          column: 10
        }
      },
      "87": {
        start: {
          line: 514,
          column: 8
        },
        end: {
          line: 514,
          column: 39
        }
      },
      "88": {
        start: {
          line: 517,
          column: 41
        },
        end: {
          line: 517,
          column: 95
        }
      },
      "89": {
        start: {
          line: 517,
          column: 75
        },
        end: {
          line: 517,
          column: 91
        }
      },
      "90": {
        start: {
          line: 518,
          column: 35
        },
        end: {
          line: 521,
          column: 13
        }
      },
      "91": {
        start: {
          line: 519,
          column: 24
        },
        end: {
          line: 519,
          column: 115
        }
      },
      "92": {
        start: {
          line: 520,
          column: 12
        },
        end: {
          line: 520,
          column: 29
        }
      },
      "93": {
        start: {
          line: 522,
          column: 36
        },
        end: {
          line: 525,
          column: 13
        }
      },
      "94": {
        start: {
          line: 523,
          column: 24
        },
        end: {
          line: 523,
          column: 123
        }
      },
      "95": {
        start: {
          line: 524,
          column: 12
        },
        end: {
          line: 524,
          column: 29
        }
      },
      "96": {
        start: {
          line: 526,
          column: 28
        },
        end: {
          line: 526,
          column: 77
        }
      },
      "97": {
        start: {
          line: 527,
          column: 38
        },
        end: {
          line: 527,
          column: 119
        }
      },
      "98": {
        start: {
          line: 528,
          column: 8
        },
        end: {
          line: 534,
          column: 10
        }
      },
      "99": {
        start: {
          line: 537,
          column: 28
        },
        end: {
          line: 540,
          column: 10
        }
      },
      "100": {
        start: {
          line: 541,
          column: 8
        },
        end: {
          line: 543,
          column: 9
        }
      },
      "101": {
        start: {
          line: 542,
          column: 12
        },
        end: {
          line: 542,
          column: 61
        }
      },
      "102": {
        start: {
          line: 544,
          column: 24
        },
        end: {
          line: 544,
          column: 43
        }
      },
      "103": {
        start: {
          line: 546,
          column: 8
        },
        end: {
          line: 553,
          column: 10
        }
      },
      "104": {
        start: {
          line: 556,
          column: 8
        },
        end: {
          line: 558,
          column: 9
        }
      },
      "105": {
        start: {
          line: 557,
          column: 12
        },
        end: {
          line: 557,
          column: 33
        }
      },
      "106": {
        start: {
          line: 559,
          column: 30
        },
        end: {
          line: 559,
          column: 31
        }
      },
      "107": {
        start: {
          line: 560,
          column: 29
        },
        end: {
          line: 560,
          column: 65
        }
      },
      "108": {
        start: {
          line: 561,
          column: 8
        },
        end: {
          line: 561,
          column: 78
        }
      },
      "109": {
        start: {
          line: 564,
          column: 36
        },
        end: {
          line: 564,
          column: 92
        }
      },
      "110": {
        start: {
          line: 565,
          column: 32
        },
        end: {
          line: 565,
          column: 67
        }
      },
      "111": {
        start: {
          line: 566,
          column: 8
        },
        end: {
          line: 610,
          column: 11
        }
      },
      "112": {
        start: {
          line: 583,
          column: 75
        },
        end: {
          line: 583,
          column: 97
        }
      },
      "113": {
        start: {
          line: 585,
          column: 73
        },
        end: {
          line: 585,
          column: 96
        }
      },
      "114": {
        start: {
          line: 586,
          column: 64
        },
        end: {
          line: 586,
          column: 68
        }
      },
      "115": {
        start: {
          line: 613,
          column: 25
        },
        end: {
          line: 619,
          column: 10
        }
      },
      "116": {
        start: {
          line: 616,
          column: 60
        },
        end: {
          line: 616,
          column: 64
        }
      },
      "117": {
        start: {
          line: 620,
          column: 8
        },
        end: {
          line: 620,
          column: 74
        }
      },
      "118": {
        start: {
          line: 625,
          column: 8
        },
        end: {
          line: 628,
          column: 10
        }
      },
      "119": {
        start: {
          line: 633,
          column: 8
        },
        end: {
          line: 633,
          column: 77
        }
      },
      "120": {
        start: {
          line: 636,
          column: 24
        },
        end: {
          line: 639,
          column: 10
        }
      },
      "121": {
        start: {
          line: 640,
          column: 8
        },
        end: {
          line: 640,
          column: 80
        }
      },
      "122": {
        start: {
          line: 643,
          column: 8
        },
        end: {
          line: 643,
          column: 117
        }
      },
      "123": {
        start: {
          line: 646,
          column: 8
        },
        end: {
          line: 646,
          column: 146
        }
      },
      "124": {
        start: {
          line: 650,
          column: 8
        },
        end: {
          line: 650,
          column: 32
        }
      },
      "125": {
        start: {
          line: 657,
          column: 8
        },
        end: {
          line: 657,
          column: 33
        }
      },
      "126": {
        start: {
          line: 664,
          column: 8
        },
        end: {
          line: 664,
          column: 20
        }
      },
      "127": {
        start: {
          line: 667,
          column: 28
        },
        end: {
          line: 669,
          column: 10
        }
      },
      "128": {
        start: {
          line: 670,
          column: 8
        },
        end: {
          line: 670,
          column: 92
        }
      },
      "129": {
        start: {
          line: 674,
          column: 8
        },
        end: {
          line: 674,
          column: 26
        }
      },
      "130": {
        start: {
          line: 680,
          column: 24
        },
        end: {
          line: 680,
          column: 77
        }
      },
      "131": {
        start: {
          line: 681,
          column: 8
        },
        end: {
          line: 681,
          column: 34
        }
      },
      "132": {
        start: {
          line: 685,
          column: 8
        },
        end: {
          line: 685,
          column: 18
        }
      },
      "133": {
        start: {
          line: 688,
          column: 27
        },
        end: {
          line: 688,
          column: 37
        }
      },
      "134": {
        start: {
          line: 689,
          column: 8
        },
        end: {
          line: 689,
          column: 56
        }
      },
      "135": {
        start: {
          line: 690,
          column: 23
        },
        end: {
          line: 693,
          column: 10
        }
      },
      "136": {
        start: {
          line: 694,
          column: 8
        },
        end: {
          line: 694,
          column: 33
        }
      },
      "137": {
        start: {
          line: 698,
          column: 8
        },
        end: {
          line: 698,
          column: 47
        }
      },
      "138": {
        start: {
          line: 702,
          column: 8
        },
        end: {
          line: 702,
          column: 18
        }
      },
      "139": {
        start: {
          line: 706,
          column: 8
        },
        end: {
          line: 706,
          column: 18
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        loc: {
          start: {
            line: 17,
            column: 90
          },
          end: {
            line: 164,
            column: 5
          }
        },
        line: 17
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 168,
            column: 4
          },
          end: {
            line: 168,
            column: 5
          }
        },
        loc: {
          start: {
            line: 168,
            column: 101
          },
          end: {
            line: 279,
            column: 5
          }
        },
        line: 168
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 284,
            column: 4
          },
          end: {
            line: 284,
            column: 5
          }
        },
        loc: {
          start: {
            line: 284,
            column: 100
          },
          end: {
            line: 396,
            column: 5
          }
        },
        line: 284
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 401,
            column: 4
          },
          end: {
            line: 401,
            column: 5
          }
        },
        loc: {
          start: {
            line: 401,
            column: 49
          },
          end: {
            line: 470,
            column: 5
          }
        },
        line: 401
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 472,
            column: 4
          },
          end: {
            line: 472,
            column: 5
          }
        },
        loc: {
          start: {
            line: 472,
            column: 77
          },
          end: {
            line: 502,
            column: 5
          }
        },
        line: 472
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 503,
            column: 4
          },
          end: {
            line: 503,
            column: 5
          }
        },
        loc: {
          start: {
            line: 503,
            column: 92
          },
          end: {
            line: 515,
            column: 5
          }
        },
        line: 503
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 516,
            column: 4
          },
          end: {
            line: 516,
            column: 5
          }
        },
        loc: {
          start: {
            line: 516,
            column: 72
          },
          end: {
            line: 535,
            column: 5
          }
        },
        line: 516
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 517,
            column: 61
          },
          end: {
            line: 517,
            column: 62
          }
        },
        loc: {
          start: {
            line: 517,
            column: 75
          },
          end: {
            line: 517,
            column: 91
          }
        },
        line: 517
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 518,
            column: 55
          },
          end: {
            line: 518,
            column: 56
          }
        },
        loc: {
          start: {
            line: 518,
            column: 69
          },
          end: {
            line: 521,
            column: 9
          }
        },
        line: 518
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 522,
            column: 56
          },
          end: {
            line: 522,
            column: 57
          }
        },
        loc: {
          start: {
            line: 522,
            column: 70
          },
          end: {
            line: 525,
            column: 9
          }
        },
        line: 522
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 536,
            column: 4
          },
          end: {
            line: 536,
            column: 5
          }
        },
        loc: {
          start: {
            line: 536,
            column: 49
          },
          end: {
            line: 554,
            column: 5
          }
        },
        line: 536
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 555,
            column: 4
          },
          end: {
            line: 555,
            column: 5
          }
        },
        loc: {
          start: {
            line: 555,
            column: 44
          },
          end: {
            line: 562,
            column: 5
          }
        },
        line: 555
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 563,
            column: 4
          },
          end: {
            line: 563,
            column: 5
          }
        },
        loc: {
          start: {
            line: 563,
            column: 48
          },
          end: {
            line: 611,
            column: 5
          }
        },
        line: 563
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 583,
            column: 68
          },
          end: {
            line: 583,
            column: 69
          }
        },
        loc: {
          start: {
            line: 583,
            column: 75
          },
          end: {
            line: 583,
            column: 97
          }
        },
        line: 583
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 585,
            column: 66
          },
          end: {
            line: 585,
            column: 67
          }
        },
        loc: {
          start: {
            line: 585,
            column: 73
          },
          end: {
            line: 585,
            column: 96
          }
        },
        line: 585
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 586,
            column: 57
          },
          end: {
            line: 586,
            column: 58
          }
        },
        loc: {
          start: {
            line: 586,
            column: 64
          },
          end: {
            line: 586,
            column: 68
          }
        },
        line: 586
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 612,
            column: 4
          },
          end: {
            line: 612,
            column: 5
          }
        },
        loc: {
          start: {
            line: 612,
            column: 42
          },
          end: {
            line: 621,
            column: 5
          }
        },
        line: 612
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 616,
            column: 53
          },
          end: {
            line: 616,
            column: 54
          }
        },
        loc: {
          start: {
            line: 616,
            column: 60
          },
          end: {
            line: 616,
            column: 64
          }
        },
        line: 616
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 622,
            column: 4
          },
          end: {
            line: 622,
            column: 5
          }
        },
        loc: {
          start: {
            line: 622,
            column: 70
          },
          end: {
            line: 629,
            column: 5
          }
        },
        line: 622
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 630,
            column: 4
          },
          end: {
            line: 630,
            column: 5
          }
        },
        loc: {
          start: {
            line: 630,
            column: 57
          },
          end: {
            line: 634,
            column: 5
          }
        },
        line: 630
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 635,
            column: 4
          },
          end: {
            line: 635,
            column: 5
          }
        },
        loc: {
          start: {
            line: 635,
            column: 70
          },
          end: {
            line: 641,
            column: 5
          }
        },
        line: 635
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 642,
            column: 4
          },
          end: {
            line: 642,
            column: 5
          }
        },
        loc: {
          start: {
            line: 642,
            column: 43
          },
          end: {
            line: 644,
            column: 5
          }
        },
        line: 642
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 645,
            column: 4
          },
          end: {
            line: 645,
            column: 5
          }
        },
        loc: {
          start: {
            line: 645,
            column: 48
          },
          end: {
            line: 647,
            column: 5
          }
        },
        line: 645
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 649,
            column: 4
          },
          end: {
            line: 649,
            column: 5
          }
        },
        loc: {
          start: {
            line: 649,
            column: 42
          },
          end: {
            line: 651,
            column: 5
          }
        },
        line: 649
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 652,
            column: 4
          },
          end: {
            line: 652,
            column: 5
          }
        },
        loc: {
          start: {
            line: 652,
            column: 79
          },
          end: {
            line: 654,
            column: 5
          }
        },
        line: 652
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 655,
            column: 4
          },
          end: {
            line: 655,
            column: 5
          }
        },
        loc: {
          start: {
            line: 655,
            column: 85
          },
          end: {
            line: 658,
            column: 5
          }
        },
        line: 655
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 659,
            column: 4
          },
          end: {
            line: 659,
            column: 5
          }
        },
        loc: {
          start: {
            line: 659,
            column: 70
          },
          end: {
            line: 661,
            column: 5
          }
        },
        line: 659
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 662,
            column: 4
          },
          end: {
            line: 662,
            column: 5
          }
        },
        loc: {
          start: {
            line: 662,
            column: 83
          },
          end: {
            line: 665,
            column: 5
          }
        },
        line: 662
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 666,
            column: 4
          },
          end: {
            line: 666,
            column: 5
          }
        },
        loc: {
          start: {
            line: 666,
            column: 66
          },
          end: {
            line: 671,
            column: 5
          }
        },
        line: 666
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 672,
            column: 4
          },
          end: {
            line: 672,
            column: 5
          }
        },
        loc: {
          start: {
            line: 672,
            column: 88
          },
          end: {
            line: 675,
            column: 5
          }
        },
        line: 672
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 676,
            column: 4
          },
          end: {
            line: 676,
            column: 5
          }
        },
        loc: {
          start: {
            line: 676,
            column: 56
          },
          end: {
            line: 678,
            column: 5
          }
        },
        line: 676
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 679,
            column: 4
          },
          end: {
            line: 679,
            column: 5
          }
        },
        loc: {
          start: {
            line: 679,
            column: 56
          },
          end: {
            line: 682,
            column: 5
          }
        },
        line: 679
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 683,
            column: 4
          },
          end: {
            line: 683,
            column: 5
          }
        },
        loc: {
          start: {
            line: 683,
            column: 53
          },
          end: {
            line: 686,
            column: 5
          }
        },
        line: 683
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 687,
            column: 4
          },
          end: {
            line: 687,
            column: 5
          }
        },
        loc: {
          start: {
            line: 687,
            column: 58
          },
          end: {
            line: 695,
            column: 5
          }
        },
        line: 687
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 696,
            column: 4
          },
          end: {
            line: 696,
            column: 5
          }
        },
        loc: {
          start: {
            line: 696,
            column: 50
          },
          end: {
            line: 699,
            column: 5
          }
        },
        line: 696
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 700,
            column: 4
          },
          end: {
            line: 700,
            column: 5
          }
        },
        loc: {
          start: {
            line: 700,
            column: 40
          },
          end: {
            line: 703,
            column: 5
          }
        },
        line: 700
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 704,
            column: 4
          },
          end: {
            line: 704,
            column: 5
          }
        },
        loc: {
          start: {
            line: 704,
            column: 49
          },
          end: {
            line: 707,
            column: 5
          }
        },
        line: 704
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 19,
            column: 31
          },
          end: {
            line: 19,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 31
          },
          end: {
            line: 19,
            column: 46
          }
        }, {
          start: {
            line: 19,
            column: 50
          },
          end: {
            line: 19,
            column: 60
          }
        }],
        line: 19
      },
      "1": {
        loc: {
          start: {
            line: 43,
            column: 29
          },
          end: {
            line: 43,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 29
          },
          end: {
            line: 43,
            column: 49
          }
        }, {
          start: {
            line: 43,
            column: 53
          },
          end: {
            line: 43,
            column: 65
          }
        }],
        line: 43
      },
      "2": {
        loc: {
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 57,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 57,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "3": {
        loc: {
          start: {
            line: 52,
            column: 16
          },
          end: {
            line: 52,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 16
          },
          end: {
            line: 52,
            column: 30
          }
        }, {
          start: {
            line: 52,
            column: 34
          },
          end: {
            line: 52,
            column: 67
          }
        }],
        line: 52
      },
      "4": {
        loc: {
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 64,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 64,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "5": {
        loc: {
          start: {
            line: 68,
            column: 12
          },
          end: {
            line: 70,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 12
          },
          end: {
            line: 70,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "6": {
        loc: {
          start: {
            line: 121,
            column: 33
          },
          end: {
            line: 121,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 121,
            column: 33
          },
          end: {
            line: 121,
            column: 53
          }
        }, {
          start: {
            line: 121,
            column: 57
          },
          end: {
            line: 121,
            column: 69
          }
        }],
        line: 121
      },
      "7": {
        loc: {
          start: {
            line: 154,
            column: 35
          },
          end: {
            line: 154,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 154,
            column: 60
          },
          end: {
            line: 154,
            column: 73
          }
        }, {
          start: {
            line: 154,
            column: 76
          },
          end: {
            line: 154,
            column: 89
          }
        }],
        line: 154
      },
      "8": {
        loc: {
          start: {
            line: 156,
            column: 33
          },
          end: {
            line: 156,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 156,
            column: 33
          },
          end: {
            line: 156,
            column: 53
          }
        }, {
          start: {
            line: 156,
            column: 57
          },
          end: {
            line: 156,
            column: 69
          }
        }],
        line: 156
      },
      "9": {
        loc: {
          start: {
            line: 173,
            column: 12
          },
          end: {
            line: 200,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 12
          },
          end: {
            line: 200,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "10": {
        loc: {
          start: {
            line: 175,
            column: 31
          },
          end: {
            line: 175,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 175,
            column: 31
          },
          end: {
            line: 175,
            column: 53
          }
        }, {
          start: {
            line: 175,
            column: 57
          },
          end: {
            line: 175,
            column: 66
          }
        }],
        line: 175
      },
      "11": {
        loc: {
          start: {
            line: 202,
            column: 68
          },
          end: {
            line: 202,
            column: 113
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 202,
            column: 68
          },
          end: {
            line: 202,
            column: 94
          }
        }, {
          start: {
            line: 202,
            column: 98
          },
          end: {
            line: 202,
            column: 113
          }
        }],
        line: 202
      },
      "12": {
        loc: {
          start: {
            line: 203,
            column: 12
          },
          end: {
            line: 205,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 203,
            column: 12
          },
          end: {
            line: 205,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 203
      },
      "13": {
        loc: {
          start: {
            line: 209,
            column: 12
          },
          end: {
            line: 211,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 209,
            column: 12
          },
          end: {
            line: 211,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 209
      },
      "14": {
        loc: {
          start: {
            line: 236,
            column: 33
          },
          end: {
            line: 236,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 236,
            column: 33
          },
          end: {
            line: 236,
            column: 53
          }
        }, {
          start: {
            line: 236,
            column: 57
          },
          end: {
            line: 236,
            column: 69
          }
        }],
        line: 236
      },
      "15": {
        loc: {
          start: {
            line: 248,
            column: 27
          },
          end: {
            line: 248,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 248,
            column: 27
          },
          end: {
            line: 248,
            column: 49
          }
        }, {
          start: {
            line: 248,
            column: 53
          },
          end: {
            line: 248,
            column: 62
          }
        }],
        line: 248
      },
      "16": {
        loc: {
          start: {
            line: 269,
            column: 35
          },
          end: {
            line: 269,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 269,
            column: 60
          },
          end: {
            line: 269,
            column: 73
          }
        }, {
          start: {
            line: 269,
            column: 76
          },
          end: {
            line: 269,
            column: 89
          }
        }],
        line: 269
      },
      "17": {
        loc: {
          start: {
            line: 271,
            column: 33
          },
          end: {
            line: 271,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 271,
            column: 33
          },
          end: {
            line: 271,
            column: 53
          }
        }, {
          start: {
            line: 271,
            column: 57
          },
          end: {
            line: 271,
            column: 69
          }
        }],
        line: 271
      },
      "18": {
        loc: {
          start: {
            line: 291,
            column: 12
          },
          end: {
            line: 293,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 291,
            column: 12
          },
          end: {
            line: 293,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 291
      },
      "19": {
        loc: {
          start: {
            line: 297,
            column: 12
          },
          end: {
            line: 317,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 297,
            column: 12
          },
          end: {
            line: 317,
            column: 13
          }
        }, {
          start: {
            line: 301,
            column: 17
          },
          end: {
            line: 317,
            column: 13
          }
        }],
        line: 297
      },
      "20": {
        loc: {
          start: {
            line: 319,
            column: 12
          },
          end: {
            line: 321,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 319,
            column: 12
          },
          end: {
            line: 321,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 319
      },
      "21": {
        loc: {
          start: {
            line: 330,
            column: 41
          },
          end: {
            line: 330,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 330,
            column: 58
          },
          end: {
            line: 330,
            column: 74
          }
        }, {
          start: {
            line: 330,
            column: 77
          },
          end: {
            line: 330,
            column: 93
          }
        }],
        line: 330
      },
      "22": {
        loc: {
          start: {
            line: 345,
            column: 33
          },
          end: {
            line: 345,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 345,
            column: 33
          },
          end: {
            line: 345,
            column: 53
          }
        }, {
          start: {
            line: 345,
            column: 57
          },
          end: {
            line: 345,
            column: 69
          }
        }],
        line: 345
      },
      "23": {
        loc: {
          start: {
            line: 347,
            column: 30
          },
          end: {
            line: 354,
            column: 31
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 348,
            column: 22
          },
          end: {
            line: 353,
            column: 21
          }
        }, {
          start: {
            line: 354,
            column: 22
          },
          end: {
            line: 354,
            column: 31
          }
        }],
        line: 347
      },
      "24": {
        loc: {
          start: {
            line: 386,
            column: 35
          },
          end: {
            line: 386,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 386,
            column: 60
          },
          end: {
            line: 386,
            column: 73
          }
        }, {
          start: {
            line: 386,
            column: 76
          },
          end: {
            line: 386,
            column: 89
          }
        }],
        line: 386
      },
      "25": {
        loc: {
          start: {
            line: 388,
            column: 33
          },
          end: {
            line: 388,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 388,
            column: 33
          },
          end: {
            line: 388,
            column: 53
          }
        }, {
          start: {
            line: 388,
            column: 57
          },
          end: {
            line: 388,
            column: 69
          }
        }],
        line: 388
      },
      "26": {
        loc: {
          start: {
            line: 433,
            column: 26
          },
          end: {
            line: 433,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 433,
            column: 47
          },
          end: {
            line: 433,
            column: 53
          }
        }, {
          start: {
            line: 433,
            column: 56
          },
          end: {
            line: 433,
            column: 93
          }
        }],
        line: 433
      },
      "27": {
        loc: {
          start: {
            line: 433,
            column: 56
          },
          end: {
            line: 433,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 433,
            column: 77
          },
          end: {
            line: 433,
            column: 85
          }
        }, {
          start: {
            line: 433,
            column: 88
          },
          end: {
            line: 433,
            column: 93
          }
        }],
        line: 433
      },
      "28": {
        loc: {
          start: {
            line: 450,
            column: 33
          },
          end: {
            line: 450,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 450,
            column: 33
          },
          end: {
            line: 450,
            column: 53
          }
        }, {
          start: {
            line: 450,
            column: 57
          },
          end: {
            line: 450,
            column: 69
          }
        }],
        line: 450
      },
      "29": {
        loc: {
          start: {
            line: 467,
            column: 32
          },
          end: {
            line: 467,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 467,
            column: 57
          },
          end: {
            line: 467,
            column: 70
          }
        }, {
          start: {
            line: 467,
            column: 73
          },
          end: {
            line: 467,
            column: 86
          }
        }],
        line: 467
      },
      "30": {
        loc: {
          start: {
            line: 475,
            column: 8
          },
          end: {
            line: 500,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 476,
            column: 12
          },
          end: {
            line: 479,
            column: 13
          }
        }, {
          start: {
            line: 480,
            column: 12
          },
          end: {
            line: 483,
            column: 13
          }
        }, {
          start: {
            line: 484,
            column: 12
          },
          end: {
            line: 487,
            column: 13
          }
        }, {
          start: {
            line: 488,
            column: 12
          },
          end: {
            line: 496,
            column: 13
          }
        }, {
          start: {
            line: 497,
            column: 12
          },
          end: {
            line: 499,
            column: 13
          }
        }],
        line: 475
      },
      "31": {
        loc: {
          start: {
            line: 489,
            column: 16
          },
          end: {
            line: 494,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 489,
            column: 16
          },
          end: {
            line: 494,
            column: 17
          }
        }, {
          start: {
            line: 492,
            column: 21
          },
          end: {
            line: 494,
            column: 17
          }
        }],
        line: 489
      },
      "32": {
        loc: {
          start: {
            line: 489,
            column: 20
          },
          end: {
            line: 489,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 489,
            column: 20
          },
          end: {
            line: 489,
            column: 31
          }
        }, {
          start: {
            line: 489,
            column: 35
          },
          end: {
            line: 489,
            column: 57
          }
        }],
        line: 489
      },
      "33": {
        loc: {
          start: {
            line: 514,
            column: 15
          },
          end: {
            line: 514,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 514,
            column: 15
          },
          end: {
            line: 514,
            column: 32
          }
        }, {
          start: {
            line: 514,
            column: 36
          },
          end: {
            line: 514,
            column: 38
          }
        }],
        line: 514
      },
      "34": {
        loc: {
          start: {
            line: 541,
            column: 8
          },
          end: {
            line: 543,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 541,
            column: 8
          },
          end: {
            line: 543,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 541
      },
      "35": {
        loc: {
          start: {
            line: 541,
            column: 12
          },
          end: {
            line: 541,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 541,
            column: 12
          },
          end: {
            line: 541,
            column: 29
          }
        }, {
          start: {
            line: 541,
            column: 33
          },
          end: {
            line: 541,
            column: 62
          }
        }],
        line: 541
      },
      "36": {
        loc: {
          start: {
            line: 556,
            column: 8
          },
          end: {
            line: 558,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 556,
            column: 8
          },
          end: {
            line: 558,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 556
      },
      "37": {
        loc: {
          start: {
            line: 640,
            column: 15
          },
          end: {
            line: 640,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 640,
            column: 57
          },
          end: {
            line: 640,
            column: 72
          }
        }, {
          start: {
            line: 640,
            column: 75
          },
          end: {
            line: 640,
            column: 79
          }
        }],
        line: 640
      },
      "38": {
        loc: {
          start: {
            line: 640,
            column: 15
          },
          end: {
            line: 640,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 640,
            column: 15
          },
          end: {
            line: 640,
            column: 27
          }
        }, {
          start: {
            line: 640,
            column: 31
          },
          end: {
            line: 640,
            column: 54
          }
        }],
        line: 640
      },
      "39": {
        loc: {
          start: {
            line: 670,
            column: 15
          },
          end: {
            line: 670,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 670,
            column: 65
          },
          end: {
            line: 670,
            column: 84
          }
        }, {
          start: {
            line: 670,
            column: 87
          },
          end: {
            line: 670,
            column: 91
          }
        }],
        line: 670
      },
      "40": {
        loc: {
          start: {
            line: 670,
            column: 15
          },
          end: {
            line: 670,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 670,
            column: 15
          },
          end: {
            line: 670,
            column: 31
          }
        }, {
          start: {
            line: 670,
            column: 35
          },
          end: {
            line: 670,
            column: 62
          }
        }],
        line: 670
      },
      "41": {
        loc: {
          start: {
            line: 681,
            column: 15
          },
          end: {
            line: 681,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 681,
            column: 15
          },
          end: {
            line: 681,
            column: 27
          }
        }, {
          start: {
            line: 681,
            column: 31
          },
          end: {
            line: 681,
            column: 33
          }
        }],
        line: 681
      },
      "42": {
        loc: {
          start: {
            line: 694,
            column: 15
          },
          end: {
            line: 694,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 694,
            column: 15
          },
          end: {
            line: 694,
            column: 26
          }
        }, {
          start: {
            line: 694,
            column: 30
          },
          end: {
            line: 694,
            column: 32
          }
        }],
        line: 694
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0, 0, 0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c79d4117e205aa243a37bf47d213d6bd25cd6ab3"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1cuhajd55v = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1cuhajd55v();
import crypto from "node:crypto";
import { PaymentAuditLog, PaymentGatewayConfiguration, PaymentSecurityEvent, PaymentSettlement } from "@/models/payment_settlement.model";
import { PaymentTransaction } from "@/models/payment_transaction.model";
import { SchoolBankDetails } from "@/models/school_bank_details.model";
import PaymentErrorHandler from "./payment_error_handler.service";
import { SecurePaymentCredentialService } from "./secure_payment_credential.service";
/**
 * Enhanced Payment Settlement Service
 * Handles secure payment processing, settlement, compliance, and audit
 */
export class PaymentSettlementService {
  // ========================= SETTLEMENT PROCESSING =========================
  /**
   * Process automatic settlement for a campus
   * This runs as a scheduled job for each configured gateway
   */
  static async processAutomaticSettlement(campus_id, gateway_provider, settlement_date) {
    /* istanbul ignore next */
    cov_1cuhajd55v().f[0]++;
    const startTime =
    /* istanbul ignore next */
    (cov_1cuhajd55v().s[0]++, Date.now());
    const settlementDate =
    /* istanbul ignore next */
    (cov_1cuhajd55v().s[1]++,
    /* istanbul ignore next */
    (cov_1cuhajd55v().b[0][0]++, settlement_date) ||
    /* istanbul ignore next */
    (cov_1cuhajd55v().b[0][1]++, new Date()));
    // Log settlement initiation
    /* istanbul ignore next */
    cov_1cuhajd55v().s[2]++;
    await this.createAuditLog({
      campus_id,
      event_type: "settlement_initiated",
      event_category: "settlement",
      severity: "medium",
      event_details: {
        gateway_provider,
        operation_performed: "automatic_settlement_initiation",
        operation_result: "pending",
        execution_time_ms: 0
      },
      security_context: {
        ip_address: "system",
        user_agent: "settlement-service",
        fraud_indicators: []
      },
      system_context: {
        api_endpoint: "/internal/settlement/process",
        request_method: "POST",
        request_id: crypto.randomUUID(),
        response_status: 200,
        system_version: "1.0.0",
        environment:
        /* istanbul ignore next */
        (cov_1cuhajd55v().b[1][0]++, process.env.NODE_ENV) ||
        /* istanbul ignore next */
        (cov_1cuhajd55v().b[1][1]++, "production")
      },
      compliance_tags: ["settlement", "automatic", "financial"],
      is_sensitive_data: true,
      data_classification: "confidential"
    });
    /* istanbul ignore next */
    cov_1cuhajd55v().s[3]++;
    try {
      // 1. Validate gateway configuration
      const gatewayConfig =
      /* istanbul ignore next */
      (cov_1cuhajd55v().s[4]++, await this.getGatewayConfiguration(campus_id, gateway_provider));
      /* istanbul ignore next */
      cov_1cuhajd55v().s[5]++;
      if (
      /* istanbul ignore next */
      (cov_1cuhajd55v().b[3][0]++, !gatewayConfig) ||
      /* istanbul ignore next */
      (cov_1cuhajd55v().b[3][1]++, gatewayConfig.status !== "active")) {
        /* istanbul ignore next */
        cov_1cuhajd55v().b[2][0]++;
        cov_1cuhajd55v().s[6]++;
        throw PaymentErrorHandler.createError("GATEWAY_001", {
          campus_id,
          gateway: gateway_provider
        });
      } else
      /* istanbul ignore next */
      {
        cov_1cuhajd55v().b[2][1]++;
      }
      // 2. Get settlement period
      const settlementPeriod =
      /* istanbul ignore next */
      (cov_1cuhajd55v().s[7]++, this.calculateSettlementPeriod(gatewayConfig.gateway_settings.settlement_schedule, settlementDate, gatewayConfig.gateway_settings.custom_settlement_days));
      // 3. Get eligible transactions for settlement
      const eligibleTransactions =
      /* istanbul ignore next */
      (cov_1cuhajd55v().s[8]++, await this.getEligibleTransactions(campus_id, gateway_provider, settlementPeriod.start, settlementPeriod.end));
      /* istanbul ignore next */
      cov_1cuhajd55v().s[9]++;
      if (eligibleTransactions.length === 0) {
        /* istanbul ignore next */
        cov_1cuhajd55v().b[4][0]++;
        cov_1cuhajd55v().s[10]++;
        throw new Error("No eligible transactions found for settlement");
      } else
      /* istanbul ignore next */
      {
        cov_1cuhajd55v().b[4][1]++;
      }
      // 4. Calculate settlement amounts
      const settlementCalculations =
      /* istanbul ignore next */
      (cov_1cuhajd55v().s[11]++, await this.calculateSettlementAmount(eligibleTransactions, gatewayConfig.fee_structure));
      // 5. Validate minimum settlement amount
      /* istanbul ignore next */
      cov_1cuhajd55v().s[12]++;
      if (settlementCalculations.net_settlement_amount < gatewayConfig.gateway_settings.minimum_settlement_amount) {
        /* istanbul ignore next */
        cov_1cuhajd55v().b[5][0]++;
        cov_1cuhajd55v().s[13]++;
        throw new Error(`Settlement amount ${settlementCalculations.net_settlement_amount} is below minimum threshold`);
      } else
      /* istanbul ignore next */
      {
        cov_1cuhajd55v().b[5][1]++;
      }
      // 6. Get school bank details
      const schoolBankDetails =
      /* istanbul ignore next */
      (cov_1cuhajd55v().s[14]++, await this.getSchoolBankDetails(campus_id));
      // 7. Create settlement record
      const settlement =
      /* istanbul ignore next */
      (cov_1cuhajd55v().s[15]++, await this.createSettlementRecord({
        campus_id,
        gateway_provider,
        settlement_date: settlementDate,
        settlement_period: settlementPeriod,
        transactions: eligibleTransactions,
        calculations: settlementCalculations,
        school_bank_details: schoolBankDetails,
        gateway_config: gatewayConfig
      }));
      // 8. Process settlement with gateway
      const gatewaySettlement =
      /* istanbul ignore next */
      (cov_1cuhajd55v().s[16]++, await this.processGatewaySettlement(settlement, gatewayConfig));
      // 9. Update settlement with gateway response
      const updatedSettlement =
      /* istanbul ignore next */
      (cov_1cuhajd55v().s[17]++, await PaymentSettlement.updateById(settlement.id, {
        gateway_settlement_id: gatewaySettlement.settlement_id,
        gateway_settlement_reference: gatewaySettlement.reference,
        settlement_status: "processing",
        processing_details: Object.assign(Object.assign({}, settlement.processing_details), {
          processed_at: new Date(),
          processing_duration_ms: Date.now() - startTime
        }),
        updated_at: new Date()
      }));
      // 10. Send notifications
      /* istanbul ignore next */
      cov_1cuhajd55v().s[18]++;
      await this.sendSettlementNotifications(updatedSettlement);
      // 11. Log successful settlement
      /* istanbul ignore next */
      cov_1cuhajd55v().s[19]++;
      await this.createAuditLog({
        campus_id,
        event_type: "settlement_initiated",
        event_category: "settlement",
        severity: "medium",
        event_details: {
          gateway_provider,
          settlement_id: settlement.id,
          amount: settlementCalculations.net_settlement_amount,
          operation_performed: "automatic_settlement_completion",
          operation_result: "success",
          execution_time_ms: Date.now() - startTime
        },
        security_context: {
          ip_address: "system",
          user_agent: "settlement-service",
          fraud_indicators: []
        },
        system_context: {
          api_endpoint: "/internal/settlement/process",
          request_method: "POST",
          request_id: crypto.randomUUID(),
          response_status: 200,
          system_version: "1.0.0",
          environment:
          /* istanbul ignore next */
          (cov_1cuhajd55v().b[6][0]++, process.env.NODE_ENV) ||
          /* istanbul ignore next */
          (cov_1cuhajd55v().b[6][1]++, "production")
        },
        compliance_tags: ["settlement", "automatic", "financial", "completed"],
        is_sensitive_data: true,
        data_classification: "confidential"
      });
      /* istanbul ignore next */
      cov_1cuhajd55v().s[20]++;
      return updatedSettlement;
    } catch (error) {
      const executionTime =
      /* istanbul ignore next */
      (cov_1cuhajd55v().s[21]++, Date.now() - startTime);
      // Log settlement failure
      /* istanbul ignore next */
      cov_1cuhajd55v().s[22]++;
      await this.createAuditLog({
        campus_id,
        event_type: "settlement_failed",
        event_category: "settlement",
        severity: "high",
        event_details: {
          gateway_provider,
          operation_performed: "automatic_settlement_processing",
          operation_result: "failure",
          execution_time_ms: executionTime
        },
        security_context: {
          ip_address: "system",
          user_agent: "settlement-service",
          fraud_indicators: ["settlement_failure"]
        },
        system_context: {
          api_endpoint: "/internal/settlement/process",
          request_method: "POST",
          request_id: crypto.randomUUID(),
          response_status: 500,
          error_code: "SETTLEMENT_FAILED",
          error_message: error instanceof Error ?
          /* istanbul ignore next */
          (cov_1cuhajd55v().b[7][0]++, error.message) :
          /* istanbul ignore next */
          (cov_1cuhajd55v().b[7][1]++, String(error)),
          system_version: "1.0.0",
          environment:
          /* istanbul ignore next */
          (cov_1cuhajd55v().b[8][0]++, process.env.NODE_ENV) ||
          /* istanbul ignore next */
          (cov_1cuhajd55v().b[8][1]++, "production")
        },
        compliance_tags: ["settlement", "automatic", "financial", "failed"],
        is_sensitive_data: true,
        data_classification: "confidential"
      });
      /* istanbul ignore next */
      cov_1cuhajd55v().s[23]++;
      throw error;
    }
  }
  /**
   * Webhook handler for settlement status updates from payment gateways
   */
  static async handleSettlementWebhook(gateway_provider, webhook_data, signature, request_context) {
    /* istanbul ignore next */
    cov_1cuhajd55v().f[1]++;
    const startTime =
    /* istanbul ignore next */
    (cov_1cuhajd55v().s[24]++, Date.now());
    /* istanbul ignore next */
    cov_1cuhajd55v().s[25]++;
    try {
      // 1. Verify webhook signature
      const isValidSignature =
      /* istanbul ignore next */
      (cov_1cuhajd55v().s[26]++, await this.verifyWebhookSignature(gateway_provider, webhook_data, signature));
      /* istanbul ignore next */
      cov_1cuhajd55v().s[27]++;
      if (!isValidSignature) {
        /* istanbul ignore next */
        cov_1cuhajd55v().b[9][0]++;
        cov_1cuhajd55v().s[28]++;
        await this.createSecurityEvent({
          campus_id:
          /* istanbul ignore next */
          (cov_1cuhajd55v().b[10][0]++, webhook_data.campus_id) ||
          /* istanbul ignore next */
          (cov_1cuhajd55v().b[10][1]++, "unknown"),
          event_type: "webhook_tampering",
          severity: "critical",
          threat_details: {
            attack_vector: "webhook_signature_mismatch",
            threat_indicators: ["invalid_signature", "potential_tampering"],
            impact_assessment: "high",
            data_compromised: false,
            systems_affected: ["webhook_endpoint"]
          },
          detection_details: {
            detected_at: new Date(),
            detection_method: "automated",
            detection_source: "webhook_verification",
            confidence_score: 0.95,
            false_positive_probability: 0.05
          },
          notification_details: {
            internal_team_notified: true,
            school_notified: false,
            regulatory_reported: false,
            escalation_level: 3
          }
        });
        /* istanbul ignore next */
        cov_1cuhajd55v().s[29]++;
        throw new Error("Invalid webhook signature");
      } else
      /* istanbul ignore next */
      {
        cov_1cuhajd55v().b[9][1]++;
      }
      // 2. Find settlement by gateway settlement ID
      const settlement =
      /* istanbul ignore next */
      (cov_1cuhajd55v().s[30]++, await this.findSettlementByGatewayId(
      /* istanbul ignore next */
      (cov_1cuhajd55v().b[11][0]++, webhook_data.settlement_id) ||
      /* istanbul ignore next */
      (cov_1cuhajd55v().b[11][1]++, webhook_data.id)));
      /* istanbul ignore next */
      cov_1cuhajd55v().s[31]++;
      if (!settlement) {
        /* istanbul ignore next */
        cov_1cuhajd55v().b[12][0]++;
        cov_1cuhajd55v().s[32]++;
        throw new Error("Settlement not found for webhook data");
      } else
      /* istanbul ignore next */
      {
        cov_1cuhajd55v().b[12][1]++;
      }
      // 3. Update settlement status based on webhook data
      const updatedSettlement =
      /* istanbul ignore next */
      (cov_1cuhajd55v().s[33]++, await this.updateSettlementFromWebhook(settlement, webhook_data, request_context));
      // 4. Handle settlement completion
      /* istanbul ignore next */
      cov_1cuhajd55v().s[34]++;
      if (updatedSettlement.settlement_status === "completed") {
        /* istanbul ignore next */
        cov_1cuhajd55v().b[13][0]++;
        cov_1cuhajd55v().s[35]++;
        await this.handleSettlementCompletion(updatedSettlement);
      } else
      /* istanbul ignore next */
      {
        cov_1cuhajd55v().b[13][1]++;
      }
      // 5. Log webhook processing
      cov_1cuhajd55v().s[36]++;
      await this.createAuditLog({
        campus_id: settlement.campus_id,
        event_type: "webhook_received",
        event_category: "settlement",
        severity: "low",
        event_details: {
          gateway_provider,
          settlement_id: settlement.id,
          operation_performed: "webhook_processing",
          operation_result: "success",
          execution_time_ms: Date.now() - startTime
        },
        security_context: {
          ip_address: request_context.ip_address,
          user_agent: request_context.user_agent,
          fraud_indicators: []
        },
        system_context: {
          api_endpoint: "/webhook/settlement",
          request_method: "POST",
          request_id: request_context.request_id,
          response_status: 200,
          system_version: "1.0.0",
          environment:
          /* istanbul ignore next */
          (cov_1cuhajd55v().b[14][0]++, process.env.NODE_ENV) ||
          /* istanbul ignore next */
          (cov_1cuhajd55v().b[14][1]++, "production")
        },
        compliance_tags: ["webhook", "settlement", "update"],
        is_sensitive_data: true,
        data_classification: "confidential"
      });
      /* istanbul ignore next */
      cov_1cuhajd55v().s[37]++;
      return {
        success: true,
        settlement: updatedSettlement
      };
    } catch (error) {
      const executionTime =
      /* istanbul ignore next */
      (cov_1cuhajd55v().s[38]++, Date.now() - startTime);
      // Log webhook failure
      /* istanbul ignore next */
      cov_1cuhajd55v().s[39]++;
      await this.createAuditLog({
        campus_id:
        /* istanbul ignore next */
        (cov_1cuhajd55v().b[15][0]++, webhook_data.campus_id) ||
        /* istanbul ignore next */
        (cov_1cuhajd55v().b[15][1]++, "unknown"),
        event_type: "webhook_received",
        event_category: "settlement",
        severity: "high",
        event_details: {
          gateway_provider,
          operation_performed: "webhook_processing",
          operation_result: "failure",
          execution_time_ms: executionTime
        },
        security_context: {
          ip_address: request_context.ip_address,
          user_agent: request_context.user_agent,
          fraud_indicators: ["webhook_processing_failure"]
        },
        system_context: {
          api_endpoint: "/webhook/settlement",
          request_method: "POST",
          request_id: request_context.request_id,
          response_status: 500,
          error_code: "WEBHOOK_PROCESSING_FAILED",
          error_message: error instanceof Error ?
          /* istanbul ignore next */
          (cov_1cuhajd55v().b[16][0]++, error.message) :
          /* istanbul ignore next */
          (cov_1cuhajd55v().b[16][1]++, String(error)),
          system_version: "1.0.0",
          environment:
          /* istanbul ignore next */
          (cov_1cuhajd55v().b[17][0]++, process.env.NODE_ENV) ||
          /* istanbul ignore next */
          (cov_1cuhajd55v().b[17][1]++, "production")
        },
        compliance_tags: ["webhook", "settlement", "failed"],
        is_sensitive_data: true,
        data_classification: "confidential"
      });
      /* istanbul ignore next */
      cov_1cuhajd55v().s[40]++;
      return {
        success: false
      };
    }
  }
  // ========================= GATEWAY CONFIGURATION =========================
  /**
   * Configure payment gateway with enhanced security
   */
  static async configurePaymentGateway(campus_id, gateway_provider, configuration, configured_by) {
    /* istanbul ignore next */
    cov_1cuhajd55v().f[2]++;
    const startTime =
    /* istanbul ignore next */
    (cov_1cuhajd55v().s[41]++, Date.now());
    /* istanbul ignore next */
    cov_1cuhajd55v().s[42]++;
    try {
      /* istanbul ignore next */
      cov_1cuhajd55v().s[43]++;
      // 1. Validate configuration
      await this.validateGatewayConfiguration(gateway_provider, configuration);
      // 2. Test gateway connectivity
      const testResult =
      /* istanbul ignore next */
      (cov_1cuhajd55v().s[44]++, await this.testGatewayConnectivity(campus_id, gateway_provider, configuration));
      /* istanbul ignore next */
      cov_1cuhajd55v().s[45]++;
      if (!testResult.success) {
        /* istanbul ignore next */
        cov_1cuhajd55v().b[18][0]++;
        cov_1cuhajd55v().s[46]++;
        throw new Error(`Gateway configuration test failed: ${testResult.error}`);
      } else
      /* istanbul ignore next */
      {
        cov_1cuhajd55v().b[18][1]++;
      }
      // 3. Check for existing configuration
      const existingConfig =
      /* istanbul ignore next */
      (cov_1cuhajd55v().s[47]++, await this.getGatewayConfiguration(campus_id, gateway_provider));
      let gatewayConfig;
      /* istanbul ignore next */
      cov_1cuhajd55v().s[48]++;
      if (existingConfig) {
        /* istanbul ignore next */
        cov_1cuhajd55v().b[19][0]++;
        cov_1cuhajd55v().s[49]++;
        // Update existing configuration
        gatewayConfig = await PaymentGatewayConfiguration.updateById(existingConfig.id, Object.assign(Object.assign({}, configuration), {
          configuration_details: Object.assign(Object.assign({}, existingConfig.configuration_details), {
            last_updated_at: new Date(),
            last_updated_by: configured_by,
            configuration_version: this.generateConfigurationVersion()
          }),
          testing_details: Object.assign(Object.assign({}, existingConfig.testing_details), {
            last_test_date: new Date(),
            last_test_status: "success",
            connectivity_status: "connected",
            health_check_status: "healthy",
            last_health_check: new Date()
          }),
          updated_at: new Date()
        }));
      } else {
        /* istanbul ignore next */
        cov_1cuhajd55v().b[19][1]++;
        cov_1cuhajd55v().s[50]++;
        // Create new configuration
        gatewayConfig = await PaymentGatewayConfiguration.create(Object.assign(Object.assign({
          campus_id,
          gateway_provider
        }, configuration), {
          configuration_details: {
            configured_at: new Date(),
            configured_by,
            last_updated_at: new Date(),
            last_updated_by: configured_by,
            configuration_version: this.generateConfigurationVersion()
          },
          testing_details: {
            last_test_date: new Date(),
            last_test_status: "success",
            connectivity_status: "connected",
            health_check_status: "healthy",
            last_health_check: new Date()
          },
          created_at: new Date(),
          updated_at: new Date()
        }));
      }
      // 4. If this is primary gateway, update others
      /* istanbul ignore next */
      cov_1cuhajd55v().s[51]++;
      if (configuration.is_primary) {
        /* istanbul ignore next */
        cov_1cuhajd55v().b[20][0]++;
        cov_1cuhajd55v().s[52]++;
        await this.updatePrimaryGateway(campus_id, gateway_provider);
      } else
      /* istanbul ignore next */
      {
        cov_1cuhajd55v().b[20][1]++;
      }
      // 5. Log configuration change
      cov_1cuhajd55v().s[53]++;
      await this.createAuditLog({
        campus_id,
        event_type: "gateway_configured",
        event_category: "configuration",
        severity: "medium",
        event_details: {
          gateway_provider,
          operation_performed: existingConfig ?
          /* istanbul ignore next */
          (cov_1cuhajd55v().b[21][0]++, "gateway_update") :
          /* istanbul ignore next */
          (cov_1cuhajd55v().b[21][1]++, "gateway_create"),
          operation_result: "success",
          execution_time_ms: Date.now() - startTime
        },
        security_context: {
          ip_address: "system",
          // This should come from request context
          user_agent: "admin-panel",
          // This should come from request context
          fraud_indicators: []
        },
        system_context: {
          api_endpoint: "/admin/gateway/configure",
          request_method: "POST",
          request_id: crypto.randomUUID(),
          response_status: 200,
          system_version: "1.0.0",
          environment:
          /* istanbul ignore next */
          (cov_1cuhajd55v().b[22][0]++, process.env.NODE_ENV) ||
          /* istanbul ignore next */
          (cov_1cuhajd55v().b[22][1]++, "production")
        },
        data_changes: existingConfig ?
        /* istanbul ignore next */
        (cov_1cuhajd55v().b[23][0]++, {
          before_value: existingConfig,
          after_value: gatewayConfig,
          changed_fields: Object.keys(configuration),
          change_reason: "gateway_configuration_update"
        }) :
        /* istanbul ignore next */
        (cov_1cuhajd55v().b[23][1]++, undefined),
        compliance_tags: ["gateway", "configuration", "financial"],
        is_sensitive_data: true,
        data_classification: "confidential"
      });
      /* istanbul ignore next */
      cov_1cuhajd55v().s[54]++;
      return gatewayConfig;
    } catch (error) {
      const executionTime =
      /* istanbul ignore next */
      (cov_1cuhajd55v().s[55]++, Date.now() - startTime);
      // Log configuration failure
      /* istanbul ignore next */
      cov_1cuhajd55v().s[56]++;
      await this.createAuditLog({
        campus_id,
        event_type: "gateway_configured",
        event_category: "configuration",
        severity: "high",
        event_details: {
          gateway_provider,
          operation_performed: "gateway_configuration",
          operation_result: "failure",
          execution_time_ms: executionTime
        },
        security_context: {
          ip_address: "system",
          user_agent: "admin-panel",
          fraud_indicators: ["configuration_failure"]
        },
        system_context: {
          api_endpoint: "/admin/gateway/configure",
          request_method: "POST",
          request_id: crypto.randomUUID(),
          response_status: 500,
          error_code: "GATEWAY_CONFIG_FAILED",
          error_message: error instanceof Error ?
          /* istanbul ignore next */
          (cov_1cuhajd55v().b[24][0]++, error.message) :
          /* istanbul ignore next */
          (cov_1cuhajd55v().b[24][1]++, String(error)),
          system_version: "1.0.0",
          environment:
          /* istanbul ignore next */
          (cov_1cuhajd55v().b[25][0]++, process.env.NODE_ENV) ||
          /* istanbul ignore next */
          (cov_1cuhajd55v().b[25][1]++, "production")
        },
        compliance_tags: ["gateway", "configuration", "failed"],
        is_sensitive_data: true,
        data_classification: "confidential"
      });
      /* istanbul ignore next */
      cov_1cuhajd55v().s[57]++;
      throw error;
    }
  }
  // ========================= SECURITY & COMPLIANCE =========================
  /**
   * Perform comprehensive security audit
   */
  static async performSecurityAudit(campus_id) {
    /* istanbul ignore next */
    cov_1cuhajd55v().f[3]++;
    const startTime =
    /* istanbul ignore next */
    (cov_1cuhajd55v().s[58]++, Date.now());
    const auditId =
    /* istanbul ignore next */
    (cov_1cuhajd55v().s[59]++, crypto.randomUUID());
    /* istanbul ignore next */
    cov_1cuhajd55v().s[60]++;
    try {
      // 1. Check gateway configurations
      const gatewayConfigs =
      /* istanbul ignore next */
      (cov_1cuhajd55v().s[61]++, await this.getAllGatewayConfigurations(campus_id));
      const gatewaySecurityIssues =
      /* istanbul ignore next */
      (cov_1cuhajd55v().s[62]++, await this.auditGatewayConfigurations(gatewayConfigs));
      // 2. Check credential security
      const credentialSecurityResult =
      /* istanbul ignore next */
      (cov_1cuhajd55v().s[63]++, await SecurePaymentCredentialService.validateCredentialSecurity(campus_id));
      // 3. Check recent security events
      const recentSecurityEvents =
      /* istanbul ignore next */
      (cov_1cuhajd55v().s[64]++, await this.getRecentSecurityEvents(campus_id, 30)); // Last 30 days
      // 4. Check compliance status
      const complianceStatus =
      /* istanbul ignore next */
      (cov_1cuhajd55v().s[65]++, await this.checkComplianceStatus(campus_id));
      // 5. Calculate overall security score
      const securityScore =
      /* istanbul ignore next */
      (cov_1cuhajd55v().s[66]++, this.calculateSecurityScore({
        gatewayConfigurations: gatewayConfigs,
        credentialSecurity: credentialSecurityResult,
        securityEvents: recentSecurityEvents,
        compliance: complianceStatus
      }));
      // 6. Generate recommendations
      const recommendations =
      /* istanbul ignore next */
      (cov_1cuhajd55v().s[67]++, this.generateSecurityRecommendations({
        gatewayIssues: gatewaySecurityIssues,
        credentialIssues: credentialSecurityResult.issues,
        securityEvents: recentSecurityEvents,
        compliance: complianceStatus
      }));
      // 7. Log audit completion
      /* istanbul ignore next */
      cov_1cuhajd55v().s[68]++;
      await this.createAuditLog({
        campus_id,
        event_type: "audit_review",
        event_category: "security",
        severity: securityScore < 70 ?
        /* istanbul ignore next */
        (cov_1cuhajd55v().b[26][0]++, "high") :
        /* istanbul ignore next */
        (cov_1cuhajd55v().b[26][1]++, securityScore < 85 ?
        /* istanbul ignore next */
        (cov_1cuhajd55v().b[27][0]++, "medium") :
        /* istanbul ignore next */
        (cov_1cuhajd55v().b[27][1]++, "low")),
        event_details: {
          operation_performed: "comprehensive_security_audit",
          operation_result: "success",
          execution_time_ms: Date.now() - startTime
        },
        security_context: {
          ip_address: "system",
          user_agent: "security-audit-service",
          fraud_indicators: []
        },
        system_context: {
          api_endpoint: "/internal/security/audit",
          request_method: "POST",
          request_id: crypto.randomUUID(),
          response_status: 200,
          system_version: "1.0.0",
          environment:
          /* istanbul ignore next */
          (cov_1cuhajd55v().b[28][0]++, process.env.NODE_ENV) ||
          /* istanbul ignore next */
          (cov_1cuhajd55v().b[28][1]++, "production")
        },
        compliance_tags: ["security", "audit", "compliance", "review"],
        is_sensitive_data: true,
        data_classification: "confidential"
      });
      /* istanbul ignore next */
      cov_1cuhajd55v().s[69]++;
      return {
        overall_score: securityScore,
        security_issues: [...gatewaySecurityIssues, ...credentialSecurityResult.issues],
        compliance_status: complianceStatus.overall_status,
        recommendations,
        audit_report_id: auditId
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1cuhajd55v().s[70]++;
      throw PaymentErrorHandler.createError("SYS_001", {
        operation: "security_audit",
        original_error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_1cuhajd55v().b[29][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1cuhajd55v().b[29][1]++, String(error))
      });
    }
  }
  // ========================= PRIVATE HELPER METHODS =========================
  static calculateSettlementPeriod(schedule, settlement_date, custom_days) {
    /* istanbul ignore next */
    cov_1cuhajd55v().f[4]++;
    const end =
    /* istanbul ignore next */
    (cov_1cuhajd55v().s[71]++, new Date(settlement_date));
    const start =
    /* istanbul ignore next */
    (cov_1cuhajd55v().s[72]++, new Date(settlement_date));
    /* istanbul ignore next */
    cov_1cuhajd55v().s[73]++;
    switch (schedule) {
      case "daily":
        /* istanbul ignore next */
        cov_1cuhajd55v().b[30][0]++;
        {
          /* istanbul ignore next */
          cov_1cuhajd55v().s[74]++;
          start.setDate(start.getDate() - 1);
          /* istanbul ignore next */
          cov_1cuhajd55v().s[75]++;
          break;
        }
      case "weekly":
        /* istanbul ignore next */
        cov_1cuhajd55v().b[30][1]++;
        {
          /* istanbul ignore next */
          cov_1cuhajd55v().s[76]++;
          start.setDate(start.getDate() - 7);
          /* istanbul ignore next */
          cov_1cuhajd55v().s[77]++;
          break;
        }
      case "monthly":
        /* istanbul ignore next */
        cov_1cuhajd55v().b[30][2]++;
        {
          /* istanbul ignore next */
          cov_1cuhajd55v().s[78]++;
          start.setMonth(start.getMonth() - 1);
          /* istanbul ignore next */
          cov_1cuhajd55v().s[79]++;
          break;
        }
      case "custom":
        /* istanbul ignore next */
        cov_1cuhajd55v().b[30][3]++;
        {
          /* istanbul ignore next */
          cov_1cuhajd55v().s[80]++;
          if (
          /* istanbul ignore next */
          (cov_1cuhajd55v().b[32][0]++, custom_days) &&
          /* istanbul ignore next */
          (cov_1cuhajd55v().b[32][1]++, custom_days.length > 0)) {
            /* istanbul ignore next */
            cov_1cuhajd55v().b[31][0]++;
            cov_1cuhajd55v().s[81]++;
            start.setDate(start.getDate() - Math.max(...custom_days));
          } else {
            /* istanbul ignore next */
            cov_1cuhajd55v().b[31][1]++;
            cov_1cuhajd55v().s[82]++;
            start.setDate(start.getDate() - 7); // Default to weekly
          }
          /* istanbul ignore next */
          cov_1cuhajd55v().s[83]++;
          break;
        }
      default:
        /* istanbul ignore next */
        cov_1cuhajd55v().b[30][4]++;
        {
          /* istanbul ignore next */
          cov_1cuhajd55v().s[84]++;
          start.setDate(start.getDate() - 1);
        }
      // Default to daily
    }
    /* istanbul ignore next */
    cov_1cuhajd55v().s[85]++;
    return {
      start,
      end
    };
  }
  static async getEligibleTransactions(campus_id, gateway_provider, start_date, end_date) {
    /* istanbul ignore next */
    cov_1cuhajd55v().f[5]++;
    const transactions =
    /* istanbul ignore next */
    (cov_1cuhajd55v().s[86]++, await PaymentTransaction.find({
      campus_id,
      payment_gateway: gateway_provider,
      status: "success",
      webhook_verified: true,
      completed_at: {
        $gte: start_date,
        $lte: end_date
      }
    }));
    /* istanbul ignore next */
    cov_1cuhajd55v().s[87]++;
    return /* istanbul ignore next */(cov_1cuhajd55v().b[33][0]++, transactions.rows) ||
    /* istanbul ignore next */
    (cov_1cuhajd55v().b[33][1]++, []);
  }
  static async calculateSettlementAmount(transactions, fee_structure) {
    /* istanbul ignore next */
    cov_1cuhajd55v().f[6]++;
    const total_transaction_amount =
    /* istanbul ignore next */
    (cov_1cuhajd55v().s[88]++, transactions.reduce((sum, txn) => {
      /* istanbul ignore next */
      cov_1cuhajd55v().f[7]++;
      cov_1cuhajd55v().s[89]++;
      return sum + txn.amount;
    }, 0));
    const total_gateway_fees =
    /* istanbul ignore next */
    (cov_1cuhajd55v().s[90]++, transactions.reduce((sum, txn) => {
      /* istanbul ignore next */
      cov_1cuhajd55v().f[8]++;
      const fee =
      /* istanbul ignore next */
      (cov_1cuhajd55v().s[91]++, txn.amount * fee_structure.gateway_fee_percentage / 100 + fee_structure.gateway_fee_fixed);
      /* istanbul ignore next */
      cov_1cuhajd55v().s[92]++;
      return sum + fee;
    }, 0));
    const total_platform_fees =
    /* istanbul ignore next */
    (cov_1cuhajd55v().s[93]++, transactions.reduce((sum, txn) => {
      /* istanbul ignore next */
      cov_1cuhajd55v().f[9]++;
      const fee =
      /* istanbul ignore next */
      (cov_1cuhajd55v().s[94]++, txn.amount * fee_structure.transaction_fee_percentage / 100 + fee_structure.transaction_fee_fixed);
      /* istanbul ignore next */
      cov_1cuhajd55v().s[95]++;
      return sum + fee;
    }, 0));
    const total_taxes =
    /* istanbul ignore next */
    (cov_1cuhajd55v().s[96]++, (total_gateway_fees + total_platform_fees) * 0.18); // 18% GST
    const net_settlement_amount =
    /* istanbul ignore next */
    (cov_1cuhajd55v().s[97]++, total_transaction_amount - total_gateway_fees - total_platform_fees - total_taxes);
    /* istanbul ignore next */
    cov_1cuhajd55v().s[98]++;
    return {
      total_transaction_amount,
      total_gateway_fees,
      total_platform_fees,
      total_taxes,
      net_settlement_amount
    };
  }
  static async getSchoolBankDetails(campus_id) {
    /* istanbul ignore next */
    cov_1cuhajd55v().f[10]++;
    const bankDetails =
    /* istanbul ignore next */
    (cov_1cuhajd55v().s[99]++, await SchoolBankDetails.find({
      campus_id,
      is_active: true
    }));
    /* istanbul ignore next */
    cov_1cuhajd55v().s[100]++;
    if (
    /* istanbul ignore next */
    (cov_1cuhajd55v().b[35][0]++, !bankDetails.rows) ||
    /* istanbul ignore next */
    (cov_1cuhajd55v().b[35][1]++, bankDetails.rows.length === 0)) {
      /* istanbul ignore next */
      cov_1cuhajd55v().b[34][0]++;
      cov_1cuhajd55v().s[101]++;
      throw new Error("School bank details not found");
    } else
    /* istanbul ignore next */
    {
      cov_1cuhajd55v().b[34][1]++;
    }
    const details =
    /* istanbul ignore next */
    (cov_1cuhajd55v().s[102]++, bankDetails.rows[0]);
    // Return masked account number for security
    /* istanbul ignore next */
    cov_1cuhajd55v().s[103]++;
    return {
      bank_name: details.bank_name,
      account_number: this.maskAccountNumber(details.account_number),
      account_holder_name: details.account_holder_name,
      ifsc_code: details.ifsc_code,
      branch_name: details.branch_name,
      account_type: details.account_type
    };
  }
  static maskAccountNumber(accountNumber) {
    /* istanbul ignore next */
    cov_1cuhajd55v().f[11]++;
    cov_1cuhajd55v().s[104]++;
    if (accountNumber.length <= 4) {
      /* istanbul ignore next */
      cov_1cuhajd55v().b[36][0]++;
      cov_1cuhajd55v().s[105]++;
      return accountNumber;
    } else
    /* istanbul ignore next */
    {
      cov_1cuhajd55v().b[36][1]++;
    }
    const visibleDigits =
    /* istanbul ignore next */
    (cov_1cuhajd55v().s[106]++, 4);
    const maskedDigits =
    /* istanbul ignore next */
    (cov_1cuhajd55v().s[107]++, accountNumber.length - visibleDigits);
    /* istanbul ignore next */
    cov_1cuhajd55v().s[108]++;
    return "*".repeat(maskedDigits) + accountNumber.slice(-visibleDigits);
  }
  static async createSettlementRecord(params) {
    /* istanbul ignore next */
    cov_1cuhajd55v().f[12]++;
    const settlement_batch_id =
    /* istanbul ignore next */
    (cov_1cuhajd55v().s[109]++, `BATCH_${Date.now()}_${crypto.randomUUID().slice(0, 8)}`);
    const settlement_hash =
    /* istanbul ignore next */
    (cov_1cuhajd55v().s[110]++, this.generateSettlementHash(params));
    /* istanbul ignore next */
    cov_1cuhajd55v().s[111]++;
    return await PaymentSettlement.create({
      campus_id: params.campus_id,
      settlement_batch_id,
      settlement_date: params.settlement_date,
      settlement_period_start: params.settlement_period.start,
      settlement_period_end: params.settlement_period.end,
      settlement_status: "pending",
      total_transaction_amount: params.calculations.total_transaction_amount,
      total_gateway_fees: params.calculations.total_gateway_fees,
      total_platform_fees: params.calculations.total_platform_fees,
      total_taxes: params.calculations.total_taxes,
      net_settlement_amount: params.calculations.net_settlement_amount,
      currency: "INR",
      gateway_provider: params.gateway_provider,
      school_bank_details: params.school_bank_details,
      transaction_summary: {
        total_transactions: params.transactions.length,
        successful_transactions: params.transactions.filter(t => {
          /* istanbul ignore next */
          cov_1cuhajd55v().f[13]++;
          cov_1cuhajd55v().s[112]++;
          return t.status === "success";
        }).length,
        failed_transactions: 0,
        refunded_transactions: params.transactions.filter(t => {
          /* istanbul ignore next */
          cov_1cuhajd55v().f[14]++;
          cov_1cuhajd55v().s[113]++;
          return t.status === "refunded";
        }).length,
        transaction_ids: params.transactions.map(t => {
          /* istanbul ignore next */
          cov_1cuhajd55v().f[15]++;
          cov_1cuhajd55v().s[114]++;
          return t.id;
        })
      },
      processing_details: {
        initiated_by: "system",
        initiated_at: new Date(),
        retry_count: 0
      },
      compliance_details: {
        audit_trail_id: crypto.randomUUID()
      },
      security_metadata: {
        settlement_hash,
        encryption_version: "v1",
        security_flags: []
      },
      notification_status: {
        school_notified: false,
        email_notification_status: "pending",
        sms_notification_status: "pending",
        webhook_notification_status: "pending"
      },
      meta_data: {},
      created_at: new Date(),
      updated_at: new Date()
    });
  }
  static generateSettlementHash(params) {
    /* istanbul ignore next */
    cov_1cuhajd55v().f[16]++;
    const hashData =
    /* istanbul ignore next */
    (cov_1cuhajd55v().s[115]++, JSON.stringify({
      campus_id: params.campus_id,
      gateway_provider: params.gateway_provider,
      transaction_ids: params.transactions.map(t => {
        /* istanbul ignore next */
        cov_1cuhajd55v().f[17]++;
        cov_1cuhajd55v().s[116]++;
        return t.id;
      }).sort(),
      total_amount: params.calculations.total_transaction_amount,
      net_amount: params.calculations.net_settlement_amount
    }));
    /* istanbul ignore next */
    cov_1cuhajd55v().s[117]++;
    return crypto.createHash("sha256").update(hashData).digest("hex");
  }
  static async processGatewaySettlement(settlement, gateway_config) {
    /* istanbul ignore next */
    cov_1cuhajd55v().f[18]++;
    cov_1cuhajd55v().s[118]++;
    // This would integrate with actual payment gateway APIs
    // For now, returning mock data
    return {
      settlement_id: `SETTLE_${Date.now()}`,
      reference: `REF_${crypto.randomUUID().slice(0, 8)}`
    };
  }
  static async sendSettlementNotifications(settlement) {
    /* istanbul ignore next */
    cov_1cuhajd55v().f[19]++;
    cov_1cuhajd55v().s[119]++;
    // Implementation for sending notifications
    // Email, SMS, Webhook notifications to school
    console.log(`Sending settlement notifications for ${settlement.id}`);
  }
  static async getGatewayConfiguration(campus_id, gateway_provider) {
    /* istanbul ignore next */
    cov_1cuhajd55v().f[20]++;
    const configs =
    /* istanbul ignore next */
    (cov_1cuhajd55v().s[120]++, await PaymentGatewayConfiguration.find({
      campus_id,
      gateway_provider
    }));
    /* istanbul ignore next */
    cov_1cuhajd55v().s[121]++;
    return /* istanbul ignore next */(cov_1cuhajd55v().b[38][0]++, configs.rows) &&
    /* istanbul ignore next */
    (cov_1cuhajd55v().b[38][1]++, configs.rows.length > 0) ?
    /* istanbul ignore next */
    (cov_1cuhajd55v().b[37][0]++, configs.rows[0]) :
    /* istanbul ignore next */
    (cov_1cuhajd55v().b[37][1]++, null);
  }
  static async createAuditLog(auditData) {
    /* istanbul ignore next */
    cov_1cuhajd55v().f[21]++;
    cov_1cuhajd55v().s[122]++;
    return await PaymentAuditLog.create(Object.assign(Object.assign({}, auditData), {
      created_at: new Date()
    }));
  }
  static async createSecurityEvent(eventData) {
    /* istanbul ignore next */
    cov_1cuhajd55v().f[22]++;
    cov_1cuhajd55v().s[123]++;
    return await PaymentSecurityEvent.create(Object.assign(Object.assign({}, eventData), {
      created_at: new Date(),
      updated_at: new Date()
    }));
  }
  // Additional helper methods would be implemented here...
  static generateConfigurationVersion() {
    /* istanbul ignore next */
    cov_1cuhajd55v().f[23]++;
    cov_1cuhajd55v().s[124]++;
    return `v${Date.now()}`;
  }
  static async validateGatewayConfiguration(gateway_provider, configuration) {
    /* istanbul ignore next */
    cov_1cuhajd55v().f[24]++;
  } // Implementation for validating gateway configuration
  static async testGatewayConnectivity(campus_id, gateway_provider, configuration) {
    /* istanbul ignore next */
    cov_1cuhajd55v().f[25]++;
    cov_1cuhajd55v().s[125]++;
    // Implementation for testing gateway connectivity
    return {
      success: true
    };
  }
  static async updatePrimaryGateway(campus_id, new_primary_gateway) {
    /* istanbul ignore next */
    cov_1cuhajd55v().f[26]++;
  } // Implementation for updating primary gateway
  static async verifyWebhookSignature(gateway_provider, webhook_data, signature) {
    /* istanbul ignore next */
    cov_1cuhajd55v().f[27]++;
    cov_1cuhajd55v().s[126]++;
    // Implementation for verifying webhook signature
    return true;
  }
  static async findSettlementByGatewayId(gateway_settlement_id) {
    /* istanbul ignore next */
    cov_1cuhajd55v().f[28]++;
    const settlements =
    /* istanbul ignore next */
    (cov_1cuhajd55v().s[127]++, await PaymentSettlement.find({
      gateway_settlement_id
    }));
    /* istanbul ignore next */
    cov_1cuhajd55v().s[128]++;
    return /* istanbul ignore next */(cov_1cuhajd55v().b[40][0]++, settlements.rows) &&
    /* istanbul ignore next */
    (cov_1cuhajd55v().b[40][1]++, settlements.rows.length > 0) ?
    /* istanbul ignore next */
    (cov_1cuhajd55v().b[39][0]++, settlements.rows[0]) :
    /* istanbul ignore next */
    (cov_1cuhajd55v().b[39][1]++, null);
  }
  static async updateSettlementFromWebhook(settlement, webhook_data, request_context) {
    /* istanbul ignore next */
    cov_1cuhajd55v().f[29]++;
    cov_1cuhajd55v().s[129]++;
    // Implementation for updating settlement from webhook
    return settlement;
  }
  static async handleSettlementCompletion(settlement) {
    /* istanbul ignore next */
    cov_1cuhajd55v().f[30]++;
  } // Implementation for handling settlement completion
  static async getAllGatewayConfigurations(campus_id) {
    /* istanbul ignore next */
    cov_1cuhajd55v().f[31]++;
    const configs =
    /* istanbul ignore next */
    (cov_1cuhajd55v().s[130]++, await PaymentGatewayConfiguration.find({
      campus_id
    }));
    /* istanbul ignore next */
    cov_1cuhajd55v().s[131]++;
    return /* istanbul ignore next */(cov_1cuhajd55v().b[41][0]++, configs.rows) ||
    /* istanbul ignore next */
    (cov_1cuhajd55v().b[41][1]++, []);
  }
  static async auditGatewayConfigurations(configs) {
    /* istanbul ignore next */
    cov_1cuhajd55v().f[32]++;
    cov_1cuhajd55v().s[132]++;
    // Implementation for auditing gateway configurations
    return [];
  }
  static async getRecentSecurityEvents(campus_id, days) {
    /* istanbul ignore next */
    cov_1cuhajd55v().f[33]++;
    const cutoffDate =
    /* istanbul ignore next */
    (cov_1cuhajd55v().s[133]++, new Date());
    /* istanbul ignore next */
    cov_1cuhajd55v().s[134]++;
    cutoffDate.setDate(cutoffDate.getDate() - days);
    const events =
    /* istanbul ignore next */
    (cov_1cuhajd55v().s[135]++, await PaymentSecurityEvent.find({
      campus_id,
      created_at: {
        $gte: cutoffDate
      }
    }));
    /* istanbul ignore next */
    cov_1cuhajd55v().s[136]++;
    return /* istanbul ignore next */(cov_1cuhajd55v().b[42][0]++, events.rows) ||
    /* istanbul ignore next */
    (cov_1cuhajd55v().b[42][1]++, []);
  }
  static async checkComplianceStatus(campus_id) {
    /* istanbul ignore next */
    cov_1cuhajd55v().f[34]++;
    cov_1cuhajd55v().s[137]++;
    // Implementation for checking compliance status
    return {
      overall_status: "compliant"
    };
  }
  static calculateSecurityScore(data) {
    /* istanbul ignore next */
    cov_1cuhajd55v().f[35]++;
    cov_1cuhajd55v().s[138]++;
    // Implementation for calculating security score
    return 85; // Mock score
  }
  static generateSecurityRecommendations(data) {
    /* istanbul ignore next */
    cov_1cuhajd55v().f[36]++;
    cov_1cuhajd55v().s[139]++;
    // Implementation for generating security recommendations
    return [];
  }
}