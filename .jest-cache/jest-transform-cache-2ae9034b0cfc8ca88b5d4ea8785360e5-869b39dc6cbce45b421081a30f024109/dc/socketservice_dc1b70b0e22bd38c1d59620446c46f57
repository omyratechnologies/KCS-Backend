819d63015ec856b29fcd322ea76e0c64
/* istanbul ignore next */
function cov_14llklcqwl() {
  var path = "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/services/socket.service.ts";
  var hash = "b681531c480066a32b4e2ae5d1b2caa0fefd0b2e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/avinashgantala/Development/KCS-Project/KCS-Backend/src/services/socket.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 33,
          column: 11
        }
      },
      "1": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 65,
          column: 11
        }
      },
      "2": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 64,
          column: 13
        }
      },
      "3": {
        start: {
          line: 38,
          column: 30
        },
        end: {
          line: 38,
          column: 171
        }
      },
      "4": {
        start: {
          line: 39,
          column: 16
        },
        end: {
          line: 41,
          column: 17
        }
      },
      "5": {
        start: {
          line: 40,
          column: 20
        },
        end: {
          line: 40,
          column: 75
        }
      },
      "6": {
        start: {
          line: 42,
          column: 34
        },
        end: {
          line: 42,
          column: 81
        }
      },
      "7": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 45,
          column: 17
        }
      },
      "8": {
        start: {
          line: 44,
          column: 20
        },
        end: {
          line: 44,
          column: 60
        }
      },
      "9": {
        start: {
          line: 46,
          column: 58
        },
        end: {
          line: 46,
          column: 75
        }
      },
      "10": {
        start: {
          line: 48,
          column: 29
        },
        end: {
          line: 48,
          column: 63
        }
      },
      "11": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 51,
          column: 17
        }
      },
      "12": {
        start: {
          line: 50,
          column: 20
        },
        end: {
          line: 50,
          column: 61
        }
      },
      "13": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 59,
          column: 18
        }
      },
      "14": {
        start: {
          line: 60,
          column: 16
        },
        end: {
          line: 60,
          column: 23
        }
      },
      "15": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 63,
          column: 57
        }
      },
      "16": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 67
        }
      },
      "17": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 91
        }
      },
      "18": {
        start: {
          line: 73,
          column: 37
        },
        end: {
          line: 73,
          column: 48
        }
      },
      "19": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 90
        }
      },
      "20": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 50
        }
      },
      "21": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 48
        }
      },
      "22": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 48
        }
      },
      "23": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 43
        }
      },
      "24": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 81,
          column: 40
        }
      },
      "25": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 42
        }
      },
      "26": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 44
        }
      },
      "27": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 72
        }
      },
      "28": {
        start: {
          line: 85,
          column: 38
        },
        end: {
          line: 85,
          column: 70
        }
      },
      "29": {
        start: {
          line: 91,
          column: 47
        },
        end: {
          line: 91,
          column: 58
        }
      },
      "30": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 185,
          column: 11
        }
      },
      "31": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 184,
          column: 13
        }
      },
      "32": {
        start: {
          line: 96,
          column: 56
        },
        end: {
          line: 96,
          column: 60
        }
      },
      "33": {
        start: {
          line: 98,
          column: 32
        },
        end: {
          line: 98,
          column: 65
        }
      },
      "34": {
        start: {
          line: 99,
          column: 16
        },
        end: {
          line: 102,
          column: 17
        }
      },
      "35": {
        start: {
          line: 100,
          column: 20
        },
        end: {
          line: 100,
          column: 75
        }
      },
      "36": {
        start: {
          line: 101,
          column: 20
        },
        end: {
          line: 101,
          column: 27
        }
      },
      "37": {
        start: {
          line: 103,
          column: 16
        },
        end: {
          line: 106,
          column: 17
        }
      },
      "38": {
        start: {
          line: 104,
          column: 20
        },
        end: {
          line: 104,
          column: 71
        }
      },
      "39": {
        start: {
          line: 105,
          column: 20
        },
        end: {
          line: 105,
          column: 27
        }
      },
      "40": {
        start: {
          line: 108,
          column: 16
        },
        end: {
          line: 113,
          column: 17
        }
      },
      "41": {
        start: {
          line: 109,
          column: 20
        },
        end: {
          line: 111,
          column: 23
        }
      },
      "42": {
        start: {
          line: 112,
          column: 20
        },
        end: {
          line: 112,
          column: 27
        }
      },
      "43": {
        start: {
          line: 115,
          column: 16
        },
        end: {
          line: 118,
          column: 17
        }
      },
      "44": {
        start: {
          line: 116,
          column: 20
        },
        end: {
          line: 116,
          column: 75
        }
      },
      "45": {
        start: {
          line: 117,
          column: 20
        },
        end: {
          line: 117,
          column: 27
        }
      },
      "46": {
        start: {
          line: 120,
          column: 44
        },
        end: {
          line: 120,
          column: 142
        }
      },
      "47": {
        start: {
          line: 121,
          column: 16
        },
        end: {
          line: 124,
          column: 17
        }
      },
      "48": {
        start: {
          line: 122,
          column: 20
        },
        end: {
          line: 122,
          column: 73
        }
      },
      "49": {
        start: {
          line: 123,
          column: 20
        },
        end: {
          line: 123,
          column: 27
        }
      },
      "50": {
        start: {
          line: 126,
          column: 16
        },
        end: {
          line: 126,
          column: 45
        }
      },
      "51": {
        start: {
          line: 128,
          column: 16
        },
        end: {
          line: 130,
          column: 17
        }
      },
      "52": {
        start: {
          line: 129,
          column: 20
        },
        end: {
          line: 129,
          column: 71
        }
      },
      "53": {
        start: {
          line: 131,
          column: 16
        },
        end: {
          line: 131,
          column: 71
        }
      },
      "54": {
        start: {
          line: 133,
          column: 40
        },
        end: {
          line: 151,
          column: 17
        }
      },
      "55": {
        start: {
          line: 152,
          column: 36
        },
        end: {
          line: 152,
          column: 84
        }
      },
      "56": {
        start: {
          line: 154,
          column: 16
        },
        end: {
          line: 159,
          column: 17
        }
      },
      "57": {
        start: {
          line: 155,
          column: 20
        },
        end: {
          line: 158,
          column: 23
        }
      },
      "58": {
        start: {
          line: 161,
          column: 16
        },
        end: {
          line: 163,
          column: 17
        }
      },
      "59": {
        start: {
          line: 162,
          column: 20
        },
        end: {
          line: 162,
          column: 71
        }
      },
      "60": {
        start: {
          line: 165,
          column: 16
        },
        end: {
          line: 170,
          column: 19
        }
      },
      "61": {
        start: {
          line: 172,
          column: 45
        },
        end: {
          line: 172,
          column: 89
        }
      },
      "62": {
        start: {
          line: 173,
          column: 16
        },
        end: {
          line: 178,
          column: 19
        }
      },
      "63": {
        start: {
          line: 179,
          column: 16
        },
        end: {
          line: 179,
          column: 73
        }
      },
      "64": {
        start: {
          line: 182,
          column: 16
        },
        end: {
          line: 182,
          column: 63
        }
      },
      "65": {
        start: {
          line: 183,
          column: 16
        },
        end: {
          line: 183,
          column: 76
        }
      },
      "66": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 189,
          column: 11
        }
      },
      "67": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 188,
          column: 66
        }
      },
      "68": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 217,
          column: 11
        }
      },
      "69": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 216,
          column: 13
        }
      },
      "70": {
        start: {
          line: 193,
          column: 45
        },
        end: {
          line: 193,
          column: 49
        }
      },
      "71": {
        start: {
          line: 195,
          column: 36
        },
        end: {
          line: 195,
          column: 80
        }
      },
      "72": {
        start: {
          line: 196,
          column: 16
        },
        end: {
          line: 201,
          column: 17
        }
      },
      "73": {
        start: {
          line: 197,
          column: 20
        },
        end: {
          line: 199,
          column: 23
        }
      },
      "74": {
        start: {
          line: 200,
          column: 20
        },
        end: {
          line: 200,
          column: 27
        }
      },
      "75": {
        start: {
          line: 203,
          column: 16
        },
        end: {
          line: 206,
          column: 19
        }
      },
      "76": {
        start: {
          line: 208,
          column: 16
        },
        end: {
          line: 208,
          column: 93
        }
      },
      "77": {
        start: {
          line: 209,
          column: 16
        },
        end: {
          line: 209,
          column: 102
        }
      },
      "78": {
        start: {
          line: 212,
          column: 16
        },
        end: {
          line: 212,
          column: 66
        }
      },
      "79": {
        start: {
          line: 213,
          column: 16
        },
        end: {
          line: 215,
          column: 19
        }
      },
      "80": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 255,
          column: 11
        }
      },
      "81": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 254,
          column: 13
        }
      },
      "82": {
        start: {
          line: 221,
          column: 59
        },
        end: {
          line: 221,
          column: 63
        }
      },
      "83": {
        start: {
          line: 223,
          column: 34
        },
        end: {
          line: 223,
          column: 78
        }
      },
      "84": {
        start: {
          line: 224,
          column: 16
        },
        end: {
          line: 229,
          column: 17
        }
      },
      "85": {
        start: {
          line: 225,
          column: 20
        },
        end: {
          line: 227,
          column: 23
        }
      },
      "86": {
        start: {
          line: 228,
          column: 20
        },
        end: {
          line: 228,
          column: 27
        }
      },
      "87": {
        start: {
          line: 231,
          column: 16
        },
        end: {
          line: 234,
          column: 19
        }
      },
      "88": {
        start: {
          line: 236,
          column: 42
        },
        end: {
          line: 236,
          column: 90
        }
      },
      "89": {
        start: {
          line: 237,
          column: 16
        },
        end: {
          line: 242,
          column: 17
        }
      },
      "90": {
        start: {
          line: 238,
          column: 43
        },
        end: {
          line: 238,
          column: 90
        }
      },
      "91": {
        start: {
          line: 239,
          column: 20
        },
        end: {
          line: 241,
          column: 21
        }
      },
      "92": {
        start: {
          line: 240,
          column: 24
        },
        end: {
          line: 240,
          column: 90
        }
      },
      "93": {
        start: {
          line: 244,
          column: 16
        },
        end: {
          line: 247,
          column: 19
        }
      },
      "94": {
        start: {
          line: 250,
          column: 16
        },
        end: {
          line: 250,
          column: 66
        }
      },
      "95": {
        start: {
          line: 251,
          column: 16
        },
        end: {
          line: 253,
          column: 19
        }
      },
      "96": {
        start: {
          line: 261,
          column: 37
        },
        end: {
          line: 261,
          column: 48
        }
      },
      "97": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 316,
          column: 11
        }
      },
      "98": {
        start: {
          line: 264,
          column: 12
        },
        end: {
          line: 315,
          column: 13
        }
      },
      "99": {
        start: {
          line: 265,
          column: 75
        },
        end: {
          line: 265,
          column: 79
        }
      },
      "100": {
        start: {
          line: 267,
          column: 30
        },
        end: {
          line: 267,
          column: 47
        }
      },
      "101": {
        start: {
          line: 268,
          column: 16
        },
        end: {
          line: 271,
          column: 17
        }
      },
      "102": {
        start: {
          line: 269,
          column: 20
        },
        end: {
          line: 269,
          column: 72
        }
      },
      "103": {
        start: {
          line: 270,
          column: 20
        },
        end: {
          line: 270,
          column: 27
        }
      },
      "104": {
        start: {
          line: 273,
          column: 36
        },
        end: {
          line: 282,
          column: 18
        }
      },
      "105": {
        start: {
          line: 284,
          column: 16
        },
        end: {
          line: 305,
          column: 17
        }
      },
      "106": {
        start: {
          line: 285,
          column: 20
        },
        end: {
          line: 285,
          column: 75
        }
      },
      "107": {
        start: {
          line: 287,
          column: 21
        },
        end: {
          line: 305,
          column: 17
        }
      },
      "108": {
        start: {
          line: 288,
          column: 46
        },
        end: {
          line: 288,
          column: 79
        }
      },
      "109": {
        start: {
          line: 289,
          column: 20
        },
        end: {
          line: 292,
          column: 21
        }
      },
      "110": {
        start: {
          line: 290,
          column: 24
        },
        end: {
          line: 290,
          column: 87
        }
      },
      "111": {
        start: {
          line: 291,
          column: 24
        },
        end: {
          line: 291,
          column: 64
        }
      },
      "112": {
        start: {
          line: 294,
          column: 21
        },
        end: {
          line: 305,
          column: 17
        }
      },
      "113": {
        start: {
          line: 296,
          column: 41
        },
        end: {
          line: 296,
          column: 85
        }
      },
      "114": {
        start: {
          line: 297,
          column: 20
        },
        end: {
          line: 304,
          column: 21
        }
      },
      "115": {
        start: {
          line: 298,
          column: 24
        },
        end: {
          line: 303,
          column: 25
        }
      },
      "116": {
        start: {
          line: 299,
          column: 45
        },
        end: {
          line: 299,
          column: 86
        }
      },
      "117": {
        start: {
          line: 300,
          column: 28
        },
        end: {
          line: 302,
          column: 29
        }
      },
      "118": {
        start: {
          line: 301,
          column: 32
        },
        end: {
          line: 301,
          column: 86
        }
      },
      "119": {
        start: {
          line: 307,
          column: 16
        },
        end: {
          line: 310,
          column: 19
        }
      },
      "120": {
        start: {
          line: 313,
          column: 16
        },
        end: {
          line: 313,
          column: 68
        }
      },
      "121": {
        start: {
          line: 314,
          column: 16
        },
        end: {
          line: 314,
          column: 76
        }
      },
      "122": {
        start: {
          line: 318,
          column: 8
        },
        end: {
          line: 325,
          column: 11
        }
      },
      "123": {
        start: {
          line: 319,
          column: 42
        },
        end: {
          line: 319,
          column: 46
        }
      },
      "124": {
        start: {
          line: 320,
          column: 12
        },
        end: {
          line: 324,
          column: 15
        }
      },
      "125": {
        start: {
          line: 332,
          column: 8
        },
        end: {
          line: 348,
          column: 11
        }
      },
      "126": {
        start: {
          line: 333,
          column: 12
        },
        end: {
          line: 347,
          column: 13
        }
      },
      "127": {
        start: {
          line: 334,
          column: 49
        },
        end: {
          line: 334,
          column: 53
        }
      },
      "128": {
        start: {
          line: 335,
          column: 38
        },
        end: {
          line: 335,
          column: 56
        }
      },
      "129": {
        start: {
          line: 336,
          column: 46
        },
        end: {
          line: 336,
          column: 124
        }
      },
      "130": {
        start: {
          line: 337,
          column: 16
        },
        end: {
          line: 340,
          column: 19
        }
      },
      "131": {
        start: {
          line: 343,
          column: 16
        },
        end: {
          line: 343,
          column: 66
        }
      },
      "132": {
        start: {
          line: 344,
          column: 16
        },
        end: {
          line: 346,
          column: 19
        }
      },
      "133": {
        start: {
          line: 350,
          column: 8
        },
        end: {
          line: 363,
          column: 11
        }
      },
      "134": {
        start: {
          line: 351,
          column: 12
        },
        end: {
          line: 362,
          column: 13
        }
      },
      "135": {
        start: {
          line: 352,
          column: 16
        },
        end: {
          line: 352,
          column: 92
        }
      },
      "136": {
        start: {
          line: 353,
          column: 16
        },
        end: {
          line: 355,
          column: 19
        }
      },
      "137": {
        start: {
          line: 358,
          column: 16
        },
        end: {
          line: 358,
          column: 68
        }
      },
      "138": {
        start: {
          line: 359,
          column: 16
        },
        end: {
          line: 361,
          column: 19
        }
      },
      "139": {
        start: {
          line: 365,
          column: 8
        },
        end: {
          line: 384,
          column: 11
        }
      },
      "140": {
        start: {
          line: 366,
          column: 12
        },
        end: {
          line: 383,
          column: 13
        }
      },
      "141": {
        start: {
          line: 367,
          column: 59
        },
        end: {
          line: 367,
          column: 63
        }
      },
      "142": {
        start: {
          line: 368,
          column: 38
        },
        end: {
          line: 368,
          column: 56
        }
      },
      "143": {
        start: {
          line: 369,
          column: 31
        },
        end: {
          line: 369,
          column: 105
        }
      },
      "144": {
        start: {
          line: 370,
          column: 16
        },
        end: {
          line: 370,
          column: 66
        }
      },
      "145": {
        start: {
          line: 372,
          column: 16
        },
        end: {
          line: 376,
          column: 19
        }
      },
      "146": {
        start: {
          line: 379,
          column: 16
        },
        end: {
          line: 379,
          column: 63
        }
      },
      "147": {
        start: {
          line: 380,
          column: 16
        },
        end: {
          line: 382,
          column: 19
        }
      },
      "148": {
        start: {
          line: 386,
          column: 8
        },
        end: {
          line: 400,
          column: 11
        }
      },
      "149": {
        start: {
          line: 387,
          column: 12
        },
        end: {
          line: 399,
          column: 13
        }
      },
      "150": {
        start: {
          line: 388,
          column: 84
        },
        end: {
          line: 388,
          column: 88
        }
      },
      "151": {
        start: {
          line: 389,
          column: 46
        },
        end: {
          line: 389,
          column: 64
        }
      },
      "152": {
        start: {
          line: 390,
          column: 37
        },
        end: {
          line: 390,
          column: 144
        }
      },
      "153": {
        start: {
          line: 391,
          column: 16
        },
        end: {
          line: 392,
          column: 46
        }
      },
      "154": {
        start: {
          line: 395,
          column: 16
        },
        end: {
          line: 395,
          column: 63
        }
      },
      "155": {
        start: {
          line: 396,
          column: 16
        },
        end: {
          line: 398,
          column: 19
        }
      },
      "156": {
        start: {
          line: 402,
          column: 8
        },
        end: {
          line: 412,
          column: 11
        }
      },
      "157": {
        start: {
          line: 403,
          column: 12
        },
        end: {
          line: 411,
          column: 13
        }
      },
      "158": {
        start: {
          line: 404,
          column: 16
        },
        end: {
          line: 404,
          column: 68
        }
      },
      "159": {
        start: {
          line: 405,
          column: 16
        },
        end: {
          line: 407,
          column: 19
        }
      },
      "160": {
        start: {
          line: 410,
          column: 16
        },
        end: {
          line: 410,
          column: 65
        }
      },
      "161": {
        start: {
          line: 413,
          column: 8
        },
        end: {
          line: 421,
          column: 11
        }
      },
      "162": {
        start: {
          line: 414,
          column: 12
        },
        end: {
          line: 420,
          column: 13
        }
      },
      "163": {
        start: {
          line: 415,
          column: 16
        },
        end: {
          line: 415,
          column: 67
        }
      },
      "164": {
        start: {
          line: 416,
          column: 16
        },
        end: {
          line: 416,
          column: 80
        }
      },
      "165": {
        start: {
          line: 419,
          column: 16
        },
        end: {
          line: 419,
          column: 64
        }
      },
      "166": {
        start: {
          line: 427,
          column: 37
        },
        end: {
          line: 427,
          column: 48
        }
      },
      "167": {
        start: {
          line: 429,
          column: 8
        },
        end: {
          line: 437,
          column: 11
        }
      },
      "168": {
        start: {
          line: 430,
          column: 42
        },
        end: {
          line: 430,
          column: 46
        }
      },
      "169": {
        start: {
          line: 431,
          column: 12
        },
        end: {
          line: 436,
          column: 15
        }
      },
      "170": {
        start: {
          line: 439,
          column: 8
        },
        end: {
          line: 447,
          column: 11
        }
      },
      "171": {
        start: {
          line: 440,
          column: 44
        },
        end: {
          line: 440,
          column: 48
        }
      },
      "172": {
        start: {
          line: 441,
          column: 12
        },
        end: {
          line: 446,
          column: 15
        }
      },
      "173": {
        start: {
          line: 449,
          column: 8
        },
        end: {
          line: 473,
          column: 11
        }
      },
      "174": {
        start: {
          line: 450,
          column: 12
        },
        end: {
          line: 472,
          column: 13
        }
      },
      "175": {
        start: {
          line: 451,
          column: 67
        },
        end: {
          line: 451,
          column: 71
        }
      },
      "176": {
        start: {
          line: 453,
          column: 36
        },
        end: {
          line: 453,
          column: 80
        }
      },
      "177": {
        start: {
          line: 454,
          column: 16
        },
        end: {
          line: 461,
          column: 17
        }
      },
      "178": {
        start: {
          line: 455,
          column: 20
        },
        end: {
          line: 460,
          column: 23
        }
      },
      "179": {
        start: {
          line: 463,
          column: 16
        },
        end: {
          line: 468,
          column: 19
        }
      },
      "180": {
        start: {
          line: 471,
          column: 16
        },
        end: {
          line: 471,
          column: 69
        }
      },
      "181": {
        start: {
          line: 479,
          column: 37
        },
        end: {
          line: 479,
          column: 48
        }
      },
      "182": {
        start: {
          line: 480,
          column: 8
        },
        end: {
          line: 480,
          column: 68
        }
      },
      "183": {
        start: {
          line: 482,
          column: 8
        },
        end: {
          line: 482,
          column: 45
        }
      },
      "184": {
        start: {
          line: 483,
          column: 8
        },
        end: {
          line: 483,
          column: 40
        }
      },
      "185": {
        start: {
          line: 484,
          column: 8
        },
        end: {
          line: 484,
          column: 43
        }
      },
      "186": {
        start: {
          line: 486,
          column: 22
        },
        end: {
          line: 486,
          column: 39
        }
      },
      "187": {
        start: {
          line: 487,
          column: 8
        },
        end: {
          line: 492,
          column: 9
        }
      },
      "188": {
        start: {
          line: 488,
          column: 12
        },
        end: {
          line: 491,
          column: 13
        }
      },
      "189": {
        start: {
          line: 490,
          column: 16
        },
        end: {
          line: 490,
          column: 60
        }
      },
      "190": {
        start: {
          line: 499,
          column: 8
        },
        end: {
          line: 522,
          column: 9
        }
      },
      "191": {
        start: {
          line: 500,
          column: 41
        },
        end: {
          line: 500,
          column: 52
        }
      },
      "192": {
        start: {
          line: 502,
          column: 12
        },
        end: {
          line: 502,
          column: 42
        }
      },
      "193": {
        start: {
          line: 504,
          column: 12
        },
        end: {
          line: 504,
          column: 117
        }
      },
      "194": {
        start: {
          line: 506,
          column: 12
        },
        end: {
          line: 506,
          column: 79
        }
      },
      "195": {
        start: {
          line: 508,
          column: 12
        },
        end: {
          line: 511,
          column: 15
        }
      },
      "196": {
        start: {
          line: 513,
          column: 42
        },
        end: {
          line: 513,
          column: 140
        }
      },
      "197": {
        start: {
          line: 514,
          column: 12
        },
        end: {
          line: 517,
          column: 13
        }
      },
      "198": {
        start: {
          line: 515,
          column: 16
        },
        end: {
          line: 515,
          column: 64
        }
      },
      "199": {
        start: {
          line: 516,
          column: 16
        },
        end: {
          line: 516,
          column: 59
        }
      },
      "200": {
        start: {
          line: 518,
          column: 12
        },
        end: {
          line: 518,
          column: 68
        }
      },
      "201": {
        start: {
          line: 521,
          column: 12
        },
        end: {
          line: 521,
          column: 59
        }
      },
      "202": {
        start: {
          line: 529,
          column: 23
        },
        end: {
          line: 529,
          column: 53
        }
      },
      "203": {
        start: {
          line: 530,
          column: 8
        },
        end: {
          line: 532,
          column: 9
        }
      },
      "204": {
        start: {
          line: 531,
          column: 12
        },
        end: {
          line: 531,
          column: 24
        }
      },
      "205": {
        start: {
          line: 533,
          column: 29
        },
        end: {
          line: 533,
          column: 79
        }
      },
      "206": {
        start: {
          line: 534,
          column: 8
        },
        end: {
          line: 534,
          column: 93
        }
      },
      "207": {
        start: {
          line: 540,
          column: 29
        },
        end: {
          line: 543,
          column: 10
        }
      },
      "208": {
        start: {
          line: 544,
          column: 8
        },
        end: {
          line: 544,
          column: 39
        }
      },
      "209": {
        start: {
          line: 550,
          column: 25
        },
        end: {
          line: 550,
          column: 53
        }
      },
      "210": {
        start: {
          line: 551,
          column: 8
        },
        end: {
          line: 556,
          column: 9
        }
      },
      "211": {
        start: {
          line: 552,
          column: 27
        },
        end: {
          line: 552,
          column: 59
        }
      },
      "212": {
        start: {
          line: 553,
          column: 12
        },
        end: {
          line: 555,
          column: 13
        }
      },
      "213": {
        start: {
          line: 554,
          column: 16
        },
        end: {
          line: 554,
          column: 41
        }
      },
      "214": {
        start: {
          line: 562,
          column: 8
        },
        end: {
          line: 562,
          column: 48
        }
      },
      "215": {
        start: {
          line: 568,
          column: 8
        },
        end: {
          line: 581,
          column: 9
        }
      },
      "216": {
        start: {
          line: 569,
          column: 39
        },
        end: {
          line: 569,
          column: 78
        }
      },
      "217": {
        start: {
          line: 570,
          column: 12
        },
        end: {
          line: 577,
          column: 13
        }
      },
      "218": {
        start: {
          line: 571,
          column: 16
        },
        end: {
          line: 576,
          column: 17
        }
      },
      "219": {
        start: {
          line: 572,
          column: 35
        },
        end: {
          line: 572,
          column: 67
        }
      },
      "220": {
        start: {
          line: 573,
          column: 20
        },
        end: {
          line: 575,
          column: 21
        }
      },
      "221": {
        start: {
          line: 574,
          column: 24
        },
        end: {
          line: 574,
          column: 74
        }
      },
      "222": {
        start: {
          line: 580,
          column: 12
        },
        end: {
          line: 580,
          column: 74
        }
      },
      "223": {
        start: {
          line: 587,
          column: 8
        },
        end: {
          line: 600,
          column: 9
        }
      },
      "224": {
        start: {
          line: 588,
          column: 12
        },
        end: {
          line: 596,
          column: 13
        }
      },
      "225": {
        start: {
          line: 589,
          column: 33
        },
        end: {
          line: 589,
          column: 61
        }
      },
      "226": {
        start: {
          line: 590,
          column: 16
        },
        end: {
          line: 595,
          column: 17
        }
      },
      "227": {
        start: {
          line: 591,
          column: 35
        },
        end: {
          line: 591,
          column: 67
        }
      },
      "228": {
        start: {
          line: 592,
          column: 20
        },
        end: {
          line: 594,
          column: 21
        }
      },
      "229": {
        start: {
          line: 593,
          column: 24
        },
        end: {
          line: 593,
          column: 78
        }
      },
      "230": {
        start: {
          line: 599,
          column: 12
        },
        end: {
          line: 599,
          column: 75
        }
      },
      "231": {
        start: {
          line: 606,
          column: 8
        },
        end: {
          line: 610,
          column: 10
        }
      },
      "232": {
        start: {
          line: 613,
          column: 0
        },
        end: {
          line: 613,
          column: 40
        }
      },
      "233": {
        start: {
          line: 614,
          column: 0
        },
        end: {
          line: 614,
          column: 38
        }
      },
      "234": {
        start: {
          line: 615,
          column: 0
        },
        end: {
          line: 615,
          column: 38
        }
      },
      "235": {
        start: {
          line: 616,
          column: 0
        },
        end: {
          line: 616,
          column: 46
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        loc: {
          start: {
            line: 23,
            column: 34
          },
          end: {
            line: 68,
            column: 5
          }
        },
        line: 23
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 35,
            column: 20
          },
          end: {
            line: 35,
            column: 21
          }
        },
        loc: {
          start: {
            line: 35,
            column: 44
          },
          end: {
            line: 65,
            column: 9
          }
        },
        line: 35
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 72,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        },
        loc: {
          start: {
            line: 72,
            column: 36
          },
          end: {
            line: 86,
            column: 5
          }
        },
        line: 72
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 85,
            column: 32
          },
          end: {
            line: 85,
            column: 33
          }
        },
        loc: {
          start: {
            line: 85,
            column: 38
          },
          end: {
            line: 85,
            column: 70
          }
        },
        line: 85
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 90,
            column: 5
          }
        },
        loc: {
          start: {
            line: 90,
            column: 41
          },
          end: {
            line: 256,
            column: 5
          }
        },
        line: 90
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 93,
            column: 34
          },
          end: {
            line: 93,
            column: 35
          }
        },
        loc: {
          start: {
            line: 93,
            column: 50
          },
          end: {
            line: 185,
            column: 9
          }
        },
        line: 93
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 187,
            column: 35
          },
          end: {
            line: 187,
            column: 36
          }
        },
        loc: {
          start: {
            line: 187,
            column: 51
          },
          end: {
            line: 189,
            column: 9
          }
        },
        line: 187
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 191,
            column: 38
          },
          end: {
            line: 191,
            column: 39
          }
        },
        loc: {
          start: {
            line: 191,
            column: 54
          },
          end: {
            line: 217,
            column: 9
          }
        },
        line: 191
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 219,
            column: 38
          },
          end: {
            line: 219,
            column: 39
          }
        },
        loc: {
          start: {
            line: 219,
            column: 54
          },
          end: {
            line: 255,
            column: 9
          }
        },
        line: 219
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 260,
            column: 4
          },
          end: {
            line: 260,
            column: 5
          }
        },
        loc: {
          start: {
            line: 260,
            column: 38
          },
          end: {
            line: 326,
            column: 5
          }
        },
        line: 260
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 263,
            column: 34
          },
          end: {
            line: 263,
            column: 35
          }
        },
        loc: {
          start: {
            line: 263,
            column: 50
          },
          end: {
            line: 316,
            column: 9
          }
        },
        line: 263
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 318,
            column: 28
          },
          end: {
            line: 318,
            column: 29
          }
        },
        loc: {
          start: {
            line: 318,
            column: 38
          },
          end: {
            line: 325,
            column: 9
          }
        },
        line: 318
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 330,
            column: 4
          },
          end: {
            line: 330,
            column: 5
          }
        },
        loc: {
          start: {
            line: 330,
            column: 40
          },
          end: {
            line: 422,
            column: 5
          }
        },
        line: 330
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 332,
            column: 38
          },
          end: {
            line: 332,
            column: 39
          }
        },
        loc: {
          start: {
            line: 332,
            column: 54
          },
          end: {
            line: 348,
            column: 9
          }
        },
        line: 332
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 350,
            column: 39
          },
          end: {
            line: 350,
            column: 40
          }
        },
        loc: {
          start: {
            line: 350,
            column: 55
          },
          end: {
            line: 363,
            column: 9
          }
        },
        line: 350
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 365,
            column: 29
          },
          end: {
            line: 365,
            column: 30
          }
        },
        loc: {
          start: {
            line: 365,
            column: 45
          },
          end: {
            line: 384,
            column: 9
          }
        },
        line: 365
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 386,
            column: 29
          },
          end: {
            line: 386,
            column: 30
          }
        },
        loc: {
          start: {
            line: 386,
            column: 45
          },
          end: {
            line: 400,
            column: 9
          }
        },
        line: 386
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 402,
            column: 37
          },
          end: {
            line: 402,
            column: 38
          }
        },
        loc: {
          start: {
            line: 402,
            column: 53
          },
          end: {
            line: 412,
            column: 9
          }
        },
        line: 402
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 413,
            column: 36
          },
          end: {
            line: 413,
            column: 37
          }
        },
        loc: {
          start: {
            line: 413,
            column: 52
          },
          end: {
            line: 421,
            column: 9
          }
        },
        line: 413
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 426,
            column: 4
          },
          end: {
            line: 426,
            column: 5
          }
        },
        loc: {
          start: {
            line: 426,
            column: 42
          },
          end: {
            line: 474,
            column: 5
          }
        },
        line: 426
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 429,
            column: 32
          },
          end: {
            line: 429,
            column: 33
          }
        },
        loc: {
          start: {
            line: 429,
            column: 48
          },
          end: {
            line: 437,
            column: 9
          }
        },
        line: 429
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 439,
            column: 35
          },
          end: {
            line: 439,
            column: 36
          }
        },
        loc: {
          start: {
            line: 439,
            column: 51
          },
          end: {
            line: 447,
            column: 9
          }
        },
        line: 439
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 449,
            column: 41
          },
          end: {
            line: 449,
            column: 42
          }
        },
        loc: {
          start: {
            line: 449,
            column: 57
          },
          end: {
            line: 473,
            column: 9
          }
        },
        line: 449
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 478,
            column: 4
          },
          end: {
            line: 478,
            column: 5
          }
        },
        loc: {
          start: {
            line: 478,
            column: 45
          },
          end: {
            line: 493,
            column: 5
          }
        },
        line: 478
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 497,
            column: 4
          },
          end: {
            line: 497,
            column: 5
          }
        },
        loc: {
          start: {
            line: 497,
            column: 55
          },
          end: {
            line: 523,
            column: 5
          }
        },
        line: 497
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 527,
            column: 4
          },
          end: {
            line: 527,
            column: 5
          }
        },
        loc: {
          start: {
            line: 527,
            column: 50
          },
          end: {
            line: 535,
            column: 5
          }
        },
        line: 527
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 539,
            column: 4
          },
          end: {
            line: 539,
            column: 5
          }
        },
        loc: {
          start: {
            line: 539,
            column: 51
          },
          end: {
            line: 545,
            column: 5
          }
        },
        line: 539
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 549,
            column: 4
          },
          end: {
            line: 549,
            column: 5
          }
        },
        loc: {
          start: {
            line: 549,
            column: 43
          },
          end: {
            line: 557,
            column: 5
          }
        },
        line: 549
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 561,
            column: 4
          },
          end: {
            line: 561,
            column: 5
          }
        },
        loc: {
          start: {
            line: 561,
            column: 49
          },
          end: {
            line: 563,
            column: 5
          }
        },
        line: 561
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 567,
            column: 4
          },
          end: {
            line: 567,
            column: 5
          }
        },
        loc: {
          start: {
            line: 567,
            column: 68
          },
          end: {
            line: 582,
            column: 5
          }
        },
        line: 567
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 586,
            column: 4
          },
          end: {
            line: 586,
            column: 5
          }
        },
        loc: {
          start: {
            line: 586,
            column: 74
          },
          end: {
            line: 601,
            column: 5
          }
        },
        line: 586
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 605,
            column: 4
          },
          end: {
            line: 605,
            column: 5
          }
        },
        loc: {
          start: {
            line: 605,
            column: 22
          },
          end: {
            line: 611,
            column: 5
          }
        },
        line: 605
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 38,
            column: 30
          },
          end: {
            line: 38,
            column: 171
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 30
          },
          end: {
            line: 38,
            column: 57
          }
        }, {
          start: {
            line: 38,
            column: 62
          },
          end: {
            line: 38,
            column: 170
          }
        }],
        line: 38
      },
      "1": {
        loc: {
          start: {
            line: 38,
            column: 62
          },
          end: {
            line: 38,
            column: 170
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 38,
            column: 136
          },
          end: {
            line: 38,
            column: 142
          }
        }, {
          start: {
            line: 38,
            column: 145
          },
          end: {
            line: 38,
            column: 170
          }
        }],
        line: 38
      },
      "2": {
        loc: {
          start: {
            line: 38,
            column: 62
          },
          end: {
            line: 38,
            column: 133
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 62
          },
          end: {
            line: 38,
            column: 116
          }
        }, {
          start: {
            line: 38,
            column: 120
          },
          end: {
            line: 38,
            column: 133
          }
        }],
        line: 38
      },
      "3": {
        loc: {
          start: {
            line: 39,
            column: 16
          },
          end: {
            line: 41,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 16
          },
          end: {
            line: 41,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "4": {
        loc: {
          start: {
            line: 43,
            column: 16
          },
          end: {
            line: 45,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 16
          },
          end: {
            line: 45,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "5": {
        loc: {
          start: {
            line: 49,
            column: 16
          },
          end: {
            line: 51,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 16
          },
          end: {
            line: 51,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "6": {
        loc: {
          start: {
            line: 56,
            column: 30
          },
          end: {
            line: 56,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 30
          },
          end: {
            line: 56,
            column: 39
          }
        }, {
          start: {
            line: 56,
            column: 43
          },
          end: {
            line: 56,
            column: 57
          }
        }],
        line: 56
      },
      "7": {
        loc: {
          start: {
            line: 99,
            column: 16
          },
          end: {
            line: 102,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 16
          },
          end: {
            line: 102,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "8": {
        loc: {
          start: {
            line: 103,
            column: 16
          },
          end: {
            line: 106,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 16
          },
          end: {
            line: 106,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "9": {
        loc: {
          start: {
            line: 108,
            column: 16
          },
          end: {
            line: 113,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 16
          },
          end: {
            line: 113,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "10": {
        loc: {
          start: {
            line: 108,
            column: 20
          },
          end: {
            line: 108,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 108,
            column: 20
          },
          end: {
            line: 108,
            column: 44
          }
        }, {
          start: {
            line: 108,
            column: 48
          },
          end: {
            line: 108,
            column: 93
          }
        }],
        line: 108
      },
      "11": {
        loc: {
          start: {
            line: 115,
            column: 16
          },
          end: {
            line: 118,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 16
          },
          end: {
            line: 118,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "12": {
        loc: {
          start: {
            line: 115,
            column: 20
          },
          end: {
            line: 115,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 115,
            column: 20
          },
          end: {
            line: 115,
            column: 54
          }
        }, {
          start: {
            line: 115,
            column: 58
          },
          end: {
            line: 115,
            column: 96
          }
        }],
        line: 115
      },
      "13": {
        loc: {
          start: {
            line: 120,
            column: 44
          },
          end: {
            line: 120,
            column: 142
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 120,
            column: 45
          },
          end: {
            line: 120,
            column: 136
          }
        }, {
          start: {
            line: 120,
            column: 141
          },
          end: {
            line: 120,
            column: 142
          }
        }],
        line: 120
      },
      "14": {
        loc: {
          start: {
            line: 120,
            column: 45
          },
          end: {
            line: 120,
            column: 136
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 120,
            column: 120
          },
          end: {
            line: 120,
            column: 126
          }
        }, {
          start: {
            line: 120,
            column: 129
          },
          end: {
            line: 120,
            column: 136
          }
        }],
        line: 120
      },
      "15": {
        loc: {
          start: {
            line: 120,
            column: 45
          },
          end: {
            line: 120,
            column: 117
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 120,
            column: 45
          },
          end: {
            line: 120,
            column: 100
          }
        }, {
          start: {
            line: 120,
            column: 104
          },
          end: {
            line: 120,
            column: 117
          }
        }],
        line: 120
      },
      "16": {
        loc: {
          start: {
            line: 121,
            column: 16
          },
          end: {
            line: 124,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 16
          },
          end: {
            line: 124,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "17": {
        loc: {
          start: {
            line: 128,
            column: 16
          },
          end: {
            line: 130,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 16
          },
          end: {
            line: 130,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 128
      },
      "18": {
        loc: {
          start: {
            line: 143,
            column: 32
          },
          end: {
            line: 143,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 143,
            column: 32
          },
          end: {
            line: 143,
            column: 70
          }
        }, {
          start: {
            line: 143,
            column: 74
          },
          end: {
            line: 143,
            column: 76
          }
        }],
        line: 143
      },
      "19": {
        loc: {
          start: {
            line: 154,
            column: 16
          },
          end: {
            line: 159,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 154,
            column: 16
          },
          end: {
            line: 159,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 154
      },
      "20": {
        loc: {
          start: {
            line: 161,
            column: 16
          },
          end: {
            line: 163,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 16
          },
          end: {
            line: 163,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 161
      },
      "21": {
        loc: {
          start: {
            line: 196,
            column: 16
          },
          end: {
            line: 201,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 196,
            column: 16
          },
          end: {
            line: 201,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 196
      },
      "22": {
        loc: {
          start: {
            line: 196,
            column: 20
          },
          end: {
            line: 196,
            column: 213
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 196,
            column: 20
          },
          end: {
            line: 196,
            column: 112
          }
        }, {
          start: {
            line: 196,
            column: 116
          },
          end: {
            line: 196,
            column: 213
          }
        }],
        line: 196
      },
      "23": {
        loc: {
          start: {
            line: 196,
            column: 22
          },
          end: {
            line: 196,
            column: 111
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 196,
            column: 71
          },
          end: {
            line: 196,
            column: 77
          }
        }, {
          start: {
            line: 196,
            column: 80
          },
          end: {
            line: 196,
            column: 111
          }
        }],
        line: 196
      },
      "24": {
        loc: {
          start: {
            line: 196,
            column: 22
          },
          end: {
            line: 196,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 196,
            column: 22
          },
          end: {
            line: 196,
            column: 42
          }
        }, {
          start: {
            line: 196,
            column: 46
          },
          end: {
            line: 196,
            column: 68
          }
        }],
        line: 196
      },
      "25": {
        loc: {
          start: {
            line: 196,
            column: 118
          },
          end: {
            line: 196,
            column: 212
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 196,
            column: 167
          },
          end: {
            line: 196,
            column: 173
          }
        }, {
          start: {
            line: 196,
            column: 176
          },
          end: {
            line: 196,
            column: 212
          }
        }],
        line: 196
      },
      "26": {
        loc: {
          start: {
            line: 196,
            column: 118
          },
          end: {
            line: 196,
            column: 164
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 196,
            column: 118
          },
          end: {
            line: 196,
            column: 138
          }
        }, {
          start: {
            line: 196,
            column: 142
          },
          end: {
            line: 196,
            column: 164
          }
        }],
        line: 196
      },
      "27": {
        loc: {
          start: {
            line: 209,
            column: 44
          },
          end: {
            line: 209,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 209,
            column: 52
          },
          end: {
            line: 209,
            column: 61
          }
        }, {
          start: {
            line: 209,
            column: 64
          },
          end: {
            line: 209,
            column: 73
          }
        }],
        line: 209
      },
      "28": {
        loc: {
          start: {
            line: 224,
            column: 16
          },
          end: {
            line: 229,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 224,
            column: 16
          },
          end: {
            line: 229,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 224
      },
      "29": {
        loc: {
          start: {
            line: 224,
            column: 20
          },
          end: {
            line: 224,
            column: 201
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 224,
            column: 20
          },
          end: {
            line: 224,
            column: 106
          }
        }, {
          start: {
            line: 224,
            column: 110
          },
          end: {
            line: 224,
            column: 201
          }
        }],
        line: 224
      },
      "30": {
        loc: {
          start: {
            line: 224,
            column: 22
          },
          end: {
            line: 224,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 224,
            column: 67
          },
          end: {
            line: 224,
            column: 73
          }
        }, {
          start: {
            line: 224,
            column: 76
          },
          end: {
            line: 224,
            column: 105
          }
        }],
        line: 224
      },
      "31": {
        loc: {
          start: {
            line: 224,
            column: 22
          },
          end: {
            line: 224,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 224,
            column: 22
          },
          end: {
            line: 224,
            column: 40
          }
        }, {
          start: {
            line: 224,
            column: 44
          },
          end: {
            line: 224,
            column: 64
          }
        }],
        line: 224
      },
      "32": {
        loc: {
          start: {
            line: 224,
            column: 112
          },
          end: {
            line: 224,
            column: 200
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 224,
            column: 157
          },
          end: {
            line: 224,
            column: 163
          }
        }, {
          start: {
            line: 224,
            column: 166
          },
          end: {
            line: 224,
            column: 200
          }
        }],
        line: 224
      },
      "33": {
        loc: {
          start: {
            line: 224,
            column: 112
          },
          end: {
            line: 224,
            column: 154
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 224,
            column: 112
          },
          end: {
            line: 224,
            column: 130
          }
        }, {
          start: {
            line: 224,
            column: 134
          },
          end: {
            line: 224,
            column: 154
          }
        }],
        line: 224
      },
      "34": {
        loc: {
          start: {
            line: 237,
            column: 16
          },
          end: {
            line: 242,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 237,
            column: 16
          },
          end: {
            line: 242,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 237
      },
      "35": {
        loc: {
          start: {
            line: 239,
            column: 20
          },
          end: {
            line: 241,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 239,
            column: 20
          },
          end: {
            line: 241,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 239
      },
      "36": {
        loc: {
          start: {
            line: 268,
            column: 16
          },
          end: {
            line: 271,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 268,
            column: 16
          },
          end: {
            line: 271,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 268
      },
      "37": {
        loc: {
          start: {
            line: 284,
            column: 16
          },
          end: {
            line: 305,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 284,
            column: 16
          },
          end: {
            line: 305,
            column: 17
          }
        }, {
          start: {
            line: 287,
            column: 21
          },
          end: {
            line: 305,
            column: 17
          }
        }],
        line: 284
      },
      "38": {
        loc: {
          start: {
            line: 287,
            column: 21
          },
          end: {
            line: 305,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 287,
            column: 21
          },
          end: {
            line: 305,
            column: 17
          }
        }, {
          start: {
            line: 294,
            column: 21
          },
          end: {
            line: 305,
            column: 17
          }
        }],
        line: 287
      },
      "39": {
        loc: {
          start: {
            line: 287,
            column: 25
          },
          end: {
            line: 287,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 287,
            column: 25
          },
          end: {
            line: 287,
            column: 52
          }
        }, {
          start: {
            line: 287,
            column: 56
          },
          end: {
            line: 287,
            column: 67
          }
        }],
        line: 287
      },
      "40": {
        loc: {
          start: {
            line: 289,
            column: 20
          },
          end: {
            line: 292,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 289,
            column: 20
          },
          end: {
            line: 292,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 289
      },
      "41": {
        loc: {
          start: {
            line: 294,
            column: 21
          },
          end: {
            line: 305,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 294,
            column: 21
          },
          end: {
            line: 305,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 294
      },
      "42": {
        loc: {
          start: {
            line: 298,
            column: 24
          },
          end: {
            line: 303,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 298,
            column: 24
          },
          end: {
            line: 303,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 298
      },
      "43": {
        loc: {
          start: {
            line: 298,
            column: 28
          },
          end: {
            line: 298,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 298,
            column: 28
          },
          end: {
            line: 298,
            column: 59
          }
        }, {
          start: {
            line: 298,
            column: 63
          },
          end: {
            line: 298,
            column: 99
          }
        }],
        line: 298
      },
      "44": {
        loc: {
          start: {
            line: 300,
            column: 28
          },
          end: {
            line: 302,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 300,
            column: 28
          },
          end: {
            line: 302,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 300
      },
      "45": {
        loc: {
          start: {
            line: 454,
            column: 16
          },
          end: {
            line: 461,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 454,
            column: 16
          },
          end: {
            line: 461,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 454
      },
      "46": {
        loc: {
          start: {
            line: 488,
            column: 12
          },
          end: {
            line: 491,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 488,
            column: 12
          },
          end: {
            line: 491,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 488
      },
      "47": {
        loc: {
          start: {
            line: 504,
            column: 12
          },
          end: {
            line: 504,
            column: 116
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 504,
            column: 87
          },
          end: {
            line: 504,
            column: 93
          }
        }, {
          start: {
            line: 504,
            column: 96
          },
          end: {
            line: 504,
            column: 116
          }
        }],
        line: 504
      },
      "48": {
        loc: {
          start: {
            line: 504,
            column: 12
          },
          end: {
            line: 504,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 504,
            column: 12
          },
          end: {
            line: 504,
            column: 67
          }
        }, {
          start: {
            line: 504,
            column: 71
          },
          end: {
            line: 504,
            column: 84
          }
        }],
        line: 504
      },
      "49": {
        loc: {
          start: {
            line: 513,
            column: 42
          },
          end: {
            line: 513,
            column: 140
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 513,
            column: 43
          },
          end: {
            line: 513,
            column: 134
          }
        }, {
          start: {
            line: 513,
            column: 139
          },
          end: {
            line: 513,
            column: 140
          }
        }],
        line: 513
      },
      "50": {
        loc: {
          start: {
            line: 513,
            column: 43
          },
          end: {
            line: 513,
            column: 134
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 513,
            column: 118
          },
          end: {
            line: 513,
            column: 124
          }
        }, {
          start: {
            line: 513,
            column: 127
          },
          end: {
            line: 513,
            column: 134
          }
        }],
        line: 513
      },
      "51": {
        loc: {
          start: {
            line: 513,
            column: 43
          },
          end: {
            line: 513,
            column: 115
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 513,
            column: 43
          },
          end: {
            line: 513,
            column: 98
          }
        }, {
          start: {
            line: 513,
            column: 102
          },
          end: {
            line: 513,
            column: 115
          }
        }],
        line: 513
      },
      "52": {
        loc: {
          start: {
            line: 514,
            column: 12
          },
          end: {
            line: 517,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 514,
            column: 12
          },
          end: {
            line: 517,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 514
      },
      "53": {
        loc: {
          start: {
            line: 530,
            column: 8
          },
          end: {
            line: 532,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 530,
            column: 8
          },
          end: {
            line: 532,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 530
      },
      "54": {
        loc: {
          start: {
            line: 534,
            column: 15
          },
          end: {
            line: 534,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 534,
            column: 16
          },
          end: {
            line: 534,
            column: 83
          }
        }, {
          start: {
            line: 534,
            column: 88
          },
          end: {
            line: 534,
            column: 92
          }
        }],
        line: 534
      },
      "55": {
        loc: {
          start: {
            line: 534,
            column: 16
          },
          end: {
            line: 534,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 534,
            column: 69
          },
          end: {
            line: 534,
            column: 75
          }
        }, {
          start: {
            line: 534,
            column: 78
          },
          end: {
            line: 534,
            column: 83
          }
        }],
        line: 534
      },
      "56": {
        loc: {
          start: {
            line: 534,
            column: 16
          },
          end: {
            line: 534,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 534,
            column: 16
          },
          end: {
            line: 534,
            column: 49
          }
        }, {
          start: {
            line: 534,
            column: 53
          },
          end: {
            line: 534,
            column: 66
          }
        }],
        line: 534
      },
      "57": {
        loc: {
          start: {
            line: 544,
            column: 15
          },
          end: {
            line: 544,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 544,
            column: 15
          },
          end: {
            line: 544,
            column: 32
          }
        }, {
          start: {
            line: 544,
            column: 36
          },
          end: {
            line: 544,
            column: 38
          }
        }],
        line: 544
      },
      "58": {
        loc: {
          start: {
            line: 551,
            column: 8
          },
          end: {
            line: 556,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 551,
            column: 8
          },
          end: {
            line: 556,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 551
      },
      "59": {
        loc: {
          start: {
            line: 553,
            column: 12
          },
          end: {
            line: 555,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 553,
            column: 12
          },
          end: {
            line: 555,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 553
      },
      "60": {
        loc: {
          start: {
            line: 570,
            column: 12
          },
          end: {
            line: 577,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 570,
            column: 12
          },
          end: {
            line: 577,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 570
      },
      "61": {
        loc: {
          start: {
            line: 573,
            column: 20
          },
          end: {
            line: 575,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 573,
            column: 20
          },
          end: {
            line: 575,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 573
      },
      "62": {
        loc: {
          start: {
            line: 573,
            column: 24
          },
          end: {
            line: 573,
            column: 111
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 573,
            column: 24
          },
          end: {
            line: 573,
            column: 30
          }
        }, {
          start: {
            line: 573,
            column: 35
          },
          end: {
            line: 573,
            column: 56
          }
        }, {
          start: {
            line: 573,
            column: 60
          },
          end: {
            line: 573,
            column: 110
          }
        }],
        line: 573
      },
      "63": {
        loc: {
          start: {
            line: 590,
            column: 16
          },
          end: {
            line: 595,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 590,
            column: 16
          },
          end: {
            line: 595,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 590
      },
      "64": {
        loc: {
          start: {
            line: 592,
            column: 20
          },
          end: {
            line: 594,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 592,
            column: 20
          },
          end: {
            line: 594,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 592
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0, 0],
      "63": [0, 0],
      "64": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b681531c480066a32b4e2ae5d1b2caa0fefd0b2e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_14llklcqwl = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_14llklcqwl();
import { verify } from "hono/jwt";
import { Server as SocketIOServer } from "socket.io";
import { v4 as uuidv4 } from "uuid";
import { Meeting, MeetingChat, MeetingParticipant } from "@/models/meeting.model";
import { config } from "@/utils/env";
import { UserService } from "./users.service";
import { WebRTCService } from "./webrtc.service";
/**
 * 🔄 Socket.IO Service for Real-time Meeting Communication
 *
 * Handles:
 * - Real-time signaling for WebRTC
 * - Live chat during meetings
 * - Participant presence updates
 * - Meeting events and notifications
 * - Screen sharing coordination
 * - Hand raising and reactions
 */
export class SocketService {
  /**
   * Initialize Socket.IO server
   */
  static initialize(httpServer) {
    /* istanbul ignore next */
    cov_14llklcqwl().f[0]++;
    cov_14llklcqwl().s[0]++;
    this.io = new SocketIOServer(httpServer, {
      cors: {
        origin: "*",
        // Allow all origins for development
        methods: ["GET", "POST"],
        credentials: false // Note: credentials must be false when origin is "*"
      },
      transports: ["websocket", "polling"],
      pingTimeout: 60000,
      pingInterval: 25000
    });
    // Authentication middleware
    /* istanbul ignore next */
    cov_14llklcqwl().s[1]++;
    this.io.use(async (socket, next) => {
      /* istanbul ignore next */
      cov_14llklcqwl().f[1]++;
      var _a;
      /* istanbul ignore next */
      cov_14llklcqwl().s[2]++;
      try {
        const token =
        /* istanbul ignore next */
        (cov_14llklcqwl().s[3]++,
        /* istanbul ignore next */
        (cov_14llklcqwl().b[0][0]++, socket.handshake.auth.token) ||
        /* istanbul ignore next */
        (cov_14llklcqwl().b[0][1]++,
        /* istanbul ignore next */
        (cov_14llklcqwl().b[2][0]++, (_a = socket.handshake.headers.authorization) === null) ||
        /* istanbul ignore next */
        (cov_14llklcqwl().b[2][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_14llklcqwl().b[1][0]++, void 0) :
        /* istanbul ignore next */
        (cov_14llklcqwl().b[1][1]++, _a.replace("Bearer ", ""))));
        /* istanbul ignore next */
        cov_14llklcqwl().s[4]++;
        if (!token) {
          /* istanbul ignore next */
          cov_14llklcqwl().b[3][0]++;
          cov_14llklcqwl().s[5]++;
          return next(new Error("Authentication token missing"));
        } else
        /* istanbul ignore next */
        {
          cov_14llklcqwl().b[3][1]++;
        }
        const tokenData =
        /* istanbul ignore next */
        (cov_14llklcqwl().s[6]++, await verify(token, config.JWT_SECRET, "HS512"));
        /* istanbul ignore next */
        cov_14llklcqwl().s[7]++;
        if (tokenData instanceof Error) {
          /* istanbul ignore next */
          cov_14llklcqwl().b[4][0]++;
          cov_14llklcqwl().s[8]++;
          return next(new Error("Invalid token"));
        } else
        /* istanbul ignore next */
        {
          cov_14llklcqwl().b[4][1]++;
        }
        const {
          user_id,
          user_type,
          campus_id
        } =
        /* istanbul ignore next */
        (cov_14llklcqwl().s[9]++, tokenData.payload);
        // Get user data
        const user =
        /* istanbul ignore next */
        (cov_14llklcqwl().s[10]++, await UserService.getUser(user_id));
        /* istanbul ignore next */
        cov_14llklcqwl().s[11]++;
        if (!user) {
          /* istanbul ignore next */
          cov_14llklcqwl().b[5][0]++;
          cov_14llklcqwl().s[12]++;
          return next(new Error("User not found"));
        } else
        /* istanbul ignore next */
        {
          cov_14llklcqwl().b[5][1]++;
        }
        // Attach user data to socket
        cov_14llklcqwl().s[13]++;
        socket.data = {
          userId: user_id,
          userType: user_type,
          campusId:
          /* istanbul ignore next */
          (cov_14llklcqwl().b[6][0]++, campus_id) ||
          /* istanbul ignore next */
          (cov_14llklcqwl().b[6][1]++, user.campus_id),
          userName: `${user.first_name} ${user.last_name}`,
          userEmail: user.email
        };
        /* istanbul ignore next */
        cov_14llklcqwl().s[14]++;
        next();
      } catch (_b) {
        /* istanbul ignore next */
        cov_14llklcqwl().s[15]++;
        next(new Error("Authentication failed"));
      }
    });
    /* istanbul ignore next */
    cov_14llklcqwl().s[16]++;
    this.io.on("connection", this.handleConnection.bind(this));
    /* istanbul ignore next */
    cov_14llklcqwl().s[17]++;
    console.log("🔌 Socket.IO server initialized for real-time meeting communication");
  }
  /**
   * Handle new socket connection
   */
  static handleConnection(socket) {
    /* istanbul ignore next */
    cov_14llklcqwl().f[2]++;
    const {
      userId,
      userName
    } =
    /* istanbul ignore next */
    (cov_14llklcqwl().s[18]++, socket.data);
    /* istanbul ignore next */
    cov_14llklcqwl().s[19]++;
    console.log(`👤 User ${userName} (${userId}) connected with socket ${socket.id}`);
    // Store socket mappings
    /* istanbul ignore next */
    cov_14llklcqwl().s[20]++;
    this.activeSockets.set(socket.id, socket);
    /* istanbul ignore next */
    cov_14llklcqwl().s[21]++;
    this.userSockets.set(userId, socket.id);
    /* istanbul ignore next */
    cov_14llklcqwl().s[22]++;
    this.socketUsers.set(socket.id, userId);
    // Register event handlers
    /* istanbul ignore next */
    cov_14llklcqwl().s[23]++;
    this.registerMeetingEvents(socket);
    /* istanbul ignore next */
    cov_14llklcqwl().s[24]++;
    this.registerChatEvents(socket);
    /* istanbul ignore next */
    cov_14llklcqwl().s[25]++;
    this.registerWebRTCEvents(socket);
    /* istanbul ignore next */
    cov_14llklcqwl().s[26]++;
    this.registerPresenceEvents(socket);
    // Handle disconnection
    /* istanbul ignore next */
    cov_14llklcqwl().s[27]++;
    socket.on("disconnect", () => {
      /* istanbul ignore next */
      cov_14llklcqwl().f[3]++;
      cov_14llklcqwl().s[28]++;
      return this.handleDisconnection(socket);
    });
  }
  /**
   * Register meeting-related events
   */
  static registerMeetingEvents(socket) {
    /* istanbul ignore next */
    cov_14llklcqwl().f[4]++;
    const {
      userId,
      userName,
      campusId
    } =
    /* istanbul ignore next */
    (cov_14llklcqwl().s[29]++, socket.data);
    // Join meeting room
    /* istanbul ignore next */
    cov_14llklcqwl().s[30]++;
    socket.on("join-meeting", async data => {
      /* istanbul ignore next */
      cov_14llklcqwl().f[5]++;
      var _a;
      /* istanbul ignore next */
      cov_14llklcqwl().s[31]++;
      try {
        const {
          meetingId,
          meeting_password
        } =
        /* istanbul ignore next */
        (cov_14llklcqwl().s[32]++, data);
        // Verify meeting exists and user has access
        const meeting =
        /* istanbul ignore next */
        (cov_14llklcqwl().s[33]++, await Meeting.findById(meetingId));
        /* istanbul ignore next */
        cov_14llklcqwl().s[34]++;
        if (!meeting) {
          /* istanbul ignore next */
          cov_14llklcqwl().b[7][0]++;
          cov_14llklcqwl().s[35]++;
          socket.emit("error", {
            message: "Meeting not found"
          });
          /* istanbul ignore next */
          cov_14llklcqwl().s[36]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_14llklcqwl().b[7][1]++;
        }
        cov_14llklcqwl().s[37]++;
        if (meeting.campus_id !== campusId) {
          /* istanbul ignore next */
          cov_14llklcqwl().b[8][0]++;
          cov_14llklcqwl().s[38]++;
          socket.emit("error", {
            message: "Access denied"
          });
          /* istanbul ignore next */
          cov_14llklcqwl().s[39]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_14llklcqwl().b[8][1]++;
        }
        // Check password if required
        cov_14llklcqwl().s[40]++;
        if (
        /* istanbul ignore next */
        (cov_14llklcqwl().b[10][0]++, meeting.meeting_password) &&
        /* istanbul ignore next */
        (cov_14llklcqwl().b[10][1]++, meeting.meeting_password !== meeting_password)) {
          /* istanbul ignore next */
          cov_14llklcqwl().b[9][0]++;
          cov_14llklcqwl().s[41]++;
          socket.emit("error", {
            message: "Invalid meeting password"
          });
          /* istanbul ignore next */
          cov_14llklcqwl().s[42]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_14llklcqwl().b[9][1]++;
        }
        // Check if meeting is active
        cov_14llklcqwl().s[43]++;
        if (
        /* istanbul ignore next */
        (cov_14llklcqwl().b[12][0]++, meeting.meeting_status === "ended") ||
        /* istanbul ignore next */
        (cov_14llklcqwl().b[12][1]++, meeting.meeting_status === "cancelled")) {
          /* istanbul ignore next */
          cov_14llklcqwl().b[11][0]++;
          cov_14llklcqwl().s[44]++;
          socket.emit("error", {
            message: "Meeting has ended"
          });
          /* istanbul ignore next */
          cov_14llklcqwl().s[45]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_14llklcqwl().b[11][1]++;
        }
        // Check participant limit
        const currentParticipants =
        /* istanbul ignore next */
        (cov_14llklcqwl().s[46]++,
        /* istanbul ignore next */
        (cov_14llklcqwl().b[13][0]++,
        /* istanbul ignore next */
        (cov_14llklcqwl().b[15][0]++, (_a = this.meetingParticipants.get(meetingId)) === null) ||
        /* istanbul ignore next */
        (cov_14llklcqwl().b[15][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_14llklcqwl().b[14][0]++, void 0) :
        /* istanbul ignore next */
        (cov_14llklcqwl().b[14][1]++, _a.size)) ||
        /* istanbul ignore next */
        (cov_14llklcqwl().b[13][1]++, 0));
        /* istanbul ignore next */
        cov_14llklcqwl().s[47]++;
        if (currentParticipants >= meeting.max_participants) {
          /* istanbul ignore next */
          cov_14llklcqwl().b[16][0]++;
          cov_14llklcqwl().s[48]++;
          socket.emit("error", {
            message: "Meeting is full"
          });
          /* istanbul ignore next */
          cov_14llklcqwl().s[49]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_14llklcqwl().b[16][1]++;
        }
        // Join socket room
        cov_14llklcqwl().s[50]++;
        await socket.join(meetingId);
        // Add to meeting participants
        /* istanbul ignore next */
        cov_14llklcqwl().s[51]++;
        if (!this.meetingParticipants.has(meetingId)) {
          /* istanbul ignore next */
          cov_14llklcqwl().b[17][0]++;
          cov_14llklcqwl().s[52]++;
          this.meetingParticipants.set(meetingId, new Set());
        } else
        /* istanbul ignore next */
        {
          cov_14llklcqwl().b[17][1]++;
        }
        cov_14llklcqwl().s[53]++;
        this.meetingParticipants.get(meetingId).add(socket.id);
        // Create/update participant record
        const participantData =
        /* istanbul ignore next */
        (cov_14llklcqwl().s[54]++, {
          meeting_id: meetingId,
          user_id: userId,
          participant_name: userName,
          participant_email: socket.data.userEmail,
          connection_status: "connected",
          joined_at: new Date(),
          peer_connection_id: uuidv4(),
          socket_id: socket.id,
          ip_address: socket.handshake.address,
          user_agent:
          /* istanbul ignore next */
          (cov_14llklcqwl().b[18][0]++, socket.handshake.headers["user-agent"]) ||
          /* istanbul ignore next */
          (cov_14llklcqwl().b[18][1]++, ""),
          permissions: {
            can_share_screen: true,
            can_use_chat: true,
            can_use_whiteboard: true,
            is_moderator: meeting.creator_id === userId,
            is_host: meeting.creator_id === userId
          }
        });
        const participant =
        /* istanbul ignore next */
        (cov_14llklcqwl().s[55]++, await MeetingParticipant.create(participantData));
        // Update meeting status to live if not already
        /* istanbul ignore next */
        cov_14llklcqwl().s[56]++;
        if (meeting.meeting_status === "scheduled") {
          /* istanbul ignore next */
          cov_14llklcqwl().b[19][0]++;
          cov_14llklcqwl().s[57]++;
          await Meeting.updateById(meetingId, {
            meeting_status: "live",
            updated_at: new Date()
          });
        } else
        /* istanbul ignore next */
        {
          cov_14llklcqwl().b[19][1]++;
        }
        // Create WebRTC router if this is the first participant
        cov_14llklcqwl().s[58]++;
        if (currentParticipants === 0) {
          /* istanbul ignore next */
          cov_14llklcqwl().b[20][0]++;
          cov_14llklcqwl().s[59]++;
          await WebRTCService.createMeetingRouter(meetingId);
        } else
        /* istanbul ignore next */
        {
          cov_14llklcqwl().b[20][1]++;
        }
        // Notify existing participants
        cov_14llklcqwl().s[60]++;
        socket.to(meetingId).emit("participant-joined", {
          participantId: participant.id,
          userName,
          userId,
          permissions: participantData.permissions
        });
        // Send meeting info to new participant
        const existingParticipants =
        /* istanbul ignore next */
        (cov_14llklcqwl().s[61]++, await this.getMeetingParticipants(meetingId));
        /* istanbul ignore next */
        cov_14llklcqwl().s[62]++;
        socket.emit("meeting-joined", {
          meeting,
          participantId: participant.id,
          participants: existingParticipants,
          webrtcConfig: meeting.webrtc_config
        });
        /* istanbul ignore next */
        cov_14llklcqwl().s[63]++;
        console.log(`✅ ${userName} joined meeting ${meetingId}`);
      } catch (error) {
        /* istanbul ignore next */
        cov_14llklcqwl().s[64]++;
        console.error("Error joining meeting:", error);
        /* istanbul ignore next */
        cov_14llklcqwl().s[65]++;
        socket.emit("error", {
          message: "Failed to join meeting"
        });
      }
    });
    // Leave meeting
    /* istanbul ignore next */
    cov_14llklcqwl().s[66]++;
    socket.on("leave-meeting", async data => {
      /* istanbul ignore next */
      cov_14llklcqwl().f[6]++;
      cov_14llklcqwl().s[67]++;
      await this.handleLeaveMeeting(socket, data.meetingId);
    });
    // Start/stop recording
    /* istanbul ignore next */
    cov_14llklcqwl().s[68]++;
    socket.on("toggle-recording", async data => {
      /* istanbul ignore next */
      cov_14llklcqwl().f[7]++;
      cov_14llklcqwl().s[69]++;
      try {
        const {
          meetingId,
          start
        } =
        /* istanbul ignore next */
        (cov_14llklcqwl().s[70]++, data);
        // Verify user is host/moderator
        const participant =
        /* istanbul ignore next */
        (cov_14llklcqwl().s[71]++, await this.getParticipantBySocket(socket.id));
        /* istanbul ignore next */
        cov_14llklcqwl().s[72]++;
        if (
        /* istanbul ignore next */
        (cov_14llklcqwl().b[22][0]++, !(
        /* istanbul ignore next */
        (cov_14llklcqwl().b[24][0]++, participant === null) ||
        /* istanbul ignore next */
        (cov_14llklcqwl().b[24][1]++, participant === void 0) ?
        /* istanbul ignore next */
        (cov_14llklcqwl().b[23][0]++, void 0) :
        /* istanbul ignore next */
        (cov_14llklcqwl().b[23][1]++, participant.permissions.is_host))) &&
        /* istanbul ignore next */
        (cov_14llklcqwl().b[22][1]++, !(
        /* istanbul ignore next */
        (cov_14llklcqwl().b[26][0]++, participant === null) ||
        /* istanbul ignore next */
        (cov_14llklcqwl().b[26][1]++, participant === void 0) ?
        /* istanbul ignore next */
        (cov_14llklcqwl().b[25][0]++, void 0) :
        /* istanbul ignore next */
        (cov_14llklcqwl().b[25][1]++, participant.permissions.is_moderator)))) {
          /* istanbul ignore next */
          cov_14llklcqwl().b[21][0]++;
          cov_14llklcqwl().s[73]++;
          socket.emit("error", {
            message: "Only hosts can control recording"
          });
          /* istanbul ignore next */
          cov_14llklcqwl().s[74]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_14llklcqwl().b[21][1]++;
        }
        // Update meeting recording status
        cov_14llklcqwl().s[75]++;
        await Meeting.updateById(meetingId, {
          "recording_config.auto_record": start,
          updated_at: new Date()
        });
        // Notify all participants
        /* istanbul ignore next */
        cov_14llklcqwl().s[76]++;
        this.io.to(meetingId).emit("recording-status-changed", {
          recording: start
        });
        /* istanbul ignore next */
        cov_14llklcqwl().s[77]++;
        console.log(`🎥 Recording ${start ?
        /* istanbul ignore next */
        (cov_14llklcqwl().b[27][0]++, "started") :
        /* istanbul ignore next */
        (cov_14llklcqwl().b[27][1]++, "stopped")} for meeting ${meetingId}`);
      } catch (error) {
        /* istanbul ignore next */
        cov_14llklcqwl().s[78]++;
        console.error("Error toggling recording:", error);
        /* istanbul ignore next */
        cov_14llklcqwl().s[79]++;
        socket.emit("error", {
          message: "Failed to toggle recording"
        });
      }
    });
    // Mute/unmute participant
    /* istanbul ignore next */
    cov_14llklcqwl().s[80]++;
    socket.on("mute-participant", async data => {
      /* istanbul ignore next */
      cov_14llklcqwl().f[8]++;
      cov_14llklcqwl().s[81]++;
      try {
        const {
          meetingId,
          participantId,
          mute
        } =
        /* istanbul ignore next */
        (cov_14llklcqwl().s[82]++, data);
        // Verify user is host/moderator
        const requester =
        /* istanbul ignore next */
        (cov_14llklcqwl().s[83]++, await this.getParticipantBySocket(socket.id));
        /* istanbul ignore next */
        cov_14llklcqwl().s[84]++;
        if (
        /* istanbul ignore next */
        (cov_14llklcqwl().b[29][0]++, !(
        /* istanbul ignore next */
        (cov_14llklcqwl().b[31][0]++, requester === null) ||
        /* istanbul ignore next */
        (cov_14llklcqwl().b[31][1]++, requester === void 0) ?
        /* istanbul ignore next */
        (cov_14llklcqwl().b[30][0]++, void 0) :
        /* istanbul ignore next */
        (cov_14llklcqwl().b[30][1]++, requester.permissions.is_host))) &&
        /* istanbul ignore next */
        (cov_14llklcqwl().b[29][1]++, !(
        /* istanbul ignore next */
        (cov_14llklcqwl().b[33][0]++, requester === null) ||
        /* istanbul ignore next */
        (cov_14llklcqwl().b[33][1]++, requester === void 0) ?
        /* istanbul ignore next */
        (cov_14llklcqwl().b[32][0]++, void 0) :
        /* istanbul ignore next */
        (cov_14llklcqwl().b[32][1]++, requester.permissions.is_moderator)))) {
          /* istanbul ignore next */
          cov_14llklcqwl().b[28][0]++;
          cov_14llklcqwl().s[85]++;
          socket.emit("error", {
            message: "Only hosts can mute participants"
          });
          /* istanbul ignore next */
          cov_14llklcqwl().s[86]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_14llklcqwl().b[28][1]++;
        }
        // Update participant media status
        cov_14llklcqwl().s[87]++;
        await MeetingParticipant.updateById(participantId, {
          "media_status.is_muted_by_host": mute,
          updated_at: new Date()
        });
        // Notify the participant
        const targetParticipant =
        /* istanbul ignore next */
        (cov_14llklcqwl().s[88]++, await MeetingParticipant.findById(participantId));
        /* istanbul ignore next */
        cov_14llklcqwl().s[89]++;
        if (targetParticipant) {
          /* istanbul ignore next */
          cov_14llklcqwl().b[34][0]++;
          const targetSocketId =
          /* istanbul ignore next */
          (cov_14llklcqwl().s[90]++, this.userSockets.get(targetParticipant.user_id));
          /* istanbul ignore next */
          cov_14llklcqwl().s[91]++;
          if (targetSocketId) {
            /* istanbul ignore next */
            cov_14llklcqwl().b[35][0]++;
            cov_14llklcqwl().s[92]++;
            this.io.to(targetSocketId).emit("muted-by-host", {
              muted: mute
            });
          } else
          /* istanbul ignore next */
          {
            cov_14llklcqwl().b[35][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_14llklcqwl().b[34][1]++;
        }
        // Notify all participants
        cov_14llklcqwl().s[93]++;
        this.io.to(meetingId).emit("participant-muted", {
          participantId,
          muted: mute
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_14llklcqwl().s[94]++;
        console.error("Error muting participant:", error);
        /* istanbul ignore next */
        cov_14llklcqwl().s[95]++;
        socket.emit("error", {
          message: "Failed to mute participant"
        });
      }
    });
  }
  /**
   * Register chat events
   */
  static registerChatEvents(socket) {
    /* istanbul ignore next */
    cov_14llklcqwl().f[9]++;
    const {
      userId,
      userName
    } =
    /* istanbul ignore next */
    (cov_14llklcqwl().s[96]++, socket.data);
    // Send chat message
    /* istanbul ignore next */
    cov_14llklcqwl().s[97]++;
    socket.on("send-message", async data => {
      /* istanbul ignore next */
      cov_14llklcqwl().f[10]++;
      cov_14llklcqwl().s[98]++;
      try {
        const {
          meetingId,
          message,
          recipientType,
          recipientId
        } =
        /* istanbul ignore next */
        (cov_14llklcqwl().s[99]++, data);
        // Verify user is in the meeting
        const rooms =
        /* istanbul ignore next */
        (cov_14llklcqwl().s[100]++, [...socket.rooms]);
        /* istanbul ignore next */
        cov_14llklcqwl().s[101]++;
        if (!rooms.includes(meetingId)) {
          /* istanbul ignore next */
          cov_14llklcqwl().b[36][0]++;
          cov_14llklcqwl().s[102]++;
          socket.emit("error", {
            message: "Not in meeting"
          });
          /* istanbul ignore next */
          cov_14llklcqwl().s[103]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_14llklcqwl().b[36][1]++;
        }
        // Create chat message
        const chatMessage =
        /* istanbul ignore next */
        (cov_14llklcqwl().s[104]++, await MeetingChat.create({
          meeting_id: meetingId,
          sender_id: userId,
          sender_name: userName,
          message,
          message_type: "text",
          recipient_type: recipientType,
          recipient_id: recipientId,
          timestamp: new Date()
        }));
        // Send to appropriate recipients
        /* istanbul ignore next */
        cov_14llklcqwl().s[105]++;
        if (recipientType === "all") {
          /* istanbul ignore next */
          cov_14llklcqwl().b[37][0]++;
          cov_14llklcqwl().s[106]++;
          this.io.to(meetingId).emit("new-message", chatMessage);
        } else {
          /* istanbul ignore next */
          cov_14llklcqwl().b[37][1]++;
          cov_14llklcqwl().s[107]++;
          if (
          /* istanbul ignore next */
          (cov_14llklcqwl().b[39][0]++, recipientType === "private") &&
          /* istanbul ignore next */
          (cov_14llklcqwl().b[39][1]++, recipientId)) {
            /* istanbul ignore next */
            cov_14llklcqwl().b[38][0]++;
            const recipientSocketId =
            /* istanbul ignore next */
            (cov_14llklcqwl().s[108]++, this.userSockets.get(recipientId));
            /* istanbul ignore next */
            cov_14llklcqwl().s[109]++;
            if (recipientSocketId) {
              /* istanbul ignore next */
              cov_14llklcqwl().b[40][0]++;
              cov_14llklcqwl().s[110]++;
              this.io.to(recipientSocketId).emit("new-message", chatMessage);
              /* istanbul ignore next */
              cov_14llklcqwl().s[111]++;
              socket.emit("new-message", chatMessage); // Send to sender too
            } else
            /* istanbul ignore next */
            {
              cov_14llklcqwl().b[40][1]++;
            }
          } else {
            /* istanbul ignore next */
            cov_14llklcqwl().b[38][1]++;
            cov_14llklcqwl().s[112]++;
            if (recipientType === "host") {
              /* istanbul ignore next */
              cov_14llklcqwl().b[41][0]++;
              // Send to all hosts/moderators
              const participants =
              /* istanbul ignore next */
              (cov_14llklcqwl().s[113]++, await this.getMeetingParticipants(meetingId));
              /* istanbul ignore next */
              cov_14llklcqwl().s[114]++;
              for (const participant of participants) {
                /* istanbul ignore next */
                cov_14llklcqwl().s[115]++;
                if (
                /* istanbul ignore next */
                (cov_14llklcqwl().b[43][0]++, participant.permissions.is_host) ||
                /* istanbul ignore next */
                (cov_14llklcqwl().b[43][1]++, participant.permissions.is_moderator)) {
                  /* istanbul ignore next */
                  cov_14llklcqwl().b[42][0]++;
                  const socketId =
                  /* istanbul ignore next */
                  (cov_14llklcqwl().s[116]++, this.userSockets.get(participant.user_id));
                  /* istanbul ignore next */
                  cov_14llklcqwl().s[117]++;
                  if (socketId) {
                    /* istanbul ignore next */
                    cov_14llklcqwl().b[44][0]++;
                    cov_14llklcqwl().s[118]++;
                    this.io.to(socketId).emit("new-message", chatMessage);
                  } else
                  /* istanbul ignore next */
                  {
                    cov_14llklcqwl().b[44][1]++;
                  }
                } else
                /* istanbul ignore next */
                {
                  cov_14llklcqwl().b[42][1]++;
                }
              }
            } else
            /* istanbul ignore next */
            {
              cov_14llklcqwl().b[41][1]++;
            }
          }
        }
        // Update meeting analytics
        /* istanbul ignore next */
        cov_14llklcqwl().s[119]++;
        await Meeting.updateById(meetingId, {
          "analytics.chat_messages_count": {
            $inc: 1
          },
          updated_at: new Date()
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_14llklcqwl().s[120]++;
        console.error("Error sending chat message:", error);
        /* istanbul ignore next */
        cov_14llklcqwl().s[121]++;
        socket.emit("error", {
          message: "Failed to send message"
        });
      }
    });
    // Typing indicator
    /* istanbul ignore next */
    cov_14llklcqwl().s[122]++;
    socket.on("typing", data => {
      /* istanbul ignore next */
      cov_14llklcqwl().f[11]++;
      const {
        meetingId,
        typing
      } =
      /* istanbul ignore next */
      (cov_14llklcqwl().s[123]++, data);
      /* istanbul ignore next */
      cov_14llklcqwl().s[124]++;
      socket.to(meetingId).emit("user-typing", {
        userId: socket.data.userId,
        userName: socket.data.userName,
        typing
      });
    });
  }
  /**
   * Register WebRTC signaling events
   */
  static registerWebRTCEvents(socket) {
    /* istanbul ignore next */
    cov_14llklcqwl().f[12]++;
    cov_14llklcqwl().s[125]++;
    // Create WebRTC transport
    socket.on("create-transport", async data => {
      /* istanbul ignore next */
      cov_14llklcqwl().f[13]++;
      cov_14llklcqwl().s[126]++;
      try {
        const {
          meetingId,
          direction
        } =
        /* istanbul ignore next */
        (cov_14llklcqwl().s[127]++, data);
        const participantId =
        /* istanbul ignore next */
        (cov_14llklcqwl().s[128]++, socket.data.userId);
        const {
          transport,
          params
        } =
        /* istanbul ignore next */
        (cov_14llklcqwl().s[129]++, await WebRTCService.createWebRtcTransport(meetingId, participantId, direction));
        /* istanbul ignore next */
        cov_14llklcqwl().s[130]++;
        socket.emit("transport-created", {
          direction,
          params
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_14llklcqwl().s[131]++;
        console.error("Error creating transport:", error);
        /* istanbul ignore next */
        cov_14llklcqwl().s[132]++;
        socket.emit("error", {
          message: "Failed to create transport"
        });
      }
    });
    // Connect transport
    /* istanbul ignore next */
    cov_14llklcqwl().s[133]++;
    socket.on("connect-transport", async data => {
      /* istanbul ignore next */
      cov_14llklcqwl().f[14]++;
      cov_14llklcqwl().s[134]++;
      try {
        /* istanbul ignore next */
        cov_14llklcqwl().s[135]++;
        await WebRTCService.connectTransport(data.transportId, data.dtlsParameters);
        /* istanbul ignore next */
        cov_14llklcqwl().s[136]++;
        socket.emit("transport-connected", {
          transportId: data.transportId
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_14llklcqwl().s[137]++;
        console.error("Error connecting transport:", error);
        /* istanbul ignore next */
        cov_14llklcqwl().s[138]++;
        socket.emit("error", {
          message: "Failed to connect transport"
        });
      }
    });
    // Start producing media
    /* istanbul ignore next */
    cov_14llklcqwl().s[139]++;
    socket.on("produce", async data => {
      /* istanbul ignore next */
      cov_14llklcqwl().f[15]++;
      cov_14llklcqwl().s[140]++;
      try {
        const {
          meetingId,
          kind,
          rtpParameters
        } =
        /* istanbul ignore next */
        (cov_14llklcqwl().s[141]++, data);
        const participantId =
        /* istanbul ignore next */
        (cov_14llklcqwl().s[142]++, socket.data.userId);
        const {
          id
        } =
        /* istanbul ignore next */
        (cov_14llklcqwl().s[143]++, await WebRTCService.produce(meetingId, participantId, rtpParameters, kind));
        /* istanbul ignore next */
        cov_14llklcqwl().s[144]++;
        socket.emit("produced", {
          kind,
          producerId: id
        });
        // Notify other participants
        /* istanbul ignore next */
        cov_14llklcqwl().s[145]++;
        socket.to(meetingId).emit("new-producer", {
          participantId,
          producerId: id,
          kind
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_14llklcqwl().s[146]++;
        console.error("Error producing media:", error);
        /* istanbul ignore next */
        cov_14llklcqwl().s[147]++;
        socket.emit("error", {
          message: "Failed to produce media"
        });
      }
    });
    // Start consuming media
    /* istanbul ignore next */
    cov_14llklcqwl().s[148]++;
    socket.on("consume", async data => {
      /* istanbul ignore next */
      cov_14llklcqwl().f[16]++;
      cov_14llklcqwl().s[149]++;
      try {
        const {
          meetingId,
          producerParticipantId,
          kind,
          rtpCapabilities
        } =
        /* istanbul ignore next */
        (cov_14llklcqwl().s[150]++, data);
        const consumerParticipantId =
        /* istanbul ignore next */
        (cov_14llklcqwl().s[151]++, socket.data.userId);
        const consumerData =
        /* istanbul ignore next */
        (cov_14llklcqwl().s[152]++, await WebRTCService.consume(meetingId, consumerParticipantId, producerParticipantId, rtpCapabilities, kind));
        /* istanbul ignore next */
        cov_14llklcqwl().s[153]++;
        socket.emit("consumed", Object.assign(Object.assign({}, consumerData), {
          kind,
          producerParticipantId
        }));
      } catch (error) {
        /* istanbul ignore next */
        cov_14llklcqwl().s[154]++;
        console.error("Error consuming media:", error);
        /* istanbul ignore next */
        cov_14llklcqwl().s[155]++;
        socket.emit("error", {
          message: "Failed to consume media"
        });
      }
    });
    // Resume/pause consumer
    /* istanbul ignore next */
    cov_14llklcqwl().s[156]++;
    socket.on("resume-consumer", async data => {
      /* istanbul ignore next */
      cov_14llklcqwl().f[17]++;
      cov_14llklcqwl().s[157]++;
      try {
        /* istanbul ignore next */
        cov_14llklcqwl().s[158]++;
        await WebRTCService.resumeConsumer(data.consumerId);
        /* istanbul ignore next */
        cov_14llklcqwl().s[159]++;
        socket.emit("consumer-resumed", {
          consumerId: data.consumerId
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_14llklcqwl().s[160]++;
        console.error("Error resuming consumer:", error);
      }
    });
    /* istanbul ignore next */
    cov_14llklcqwl().s[161]++;
    socket.on("pause-consumer", async data => {
      /* istanbul ignore next */
      cov_14llklcqwl().f[18]++;
      cov_14llklcqwl().s[162]++;
      try {
        /* istanbul ignore next */
        cov_14llklcqwl().s[163]++;
        await WebRTCService.pauseConsumer(data.consumerId);
        /* istanbul ignore next */
        cov_14llklcqwl().s[164]++;
        socket.emit("consumer-paused", {
          consumerId: data.consumerId
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_14llklcqwl().s[165]++;
        console.error("Error pausing consumer:", error);
      }
    });
  }
  /**
   * Register presence and interaction events
   */
  static registerPresenceEvents(socket) {
    /* istanbul ignore next */
    cov_14llklcqwl().f[19]++;
    const {
      userId,
      userName
    } =
    /* istanbul ignore next */
    (cov_14llklcqwl().s[166]++, socket.data);
    // Hand raise/lower
    /* istanbul ignore next */
    cov_14llklcqwl().s[167]++;
    socket.on("raise-hand", async data => {
      /* istanbul ignore next */
      cov_14llklcqwl().f[20]++;
      const {
        meetingId,
        raised
      } =
      /* istanbul ignore next */
      (cov_14llklcqwl().s[168]++, data);
      /* istanbul ignore next */
      cov_14llklcqwl().s[169]++;
      socket.to(meetingId).emit("hand-raised", {
        participantId: userId,
        userName,
        raised,
        timestamp: new Date()
      });
    });
    // Reactions (👍, 👏, ❤️, etc.)
    /* istanbul ignore next */
    cov_14llklcqwl().s[170]++;
    socket.on("send-reaction", async data => {
      /* istanbul ignore next */
      cov_14llklcqwl().f[21]++;
      const {
        meetingId,
        reaction
      } =
      /* istanbul ignore next */
      (cov_14llklcqwl().s[171]++, data);
      /* istanbul ignore next */
      cov_14llklcqwl().s[172]++;
      this.io.to(meetingId).emit("participant-reaction", {
        participantId: userId,
        userName,
        reaction,
        timestamp: new Date()
      });
    });
    // Media status updates
    /* istanbul ignore next */
    cov_14llklcqwl().s[173]++;
    socket.on("media-status-update", async data => {
      /* istanbul ignore next */
      cov_14llklcqwl().f[22]++;
      cov_14llklcqwl().s[174]++;
      try {
        const {
          meetingId,
          video,
          audio,
          screenSharing
        } =
        /* istanbul ignore next */
        (cov_14llklcqwl().s[175]++, data);
        // Update participant record
        const participant =
        /* istanbul ignore next */
        (cov_14llklcqwl().s[176]++, await this.getParticipantBySocket(socket.id));
        /* istanbul ignore next */
        cov_14llklcqwl().s[177]++;
        if (participant) {
          /* istanbul ignore next */
          cov_14llklcqwl().b[45][0]++;
          cov_14llklcqwl().s[178]++;
          await MeetingParticipant.updateById(participant.id, {
            "media_status.video_enabled": video,
            "media_status.audio_enabled": audio,
            "media_status.screen_sharing": screenSharing,
            updated_at: new Date()
          });
        } else
        /* istanbul ignore next */
        {
          cov_14llklcqwl().b[45][1]++;
        }
        // Notify other participants
        cov_14llklcqwl().s[179]++;
        socket.to(meetingId).emit("participant-media-updated", {
          participantId: userId,
          video,
          audio,
          screenSharing
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_14llklcqwl().s[180]++;
        console.error("Error updating media status:", error);
      }
    });
  }
  /**
   * Handle socket disconnection
   */
  static async handleDisconnection(socket) {
    /* istanbul ignore next */
    cov_14llklcqwl().f[23]++;
    const {
      userId,
      userName
    } =
    /* istanbul ignore next */
    (cov_14llklcqwl().s[181]++, socket.data);
    /* istanbul ignore next */
    cov_14llklcqwl().s[182]++;
    console.log(`👋 User ${userName} (${userId}) disconnected`);
    // Clean up socket mappings
    /* istanbul ignore next */
    cov_14llklcqwl().s[183]++;
    this.activeSockets.delete(socket.id);
    /* istanbul ignore next */
    cov_14llklcqwl().s[184]++;
    this.userSockets.delete(userId);
    /* istanbul ignore next */
    cov_14llklcqwl().s[185]++;
    this.socketUsers.delete(socket.id);
    // Handle leaving all meetings
    const rooms =
    /* istanbul ignore next */
    (cov_14llklcqwl().s[186]++, [...socket.rooms]);
    /* istanbul ignore next */
    cov_14llklcqwl().s[187]++;
    for (const room of rooms) {
      /* istanbul ignore next */
      cov_14llklcqwl().s[188]++;
      if (room !== socket.id) {
        /* istanbul ignore next */
        cov_14llklcqwl().b[46][0]++;
        cov_14llklcqwl().s[189]++;
        // Skip socket's own room
        await this.handleLeaveMeeting(socket, room);
      } else
      /* istanbul ignore next */
      {
        cov_14llklcqwl().b[46][1]++;
      }
    }
  }
  /**
   * Handle leaving a meeting
   */
  static async handleLeaveMeeting(socket, meetingId) {
    /* istanbul ignore next */
    cov_14llklcqwl().f[24]++;
    var _a, _b;
    /* istanbul ignore next */
    cov_14llklcqwl().s[190]++;
    try {
      const {
        userId,
        userName
      } =
      /* istanbul ignore next */
      (cov_14llklcqwl().s[191]++, socket.data);
      // Remove from socket room
      /* istanbul ignore next */
      cov_14llklcqwl().s[192]++;
      await socket.leave(meetingId);
      // Remove from meeting participants
      /* istanbul ignore next */
      cov_14llklcqwl().s[193]++;
      /* istanbul ignore next */
      (cov_14llklcqwl().b[48][0]++, (_a = this.meetingParticipants.get(meetingId)) === null) ||
      /* istanbul ignore next */
      (cov_14llklcqwl().b[48][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_14llklcqwl().b[47][0]++, void 0) :
      /* istanbul ignore next */
      (cov_14llklcqwl().b[47][1]++, _a.delete(socket.id));
      // Handle WebRTC cleanup
      /* istanbul ignore next */
      cov_14llklcqwl().s[194]++;
      await WebRTCService.handleParticipantDisconnect(meetingId, userId);
      // Notify other participants
      /* istanbul ignore next */
      cov_14llklcqwl().s[195]++;
      socket.to(meetingId).emit("participant-left", {
        participantId: userId,
        userName
      });
      // Check if meeting should be ended (no participants left)
      const remainingParticipants =
      /* istanbul ignore next */
      (cov_14llklcqwl().s[196]++,
      /* istanbul ignore next */
      (cov_14llklcqwl().b[49][0]++,
      /* istanbul ignore next */
      (cov_14llklcqwl().b[51][0]++, (_b = this.meetingParticipants.get(meetingId)) === null) ||
      /* istanbul ignore next */
      (cov_14llklcqwl().b[51][1]++, _b === void 0) ?
      /* istanbul ignore next */
      (cov_14llklcqwl().b[50][0]++, void 0) :
      /* istanbul ignore next */
      (cov_14llklcqwl().b[50][1]++, _b.size)) ||
      /* istanbul ignore next */
      (cov_14llklcqwl().b[49][1]++, 0));
      /* istanbul ignore next */
      cov_14llklcqwl().s[197]++;
      if (remainingParticipants === 0) {
        /* istanbul ignore next */
        cov_14llklcqwl().b[52][0]++;
        cov_14llklcqwl().s[198]++;
        await WebRTCService.closeMeetingRoom(meetingId);
        /* istanbul ignore next */
        cov_14llklcqwl().s[199]++;
        this.meetingParticipants.delete(meetingId);
      } else
      /* istanbul ignore next */
      {
        cov_14llklcqwl().b[52][1]++;
      }
      cov_14llklcqwl().s[200]++;
      console.log(`👋 ${userName} left meeting ${meetingId}`);
    } catch (error) {
      /* istanbul ignore next */
      cov_14llklcqwl().s[201]++;
      console.error("Error leaving meeting:", error);
    }
  }
  /**
   * Get participant by socket ID
   */
  static async getParticipantBySocket(socketId) {
    /* istanbul ignore next */
    cov_14llklcqwl().f[25]++;
    var _a;
    const userId =
    /* istanbul ignore next */
    (cov_14llklcqwl().s[202]++, this.socketUsers.get(socketId));
    /* istanbul ignore next */
    cov_14llklcqwl().s[203]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_14llklcqwl().b[53][0]++;
      cov_14llklcqwl().s[204]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_14llklcqwl().b[53][1]++;
    }
    const participants =
    /* istanbul ignore next */
    (cov_14llklcqwl().s[205]++, await MeetingParticipant.find({
      user_id: userId
    }));
    /* istanbul ignore next */
    cov_14llklcqwl().s[206]++;
    return /* istanbul ignore next */(cov_14llklcqwl().b[54][0]++,
    /* istanbul ignore next */
    (cov_14llklcqwl().b[56][0]++, (_a = participants.rows) === null) ||
    /* istanbul ignore next */
    (cov_14llklcqwl().b[56][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_14llklcqwl().b[55][0]++, void 0) :
    /* istanbul ignore next */
    (cov_14llklcqwl().b[55][1]++, _a[0])) ||
    /* istanbul ignore next */
    (cov_14llklcqwl().b[54][1]++, null);
  }
  /**
   * Get all participants in a meeting
   */
  static async getMeetingParticipants(meetingId) {
    /* istanbul ignore next */
    cov_14llklcqwl().f[26]++;
    const participants =
    /* istanbul ignore next */
    (cov_14llklcqwl().s[207]++, await MeetingParticipant.find({
      meeting_id: meetingId,
      connection_status: "connected"
    }));
    /* istanbul ignore next */
    cov_14llklcqwl().s[208]++;
    return /* istanbul ignore next */(cov_14llklcqwl().b[57][0]++, participants.rows) ||
    /* istanbul ignore next */
    (cov_14llklcqwl().b[57][1]++, []);
  }
  /**
   * Send message to specific user
   */
  static sendToUser(userId, event, data) {
    /* istanbul ignore next */
    cov_14llklcqwl().f[27]++;
    const socketId =
    /* istanbul ignore next */
    (cov_14llklcqwl().s[209]++, this.userSockets.get(userId));
    /* istanbul ignore next */
    cov_14llklcqwl().s[210]++;
    if (socketId) {
      /* istanbul ignore next */
      cov_14llklcqwl().b[58][0]++;
      const socket =
      /* istanbul ignore next */
      (cov_14llklcqwl().s[211]++, this.activeSockets.get(socketId));
      /* istanbul ignore next */
      cov_14llklcqwl().s[212]++;
      if (socket) {
        /* istanbul ignore next */
        cov_14llklcqwl().b[59][0]++;
        cov_14llklcqwl().s[213]++;
        socket.emit(event, data);
      } else
      /* istanbul ignore next */
      {
        cov_14llklcqwl().b[59][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_14llklcqwl().b[58][1]++;
    }
  }
  /**
   * Send message to all participants in a meeting
   */
  static sendToMeeting(meetingId, event, data) {
    /* istanbul ignore next */
    cov_14llklcqwl().f[28]++;
    cov_14llklcqwl().s[214]++;
    this.io.to(meetingId).emit(event, data);
  }
  /**
   * Notify all participants in a meeting (like Microsoft Teams notifications)
   */
  static async notifyMeetingParticipants(meetingId, notification) {
    /* istanbul ignore next */
    cov_14llklcqwl().f[29]++;
    cov_14llklcqwl().s[215]++;
    try {
      const participantSockets =
      /* istanbul ignore next */
      (cov_14llklcqwl().s[216]++, this.meetingParticipants.get(meetingId));
      /* istanbul ignore next */
      cov_14llklcqwl().s[217]++;
      if (participantSockets) {
        /* istanbul ignore next */
        cov_14llklcqwl().b[60][0]++;
        cov_14llklcqwl().s[218]++;
        for (const socketId of participantSockets) {
          const socket =
          /* istanbul ignore next */
          (cov_14llklcqwl().s[219]++, this.activeSockets.get(socketId));
          /* istanbul ignore next */
          cov_14llklcqwl().s[220]++;
          if (
          /* istanbul ignore next */
          (cov_14llklcqwl().b[62][0]++, socket) && (
          /* istanbul ignore next */
          (cov_14llklcqwl().b[62][1]++, !notification.exclude) ||
          /* istanbul ignore next */
          (cov_14llklcqwl().b[62][2]++, !notification.exclude.includes(socket.data.userId)))) {
            /* istanbul ignore next */
            cov_14llklcqwl().b[61][0]++;
            cov_14llklcqwl().s[221]++;
            socket.emit("meeting_notification", notification);
          } else
          /* istanbul ignore next */
          {
            cov_14llklcqwl().b[61][1]++;
          }
        }
      } else
      /* istanbul ignore next */
      {
        cov_14llklcqwl().b[60][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_14llklcqwl().s[222]++;
      console.error("Error notifying meeting participants:", error);
    }
  }
  /**
   * Notify specific participants by their IDs
   */
  static async notifySpecificParticipants(participantIds, notification) {
    /* istanbul ignore next */
    cov_14llklcqwl().f[30]++;
    cov_14llklcqwl().s[223]++;
    try {
      /* istanbul ignore next */
      cov_14llklcqwl().s[224]++;
      for (const userId of participantIds) {
        const socketId =
        /* istanbul ignore next */
        (cov_14llklcqwl().s[225]++, this.userSockets.get(userId));
        /* istanbul ignore next */
        cov_14llklcqwl().s[226]++;
        if (socketId) {
          /* istanbul ignore next */
          cov_14llklcqwl().b[63][0]++;
          const socket =
          /* istanbul ignore next */
          (cov_14llklcqwl().s[227]++, this.activeSockets.get(socketId));
          /* istanbul ignore next */
          cov_14llklcqwl().s[228]++;
          if (socket) {
            /* istanbul ignore next */
            cov_14llklcqwl().b[64][0]++;
            cov_14llklcqwl().s[229]++;
            socket.emit("participant_notification", notification);
          } else
          /* istanbul ignore next */
          {
            cov_14llklcqwl().b[64][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_14llklcqwl().b[63][1]++;
        }
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_14llklcqwl().s[230]++;
      console.error("Error notifying specific participants:", error);
    }
  }
  /**
   * Get real-time statistics
   */
  static getStats() {
    /* istanbul ignore next */
    cov_14llklcqwl().f[31]++;
    cov_14llklcqwl().s[231]++;
    return {
      connectedUsers: this.userSockets.size,
      activeMeetings: this.meetingParticipants.size,
      totalSockets: this.activeSockets.size
    };
  }
}
/* istanbul ignore next */
cov_14llklcqwl().s[232]++;
SocketService.activeSockets = new Map();
/* istanbul ignore next */
cov_14llklcqwl().s[233]++;
SocketService.userSockets = new Map(); // userId -> socketId
/* istanbul ignore next */
cov_14llklcqwl().s[234]++;
SocketService.socketUsers = new Map(); // socketId -> userId
/* istanbul ignore next */
cov_14llklcqwl().s[235]++;
SocketService.meetingParticipants = new Map(); // meetingId -> socketIds